2019-06-13 09:05:31.583  INFO 5764 --- [main] c.b.c.ClouddoAdminApplication            : No active profile set, falling back to default profiles: default
2019-06-13 09:05:31.645  INFO 5764 --- [main] ConfigServletWebServerApplicationContext : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@47f9738: startup date [Thu Jun 13 09:05:31 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@5dda768f
2019-06-13 09:05:41.913  INFO 5764 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-13 09:05:42.616  INFO 5764 --- [main] o.s.cloud.context.scope.GenericScope     : BeanFactory id=1c774fab-2f18-3dff-8fab-5ac3d64963da
2019-06-13 09:05:42.648  INFO 5764 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-06-13 09:05:42.882  INFO 5764 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$94d0cb72] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 09:05:43.195  INFO 5764 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.bootdo.clouddoadmin.config.RedisConfig$$EnhancerBySpringCGLIB$$b77e14c3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 09:05:43.210  INFO 5764 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.bootdo.clouddoadmin.config.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 09:05:43.288  INFO 5764 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$b0eace6f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 09:05:43.710  INFO 5764 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8005 (http)
2019-06-13 09:05:43.726  INFO 5764 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2019-06-13 09:05:43.726  INFO 5764 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.32
2019-06-13 09:05:43.741  INFO 5764 --- [localhost-startStop-1] o.a.catalina.core.AprLifecycleListener   : The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_181\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;C:;C:\Program Files\Java\jdk1.8.0_181\bin;D:\myApps\apache-maven-3.6.0\bin;C:\Program Files\Java\jdk1.8.0_181\jre\bin;C:\Program Files\Java\jdk1.8.0_181\bin ;C:\Program Files\TortoiseGit\bin;C:\windows\system32;C:\windows;C:\windows\system32\wbem;D:\StudyTools\XAMPP\mysql\bin;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;D:\系统工具\Git\cmd;D:\StudyTools\NodeJs\;D:\StudyTools\Elang\erl10.0.1\bin;D:\StudyTools\RabbitMQ Server\rabbitmq_server-3.7.7\sbin;;D:\StudyTools\DockerToolbox;D:\StudyTools\NodeJs\node_global;D:\StudyTools\WebStorm 2019.1.2\bin;;.]
2019-06-13 09:05:43.913  INFO 5764 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2019-06-13 09:05:43.913  INFO 5764 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 12268 ms
2019-06-13 09:05:43.945  INFO 5764 --- [localhost-startStop-1] c.b.c.config.DruidConfiguration          : init Druid Servlet Configuration 
2019-06-13 09:05:44.241  WARN 5764 --- [localhost-startStop-1] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2019-06-13 09:05:44.241  INFO 5764 --- [localhost-startStop-1] c.n.c.sources.URLConfigurationSource     : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-06-13 09:05:44.241  INFO 5764 --- [localhost-startStop-1] c.netflix.config.DynamicPropertyFactory  : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@13059a12
2019-06-13 09:05:47.132  INFO 5764 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2019-06-13 09:05:47.132  INFO 5764 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'webMvcMetricsFilter' to: [/*]
2019-06-13 09:05:47.132  INFO 5764 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-06-13 09:05:47.132  INFO 5764 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-06-13 09:05:47.132  INFO 5764 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2019-06-13 09:05:47.132  INFO 5764 --- [localhost-startStop-1] .s.DelegatingFilterProxyRegistrationBean : Mapping filter: 'springSecurityFilterChain' to: [/*]
2019-06-13 09:05:47.132  INFO 5764 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpTraceFilter' to: [/*]
2019-06-13 09:05:47.132  INFO 5764 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'webStatFilter' to urls: [/*]
2019-06-13 09:05:47.132  INFO 5764 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Servlet statViewServlet mapped to [/druid/*]
2019-06-13 09:05:47.132  INFO 5764 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Servlet dispatcherServlet mapped to [/]
2019-06-13 09:05:48.960  INFO 5764 --- [main] s.c.a.AnnotationConfigApplicationContext : Refreshing FeignContext-course: startup date [Thu Jun 13 09:05:48 CST 2019]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@47f9738
2019-06-13 09:05:49.007  INFO 5764 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-06-13 09:05:49.210  INFO 5764 --- [main] s.c.a.AnnotationConfigApplicationContext : Refreshing FeignContext-api-base: startup date [Thu Jun 13 09:05:49 CST 2019]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@47f9738
2019-06-13 09:05:49.226  INFO 5764 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-06-13 09:05:49.632  INFO 5764 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/authorize],methods=[POST],params=[user_oauth_approval]}" onto public org.springframework.web.servlet.View org.springframework.security.oauth2.provider.endpoint.AuthorizationEndpoint.approveOrDeny(java.util.Map<java.lang.String, java.lang.String>,java.util.Map<java.lang.String, ?>,org.springframework.web.bind.support.SessionStatus,java.security.Principal)
2019-06-13 09:05:49.632  INFO 5764 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/authorize]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.security.oauth2.provider.endpoint.AuthorizationEndpoint.authorize(java.util.Map<java.lang.String, java.lang.Object>,java.util.Map<java.lang.String, java.lang.String>,org.springframework.web.bind.support.SessionStatus,java.security.Principal)
2019-06-13 09:05:49.632  INFO 5764 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/token],methods=[POST]}" onto public org.springframework.http.ResponseEntity<org.springframework.security.oauth2.common.OAuth2AccessToken> org.springframework.security.oauth2.provider.endpoint.TokenEndpoint.postAccessToken(java.security.Principal,java.util.Map<java.lang.String, java.lang.String>) throws org.springframework.web.HttpRequestMethodNotSupportedException
2019-06-13 09:05:49.632  INFO 5764 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/token],methods=[GET]}" onto public org.springframework.http.ResponseEntity<org.springframework.security.oauth2.common.OAuth2AccessToken> org.springframework.security.oauth2.provider.endpoint.TokenEndpoint.getAccessToken(java.security.Principal,java.util.Map<java.lang.String, java.lang.String>) throws org.springframework.web.HttpRequestMethodNotSupportedException
2019-06-13 09:05:49.632  INFO 5764 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/check_token]}" onto public java.util.Map<java.lang.String, ?> org.springframework.security.oauth2.provider.endpoint.CheckTokenEndpoint.checkToken(java.lang.String)
2019-06-13 09:05:49.632  INFO 5764 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/confirm_access]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.security.oauth2.provider.endpoint.WhitelabelApprovalEndpoint.getAccessConfirmation(java.util.Map<java.lang.String, java.lang.Object>,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-06-13 09:05:49.632  INFO 5764 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/error]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.security.oauth2.provider.endpoint.WhitelabelErrorEndpoint.handleError(javax.servlet.http.HttpServletRequest)
2019-06-13 09:05:49.804  INFO 5764 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-06-13 09:05:49.804  INFO 5764 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/remove],methods=[POST]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.DeptController.remove(java.lang.Long)
2019-06-13 09:05:49.820  INFO 5764 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/batchRemove],methods=[POST]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.DeptController.remove(java.lang.Long[])
2019-06-13 09:05:49.820  INFO 5764 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/update]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.DeptController.update(com.bootdo.clouddoadmin.domain.DeptDO)
2019-06-13 09:05:49.820  INFO 5764 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/list],methods=[GET]}" onto public java.util.List<com.bootdo.clouddoadmin.domain.DeptDO> com.bootdo.clouddoadmin.controller.DeptController.list()
2019-06-13 09:05:49.820  INFO 5764 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/save],methods=[POST]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.DeptController.save(com.bootdo.clouddoadmin.domain.DeptDO)
2019-06-13 09:05:49.820  INFO 5764 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/tree],methods=[GET]}" onto public com.bootdo.clouddoadmin.domain.Tree<com.bootdo.clouddoadmin.domain.DeptDO> com.bootdo.clouddoadmin.controller.DeptController.tree()
2019-06-13 09:05:49.820  INFO 5764 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.DeptController.dept()
2019-06-13 09:05:49.820  INFO 5764 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.DeptController.treeView()
2019-06-13 09:05:49.820  INFO 5764 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/logout]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.LoginController.logout(java.lang.String)
2019-06-13 09:05:49.820  INFO 5764 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/router],methods=[GET]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.LoginController.router()
2019-06-13 09:05:49.820  INFO 5764 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu],methods=[DELETE]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.remove(java.lang.Long)
2019-06-13 09:05:49.820  INFO 5764 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/{id}],methods=[GET]}" onto com.bootdo.clouddoadmin.domain.MenuDO com.bootdo.clouddoadmin.controller.MenuController.get(java.lang.Long)
2019-06-13 09:05:49.820  INFO 5764 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu],methods=[PUT]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.update(com.bootdo.clouddoadmin.domain.MenuDO)
2019-06-13 09:05:49.820  INFO 5764 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu],methods=[GET]}" onto java.util.List<com.bootdo.clouddoadmin.domain.Tree<com.bootdo.clouddoadmin.domain.MenuDO>> com.bootdo.clouddoadmin.controller.MenuController.list()
2019-06-13 09:05:49.820  INFO 5764 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/list],methods=[GET]}" onto java.util.List<com.bootdo.clouddoadmin.domain.MenuDO> com.bootdo.clouddoadmin.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-13 09:05:49.820  INFO 5764 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu],methods=[POST]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.save(com.bootdo.clouddoadmin.domain.MenuDO)
2019-06-13 09:05:49.820  INFO 5764 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/tree],methods=[GET]}" onto com.bootdo.clouddoadmin.domain.Tree<com.bootdo.clouddoadmin.domain.MenuDO> com.bootdo.clouddoadmin.controller.MenuController.tree()
2019-06-13 09:05:49.820  INFO 5764 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/clearCache],methods=[GET]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.clearCache()
2019-06-13 09:05:49.820  INFO 5764 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/currentUserMenus],methods=[GET]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.currentUserMenus()
2019-06-13 09:05:49.820  INFO 5764 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/roleId],methods=[GET]}" onto java.util.List<java.lang.Long> com.bootdo.clouddoadmin.controller.MenuController.menuIdsByRoleId(java.lang.Long)
2019-06-13 09:05:49.820  INFO 5764 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/userMenus],methods=[GET]}" onto java.util.List<com.bootdo.clouddocommon.dto.MenuDTO> com.bootdo.clouddoadmin.controller.MenuController.userMenus()
2019-06-13 09:05:49.820  INFO 5764 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role],methods=[PUT]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.RoleController.update(com.bootdo.clouddoadmin.domain.RoleDO)
2019-06-13 09:05:49.820  INFO 5764 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role],methods=[GET]}" onto com.bootdo.clouddocommon.utils.PageUtils com.bootdo.clouddoadmin.controller.RoleController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-13 09:05:49.820  INFO 5764 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role],methods=[POST]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.RoleController.save(com.bootdo.clouddoadmin.domain.RoleDO)
2019-06-13 09:05:49.820  INFO 5764 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/userId/{userId}],methods=[GET]}" onto java.util.List<java.lang.Long> com.bootdo.clouddoadmin.controller.RoleController.roleIdByUserId(java.lang.Long)
2019-06-13 09:05:49.835  INFO 5764 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.TestController.test()
2019-06-13 09:05:49.835  INFO 5764 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test1],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.TestController.test1()
2019-06-13 09:05:49.835  INFO 5764 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user],methods=[DELETE]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.remove(java.lang.Long)
2019-06-13 09:05:49.835  INFO 5764 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.get(java.lang.Long)
2019-06-13 09:05:49.835  INFO 5764 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user],methods=[PUT]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.update(com.bootdo.clouddoadmin.dto.UserDTO)
2019-06-13 09:05:49.835  INFO 5764 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user],methods=[POST]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.save(com.bootdo.clouddoadmin.domain.UserDO)
2019-06-13 09:05:49.835  INFO 5764 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/batchRemove],methods=[POST]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.batchRemove(java.lang.Long[])
2019-06-13 09:05:49.835  INFO 5764 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/tokenUser],methods=[GET]}" onto public java.security.Principal com.bootdo.clouddoadmin.controller.UserController.user(java.security.Principal)
2019-06-13 09:05:49.835  INFO 5764 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/currentUser],methods=[GET]}" onto public com.bootdo.clouddocommon.dto.LoginUserDTO com.bootdo.clouddoadmin.controller.UserController.currentUser()
2019-06-13 09:05:49.835  INFO 5764 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/roleId/{roleId}],methods=[GET]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.getTeacherList(java.lang.Long,java.util.Map<java.lang.String, java.lang.Object>)
2019-06-13 09:05:49.835  INFO 5764 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/exits],methods=[POST]}" onto boolean com.bootdo.clouddoadmin.controller.UserController.exits(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-13 09:05:49.835  INFO 5764 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-06-13 09:05:49.835  INFO 5764 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-06-13 09:05:49.835  INFO 5764 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-06-13 09:05:49.835  INFO 5764 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-06-13 09:05:49.835  INFO 5764 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-13 09:05:49.991  INFO 5764 --- [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 2 endpoint(s) beneath base path '/actuator'
2019-06-13 09:05:50.007  INFO 5764 --- [main] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-06-13 09:05:50.007  INFO 5764 --- [main] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-06-13 09:05:50.007  INFO 5764 --- [main] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-13 09:05:51.288  INFO 5764 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4b336cc8, org.springframework.security.web.context.SecurityContextPersistenceFilter@351d93bd, org.springframework.security.web.header.HeaderWriterFilter@59f76e56, org.springframework.security.web.authentication.logout.LogoutFilter@a55e82a, org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter@15914bb5, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@290c266c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@42503099, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@32d22650, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2570b316, org.springframework.security.web.session.SessionManagementFilter@1328f482, org.springframework.security.web.access.ExceptionTranslationFilter@5bd3ca3c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1f6c4ae]
2019-06-13 09:05:51.320  INFO 5764 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: org.springframework.security.oauth2.config.annotation.web.configuration.ResourceServerConfiguration$NotOAuthRequestMatcher@3350ab4, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7827d7b, org.springframework.security.web.context.SecurityContextPersistenceFilter@73385d3f, org.springframework.security.web.header.HeaderWriterFilter@2166c48a, org.springframework.security.web.authentication.logout.LogoutFilter@75a9cc24, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@8549c5f, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@2ec0ca83, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6814262d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7fc1fd31, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@646cb2e, org.springframework.security.web.session.SessionManagementFilter@304744a1, org.springframework.security.web.access.ExceptionTranslationFilter@ce2eaa7, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5b5b53c6]
2019-06-13 09:05:51.366  INFO 5764 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3006bfb, org.springframework.security.web.context.SecurityContextPersistenceFilter@69c33ea2, org.springframework.security.web.header.HeaderWriterFilter@2ceb68a1, org.springframework.security.web.csrf.CsrfFilter@53525379, org.springframework.security.web.authentication.logout.LogoutFilter@75805562, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@7b3c0ecb, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@5ad0c70a, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@5bb99d1d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@59e0d521, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2e3900dc, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4fd37449, org.springframework.security.web.session.SessionManagementFilter@6de33fde, org.springframework.security.web.access.ExceptionTranslationFilter@78b9155e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@241d1052]
2019-06-13 09:05:51.445  INFO 5764 --- [main] pertySourcedRequestMappingHandlerMapping : Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2019-06-13 09:05:51.742  INFO 5764 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService  'clientInboundChannelExecutor'
2019-06-13 09:05:51.757  INFO 5764 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-06-13 09:05:51.788  INFO 5764 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-06-13 09:05:51.851  INFO 5764 --- [main] o.s.w.s.s.s.WebSocketHandlerMapping      : Mapped URL path [/endpoint/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-06-13 09:05:51.866  INFO 5764 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService  'brokerChannelExecutor'
2019-06-13 09:05:52.116  WARN 5764 --- [main] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2019-06-13 09:05:52.116  INFO 5764 --- [main] c.n.c.sources.URLConfigurationSource     : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-06-13 09:05:52.226  INFO 5764 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-13 09:05:52.429  INFO 5764 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@47f9738: startup date [Thu Jun 13 09:05:31 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@5dda768f
2019-06-13 09:05:52.507  INFO 5764 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-13 09:05:52.507  INFO 5764 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-13 09:05:52.523  INFO 5764 --- [main] .m.m.a.ExceptionHandlerExceptionResolver : Detected @ExceptionHandler methods in exceptionAdviceHandler
2019-06-13 09:05:53.648  INFO 5764 --- [main] o.s.ui.freemarker.SpringTemplateLoader   : SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@47f9738: startup date [Thu Jun 13 09:05:31 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@5dda768f] and template loader path [classpath:/templates/]
2019-06-13 09:05:53.648  INFO 5764 --- [main] o.s.w.s.v.f.FreeMarkerConfigurer         : ClassTemplateLoader for Spring macros added to FreeMarker configuration
2019-06-13 09:05:54.163  INFO 5764 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2019-06-13 09:05:54.179  INFO 5764 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2019-06-13 09:05:54.179  INFO 5764 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'environmentManager' has been autodetected for JMX exposure
2019-06-13 09:05:54.179  INFO 5764 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'refreshScope' has been autodetected for JMX exposure
2019-06-13 09:05:54.179  INFO 5764 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2019-06-13 09:05:54.195  INFO 5764 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2019-06-13 09:05:54.195  INFO 5764 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2019-06-13 09:05:54.210  INFO 5764 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=47f9738,type=ConfigurationPropertiesRebinder]
2019-06-13 09:05:54.226  INFO 5764 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-06-13 09:05:54.226  INFO 5764 --- [main] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase 0
2019-06-13 09:05:54.241  INFO 5764 --- [main] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2019-06-13 09:05:54.273  INFO 5764 --- [main] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2019-06-13 09:05:54.757  INFO 5764 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using JSON encoding codec LegacyJacksonJson
2019-06-13 09:05:54.757  INFO 5764 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using JSON decoding codec LegacyJacksonJson
2019-06-13 09:05:54.882  INFO 5764 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using XML encoding codec XStreamXml
2019-06-13 09:05:54.882  INFO 5764 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using XML decoding codec XStreamXml
2019-06-13 09:05:55.023  INFO 5764 --- [main] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 09:05:55.195  INFO 5764 --- [main] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2019-06-13 09:05:55.195  INFO 5764 --- [main] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2019-06-13 09:05:55.195  INFO 5764 --- [main] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2019-06-13 09:05:55.195  INFO 5764 --- [main] com.netflix.discovery.DiscoveryClient    : Application is null : false
2019-06-13 09:05:55.195  INFO 5764 --- [main] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2019-06-13 09:05:55.195  INFO 5764 --- [main] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2019-06-13 09:05:55.195  INFO 5764 --- [main] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2019-06-13 09:05:55.382  INFO 5764 --- [main] com.netflix.discovery.DiscoveryClient    : The response status is 200
2019-06-13 09:05:55.382  INFO 5764 --- [main] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2019-06-13 09:05:55.382  INFO 5764 --- [main] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2019-06-13 09:05:55.398  INFO 5764 --- [main] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1560387955382 with initial instances count: 1
2019-06-13 09:05:55.413  INFO 5764 --- [main] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application api-admin with eureka with status UP
2019-06-13 09:05:55.413  INFO 5764 --- [main] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1560387955413, current=UP, previous=STARTING]
2019-06-13 09:05:55.413  INFO 5764 --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_API-ADMIN/Lenovo-PC:api-admin:8005: registering service...
2019-06-13 09:05:55.413  INFO 5764 --- [main] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase 2147483647
2019-06-13 09:05:55.413  INFO 5764 --- [main] d.s.w.p.DocumentationPluginsBootstrapper : Context refreshed
2019-06-13 09:05:55.460  INFO 5764 --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_API-ADMIN/Lenovo-PC:api-admin:8005 - registration status: 204
2019-06-13 09:05:55.460  INFO 5764 --- [main] d.s.w.p.DocumentationPluginsBootstrapper : Found 1 custom documentation plugin(s)
2019-06-13 09:05:55.538  INFO 5764 --- [main] s.d.s.w.s.ApiListingReferenceScanner     : Scanning for api listing references
2019-06-13 09:05:55.663  INFO 5764 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: removeUsingPOST_1
2019-06-13 09:05:55.726  INFO 5764 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: listUsingGET_1
2019-06-13 09:05:55.726  INFO 5764 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: listUsingGET_2
2019-06-13 09:05:55.742  INFO 5764 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: saveUsingPOST_1
2019-06-13 09:05:55.742  INFO 5764 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: treeUsingGET_1
2019-06-13 09:05:55.742  INFO 5764 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: updateUsingPUT_1
2019-06-13 09:05:55.742  INFO 5764 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: listUsingGET_3
2019-06-13 09:05:55.757  INFO 5764 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: saveUsingPOST_2
2019-06-13 09:05:55.757  INFO 5764 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: updateUsingPUT_2
2019-06-13 09:05:55.773  INFO 5764 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: getUsingGET_1
2019-06-13 09:05:55.773  INFO 5764 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: removeUsingDELETE_1
2019-06-13 09:05:55.773  INFO 5764 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: saveUsingPOST_3
2019-06-13 09:05:55.788  INFO 5764 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: updateUsingPUT_3
2019-06-13 09:05:55.788  INFO 5764 --- [main] o.s.m.s.b.SimpleBrokerMessageHandler     : Starting...
2019-06-13 09:05:55.804  INFO 5764 --- [main] o.s.m.s.b.SimpleBrokerMessageHandler     : BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-06-13 09:05:55.804  INFO 5764 --- [main] o.s.m.s.b.SimpleBrokerMessageHandler     : Started.
2019-06-13 09:05:55.835  INFO 5764 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8005 (http) with context path ''
2019-06-13 09:05:55.851  INFO 5764 --- [main] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 8005
2019-06-13 09:05:55.851  INFO 5764 --- [main] c.b.c.ClouddoAdminApplication            : Started ClouddoAdminApplication in 26.815 seconds (JVM running for 28.763)
2019-06-13 09:05:56.163  INFO 5764 --- [RMI TCP Connection(5)-10.255.47.10] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-06-13 09:05:56.163  INFO 5764 --- [RMI TCP Connection(5)-10.255.47.10] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2019-06-13 09:05:56.320  INFO 5764 --- [RMI TCP Connection(5)-10.255.47.10] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 157 ms
2019-06-13 09:05:57.070  INFO 5764 --- [RMI TCP Connection(6)-10.255.47.10] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2019-06-13 09:05:58.117  INFO 5764 --- [RMI TCP Connection(6)-10.255.47.10] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2019-06-13 09:05:58.117  INFO 5764 --- [RMI TCP Connection(6)-10.255.47.10] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2019-06-13 09:06:51.884  INFO 5764 --- [MessageBroker-1] o.s.w.s.c.WebSocketMessageBrokerStats    : WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-06-13 09:09:04.903  INFO 5764 --- [http-nio-8005-exec-5] o.s.s.o.p.token.store.JdbcTokenStore     : Failed to find access token for token 914b976e-1c5b-416b-806c-ef796a015b76
2019-06-13 09:09:06.466  INFO 5764 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/currentUser
2019-06-13 09:09:06.466  INFO 5764 --- [http-nio-8005-exec-7] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/router
2019-06-13 09:09:06.466  INFO 5764 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 09:09:06.466  INFO 5764 --- [http-nio-8005-exec-7] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 09:09:06.481  INFO 5764 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.currentUser
2019-06-13 09:09:06.481  INFO 5764 --- [http-nio-8005-exec-7] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.LoginController.router
2019-06-13 09:09:06.481  INFO 5764 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 09:09:06.481  INFO 5764 --- [http-nio-8005-exec-7] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 09:09:06.560  INFO 5764 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 94
2019-06-13 09:09:06.575  INFO 5764 --- [http-nio-8005-exec-7] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 109
2019-06-13 09:09:06.638  INFO 5764 --- [http-nio-8005-exec-7] .s.a.AnnotationAsyncExecutionInterceptor : More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-06-13 09:09:06.685  INFO 5764 --- [SimpleAsyncTaskExecutor-1] feign.RequestInterceptor                 : ------feign设置token129
2019-06-13 09:09:06.685  INFO 5764 --- [SimpleAsyncTaskExecutor-2] feign.RequestInterceptor                 : ------feign设置token130
2019-06-13 09:09:06.716  INFO 5764 --- [SimpleAsyncTaskExecutor-2] s.c.a.AnnotationConfigApplicationContext : Refreshing SpringClientFactory-api-base: startup date [Thu Jun 13 09:09:06 CST 2019]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@47f9738
2019-06-13 09:09:06.981  INFO 5764 --- [SimpleAsyncTaskExecutor-2] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-06-13 09:09:07.669  INFO 5764 --- [SimpleAsyncTaskExecutor-2] c.netflix.config.ChainedDynamicProperty  : Flipping property: api-base.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-06-13 09:09:07.685  INFO 5764 --- [SimpleAsyncTaskExecutor-2] c.n.u.concurrent.ShutdownEnabledTimer    : Shutdown hook installed for: NFLoadBalancer-PingTimer-api-base
2019-06-13 09:09:07.685  INFO 5764 --- [SimpleAsyncTaskExecutor-2] c.netflix.loadbalancer.BaseLoadBalancer  : Client: api-base instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=api-base,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2019-06-13 09:09:07.778  INFO 5764 --- [SimpleAsyncTaskExecutor-2] c.n.l.DynamicServerListLoadBalancer      : Using serverListUpdater PollingServerListUpdater
2019-06-13 09:09:07.794  INFO 5764 --- [SimpleAsyncTaskExecutor-2] c.n.l.DynamicServerListLoadBalancer      : DynamicServerListLoadBalancer for client api-base initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=api-base,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@5cf957f2
2019-06-13 09:09:07.966 ERROR 5764 --- [SimpleAsyncTaskExecutor-1] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy194.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy194.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 09:09:07.966 ERROR 5764 --- [SimpleAsyncTaskExecutor-2] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy194.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy194.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 09:09:24.294  INFO 5764 --- [http-nio-8005-exec-9] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/roleId/2
2019-06-13 09:09:24.294  INFO 5764 --- [http-nio-8005-exec-9] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 09:09:24.294  INFO 5764 --- [http-nio-8005-exec-9] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.getTeacherList
2019-06-13 09:09:24.294  INFO 5764 --- [http-nio-8005-exec-9] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : [2, {page=1, limit=10, name=}]
2019-06-13 09:09:24.388  INFO 5764 --- [http-nio-8005-exec-9] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 94
2019-06-13 09:09:24.419  INFO 5764 --- [SimpleAsyncTaskExecutor-3] feign.RequestInterceptor                 : ------feign设置token137
2019-06-13 09:09:24.419 ERROR 5764 --- [SimpleAsyncTaskExecutor-3] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy194.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy194.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 09:10:55.224  INFO 5764 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 09:15:55.229  INFO 5764 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 09:19:34.676  INFO 5764 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/roleId/2
2019-06-13 09:19:34.676  INFO 5764 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 09:19:34.676  INFO 5764 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.getTeacherList
2019-06-13 09:19:34.676  INFO 5764 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : [2, {page=1, limit=10, name=}]
2019-06-13 09:19:34.848  INFO 5764 --- [http-nio-8005-exec-9] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/currentUser
2019-06-13 09:19:34.848  INFO 5764 --- [http-nio-8005-exec-8] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/router
2019-06-13 09:19:34.848  INFO 5764 --- [http-nio-8005-exec-9] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 09:19:34.848  INFO 5764 --- [http-nio-8005-exec-8] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 09:19:34.848  INFO 5764 --- [http-nio-8005-exec-9] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.currentUser
2019-06-13 09:19:34.848  INFO 5764 --- [http-nio-8005-exec-8] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.LoginController.router
2019-06-13 09:19:34.848  INFO 5764 --- [http-nio-8005-exec-8] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 09:19:34.848  INFO 5764 --- [http-nio-8005-exec-9] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 09:19:34.957  INFO 5764 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 281
2019-06-13 09:19:35.676  INFO 5764 --- [http-nio-8005-exec-9] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 828
2019-06-13 09:19:36.270  INFO 5764 --- [http-nio-8005-exec-8] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 1422
2019-06-13 09:19:36.942  INFO 5764 --- [SimpleAsyncTaskExecutor-6] feign.RequestInterceptor                 : ------feign设置token143
2019-06-13 09:19:36.942  INFO 5764 --- [SimpleAsyncTaskExecutor-4] feign.RequestInterceptor                 : ------feign设置token141
2019-06-13 09:19:36.942  INFO 5764 --- [SimpleAsyncTaskExecutor-5] feign.RequestInterceptor                 : ------feign设置token142
2019-06-13 09:19:37.660 ERROR 5764 --- [SimpleAsyncTaskExecutor-6] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy194.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy194.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 09:19:37.660 ERROR 5764 --- [SimpleAsyncTaskExecutor-4] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy194.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy194.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 09:19:37.660 ERROR 5764 --- [SimpleAsyncTaskExecutor-5] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy194.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy194.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 09:20:55.241  INFO 5764 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 09:25:45.013  INFO 5540 --- [main] c.b.c.ClouddoAdminApplication            : No active profile set, falling back to default profiles: default
2019-06-13 09:25:45.033  INFO 5540 --- [main] ConfigServletWebServerApplicationContext : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1b955cac: startup date [Thu Jun 13 09:25:45 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1573f9fc
2019-06-13 09:25:49.869  INFO 5540 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-13 09:25:50.373  INFO 5540 --- [main] o.s.cloud.context.scope.GenericScope     : BeanFactory id=1c774fab-2f18-3dff-8fab-5ac3d64963da
2019-06-13 09:25:50.420  INFO 5540 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-06-13 09:25:50.640  INFO 5540 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$67055a8c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 09:25:50.994  INFO 5540 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.bootdo.clouddoadmin.config.RedisConfig$$EnhancerBySpringCGLIB$$89b2a3dd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 09:25:51.011  INFO 5540 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.bootdo.clouddoadmin.config.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 09:25:51.102  INFO 5540 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$831f5d89] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 09:25:53.630  INFO 5540 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8005 (http)
2019-06-13 09:25:53.806  INFO 5540 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2019-06-13 09:25:53.807  INFO 5540 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.32
2019-06-13 09:25:53.812  INFO 5540 --- [localhost-startStop-1] o.a.catalina.core.AprLifecycleListener   : The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_181\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;C:;C:\Program Files\Java\jdk1.8.0_181\bin;D:\myApps\apache-maven-3.6.0\bin;C:\Program Files\Java\jdk1.8.0_181\jre\bin;C:\Program Files\Java\jdk1.8.0_181\bin ;C:\Program Files\TortoiseGit\bin;C:\windows\system32;C:\windows;C:\windows\system32\wbem;D:\StudyTools\XAMPP\mysql\bin;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;D:\系统工具\Git\cmd;D:\StudyTools\NodeJs\;D:\StudyTools\Elang\erl10.0.1\bin;D:\StudyTools\RabbitMQ Server\rabbitmq_server-3.7.7\sbin;;D:\StudyTools\DockerToolbox;D:\StudyTools\NodeJs\node_global;D:\StudyTools\WebStorm 2019.1.2\bin;;.]
2019-06-13 09:25:54.228  INFO 5540 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2019-06-13 09:25:54.229  INFO 5540 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 9197 ms
2019-06-13 09:25:54.253  INFO 5540 --- [localhost-startStop-1] c.b.c.config.DruidConfiguration          : init Druid Servlet Configuration 
2019-06-13 09:25:55.002  WARN 5540 --- [localhost-startStop-1] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2019-06-13 09:25:55.002  INFO 5540 --- [localhost-startStop-1] c.n.c.sources.URLConfigurationSource     : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-06-13 09:25:55.028  INFO 5540 --- [localhost-startStop-1] c.netflix.config.DynamicPropertyFactory  : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@5fd5403
2019-06-13 09:25:58.849  INFO 5540 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2019-06-13 09:25:58.850  INFO 5540 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'webMvcMetricsFilter' to: [/*]
2019-06-13 09:25:58.850  INFO 5540 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-06-13 09:25:58.850  INFO 5540 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-06-13 09:25:58.850  INFO 5540 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2019-06-13 09:25:58.851  INFO 5540 --- [localhost-startStop-1] .s.DelegatingFilterProxyRegistrationBean : Mapping filter: 'springSecurityFilterChain' to: [/*]
2019-06-13 09:25:58.851  INFO 5540 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpTraceFilter' to: [/*]
2019-06-13 09:25:58.851  INFO 5540 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'webStatFilter' to urls: [/*]
2019-06-13 09:25:58.851  INFO 5540 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Servlet statViewServlet mapped to [/druid/*]
2019-06-13 09:25:58.852  INFO 5540 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Servlet dispatcherServlet mapped to [/]
2019-06-13 09:26:05.409  WARN 5540 --- [main] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'loginController' defined in file [D:\StudyTools\IntelliJ IDEA 2019.1.1\workspace\Technique\clouddo\clouddo-admin\target\classes\com\bootdo\clouddoadmin\controller\LoginController.class]: Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: Cache name must be non-empty if specified
2019-06-13 09:26:05.794  INFO 5540 --- [main] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2019-06-13 09:26:05.846  INFO 5540 --- [main] ConditionEvaluationReportLoggingListener : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-06-13 09:26:05.859 ERROR 5540 --- [main] o.s.boot.SpringApplication               : Application run failed

org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'loginController' defined in file [D:\StudyTools\IntelliJ IDEA 2019.1.1\workspace\Technique\clouddo\clouddo-admin\target\classes\com\bootdo\clouddoadmin\controller\LoginController.class]: Initialization of bean failed; nested exception is java.lang.IllegalArgumentException: Cache name must be non-empty if specified
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:581) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:759) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:869) ~[spring-context-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550) ~[spring-context-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140) ~[spring-boot-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:762) [spring-boot-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:398) [spring-boot-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:330) [spring-boot-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1258) [spring-boot-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1246) [spring-boot-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at com.bootdo.clouddoadmin.ClouddoAdminApplication.main(ClouddoAdminApplication.java:19) [classes/:na]
Caused by: java.lang.IllegalArgumentException: Cache name must be non-empty if specified
	at org.springframework.util.Assert.hasText(Assert.java:276) ~[spring-core-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.cache.interceptor.CacheOperation$Builder.setCacheNames(CacheOperation.java:160) ~[spring-context-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.cache.annotation.SpringCacheAnnotationParser.parseEvictAnnotation(SpringCacheAnnotationParser.java:150) ~[spring-context-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.cache.annotation.SpringCacheAnnotationParser.parseCacheAnnotations(SpringCacheAnnotationParser.java:96) ~[spring-context-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.cache.annotation.SpringCacheAnnotationParser.parseCacheAnnotations(SpringCacheAnnotationParser.java:66) ~[spring-context-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.cache.annotation.SpringCacheAnnotationParser.parseCacheAnnotations(SpringCacheAnnotationParser.java:61) ~[spring-context-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.cache.annotation.AnnotationCacheOperationSource.lambda$findCacheOperations$1(AnnotationCacheOperationSource.java:117) ~[spring-context-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.cache.annotation.AnnotationCacheOperationSource.determineCacheOperations(AnnotationCacheOperationSource.java:134) ~[spring-context-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.cache.annotation.AnnotationCacheOperationSource.findCacheOperations(AnnotationCacheOperationSource.java:117) ~[spring-context-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.cache.interceptor.AbstractFallbackCacheOperationSource.computeCacheOperations(AbstractFallbackCacheOperationSource.java:137) ~[spring-context-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.cache.interceptor.AbstractFallbackCacheOperationSource.getCacheOperations(AbstractFallbackCacheOperationSource.java:99) ~[spring-context-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.cache.interceptor.CacheOperationSourcePointcut.matches(CacheOperationSourcePointcut.java:40) ~[spring-context-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.support.AopUtils.canApply(AopUtils.java:251) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.support.AopUtils.canApply(AopUtils.java:288) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.support.AopUtils.findAdvisorsThatCanApply(AopUtils.java:320) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findAdvisorsThatCanApply(AbstractAdvisorAutoProxyCreator.java:126) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.findEligibleAdvisors(AbstractAdvisorAutoProxyCreator.java:95) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.autoproxy.AbstractAdvisorAutoProxyCreator.getAdvicesAndAdvisorsForBean(AbstractAdvisorAutoProxyCreator.java:76) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.wrapIfNecessary(AbstractAutoProxyCreator.java:352) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.autoproxy.AbstractAutoProxyCreator.postProcessAfterInitialization(AbstractAutoProxyCreator.java:304) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsAfterInitialization(AbstractAutowireCapableBeanFactory.java:431) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1703) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	... 15 common frames omitted

2019-06-13 09:51:08.313  INFO 9604 --- [main] c.b.c.ClouddoAdminApplication            : No active profile set, falling back to default profiles: default
2019-06-13 09:51:08.330  INFO 9604 --- [main] ConfigServletWebServerApplicationContext : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7241a47d: startup date [Thu Jun 13 09:51:08 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@561b6512
2019-06-13 09:51:09.863  INFO 9604 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-13 09:51:10.375  INFO 9604 --- [main] o.s.cloud.context.scope.GenericScope     : BeanFactory id=1c774fab-2f18-3dff-8fab-5ac3d64963da
2019-06-13 09:51:10.405  INFO 9604 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-06-13 09:51:10.639  INFO 9604 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d615da14] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 09:51:10.998  INFO 9604 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.bootdo.clouddoadmin.config.RedisConfig$$EnhancerBySpringCGLIB$$f8c32365] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 09:51:11.017  INFO 9604 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.bootdo.clouddoadmin.config.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 09:51:11.105  INFO 9604 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f22fdd11] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 09:51:11.770  INFO 9604 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8005 (http)
2019-06-13 09:51:11.803  INFO 9604 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2019-06-13 09:51:11.803  INFO 9604 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.32
2019-06-13 09:51:11.810  INFO 9604 --- [localhost-startStop-1] o.a.catalina.core.AprLifecycleListener   : The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_181\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;C:;C:\Program Files\Java\jdk1.8.0_181\bin;D:\myApps\apache-maven-3.6.0\bin;C:\Program Files\Java\jdk1.8.0_181\jre\bin;C:\Program Files\Java\jdk1.8.0_181\bin ;C:\Program Files\TortoiseGit\bin;C:\windows\system32;C:\windows;C:\windows\system32\wbem;D:\StudyTools\XAMPP\mysql\bin;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;D:\系统工具\Git\cmd;D:\StudyTools\NodeJs\;D:\StudyTools\Elang\erl10.0.1\bin;D:\StudyTools\RabbitMQ Server\rabbitmq_server-3.7.7\sbin;;D:\StudyTools\DockerToolbox;D:\StudyTools\NodeJs\node_global;D:\StudyTools\WebStorm 2019.1.2\bin;;.]
2019-06-13 09:51:12.038  INFO 9604 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2019-06-13 09:51:12.039  INFO 9604 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 3709 ms
2019-06-13 09:51:12.062  INFO 9604 --- [localhost-startStop-1] c.b.c.config.DruidConfiguration          : init Druid Servlet Configuration 
2019-06-13 09:51:12.632  WARN 9604 --- [localhost-startStop-1] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2019-06-13 09:51:12.634  INFO 9604 --- [localhost-startStop-1] c.n.c.sources.URLConfigurationSource     : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-06-13 09:51:12.655  INFO 9604 --- [localhost-startStop-1] c.netflix.config.DynamicPropertyFactory  : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@3213fc8e
2019-06-13 09:51:15.579  INFO 9604 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2019-06-13 09:51:15.581  INFO 9604 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'webMvcMetricsFilter' to: [/*]
2019-06-13 09:51:15.581  INFO 9604 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-06-13 09:51:15.581  INFO 9604 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-06-13 09:51:15.581  INFO 9604 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2019-06-13 09:51:15.583  INFO 9604 --- [localhost-startStop-1] .s.DelegatingFilterProxyRegistrationBean : Mapping filter: 'springSecurityFilterChain' to: [/*]
2019-06-13 09:51:15.583  INFO 9604 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpTraceFilter' to: [/*]
2019-06-13 09:51:15.583  INFO 9604 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'webStatFilter' to urls: [/*]
2019-06-13 09:51:15.583  INFO 9604 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Servlet statViewServlet mapped to [/druid/*]
2019-06-13 09:51:15.585  INFO 9604 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Servlet dispatcherServlet mapped to [/]
2019-06-13 09:51:17.833  INFO 9604 --- [main] s.c.a.AnnotationConfigApplicationContext : Refreshing FeignContext-course: startup date [Thu Jun 13 09:51:17 CST 2019]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7241a47d
2019-06-13 09:51:18.418  INFO 9604 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-06-13 09:51:19.523  INFO 9604 --- [main] s.c.a.AnnotationConfigApplicationContext : Refreshing FeignContext-api-base: startup date [Thu Jun 13 09:51:19 CST 2019]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7241a47d
2019-06-13 09:51:19.540  INFO 9604 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-06-13 09:51:23.713  INFO 9604 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/authorize],methods=[POST],params=[user_oauth_approval]}" onto public org.springframework.web.servlet.View org.springframework.security.oauth2.provider.endpoint.AuthorizationEndpoint.approveOrDeny(java.util.Map<java.lang.String, java.lang.String>,java.util.Map<java.lang.String, ?>,org.springframework.web.bind.support.SessionStatus,java.security.Principal)
2019-06-13 09:51:23.714  INFO 9604 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/authorize]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.security.oauth2.provider.endpoint.AuthorizationEndpoint.authorize(java.util.Map<java.lang.String, java.lang.Object>,java.util.Map<java.lang.String, java.lang.String>,org.springframework.web.bind.support.SessionStatus,java.security.Principal)
2019-06-13 09:51:23.715  INFO 9604 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/token],methods=[GET]}" onto public org.springframework.http.ResponseEntity<org.springframework.security.oauth2.common.OAuth2AccessToken> org.springframework.security.oauth2.provider.endpoint.TokenEndpoint.getAccessToken(java.security.Principal,java.util.Map<java.lang.String, java.lang.String>) throws org.springframework.web.HttpRequestMethodNotSupportedException
2019-06-13 09:51:23.716  INFO 9604 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/token],methods=[POST]}" onto public org.springframework.http.ResponseEntity<org.springframework.security.oauth2.common.OAuth2AccessToken> org.springframework.security.oauth2.provider.endpoint.TokenEndpoint.postAccessToken(java.security.Principal,java.util.Map<java.lang.String, java.lang.String>) throws org.springframework.web.HttpRequestMethodNotSupportedException
2019-06-13 09:51:23.716  INFO 9604 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/check_token]}" onto public java.util.Map<java.lang.String, ?> org.springframework.security.oauth2.provider.endpoint.CheckTokenEndpoint.checkToken(java.lang.String)
2019-06-13 09:51:23.717  INFO 9604 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/confirm_access]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.security.oauth2.provider.endpoint.WhitelabelApprovalEndpoint.getAccessConfirmation(java.util.Map<java.lang.String, java.lang.Object>,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-06-13 09:51:23.717  INFO 9604 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/error]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.security.oauth2.provider.endpoint.WhitelabelErrorEndpoint.handleError(javax.servlet.http.HttpServletRequest)
2019-06-13 09:51:25.004  INFO 9604 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-06-13 09:51:25.005  INFO 9604 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/remove],methods=[POST]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.DeptController.remove(java.lang.Long)
2019-06-13 09:51:25.005  INFO 9604 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/batchRemove],methods=[POST]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.DeptController.remove(java.lang.Long[])
2019-06-13 09:51:25.005  INFO 9604 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/update]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.DeptController.update(com.bootdo.clouddoadmin.domain.DeptDO)
2019-06-13 09:51:25.006  INFO 9604 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/list],methods=[GET]}" onto public java.util.List<com.bootdo.clouddoadmin.domain.DeptDO> com.bootdo.clouddoadmin.controller.DeptController.list()
2019-06-13 09:51:25.006  INFO 9604 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/save],methods=[POST]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.DeptController.save(com.bootdo.clouddoadmin.domain.DeptDO)
2019-06-13 09:51:25.006  INFO 9604 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/tree],methods=[GET]}" onto public com.bootdo.clouddoadmin.domain.Tree<com.bootdo.clouddoadmin.domain.DeptDO> com.bootdo.clouddoadmin.controller.DeptController.tree()
2019-06-13 09:51:25.007  INFO 9604 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.DeptController.dept()
2019-06-13 09:51:25.007  INFO 9604 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.DeptController.treeView()
2019-06-13 09:51:25.008  INFO 9604 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/logout]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.LoginController.logout(java.lang.String)
2019-06-13 09:51:25.008  INFO 9604 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/router],methods=[GET]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.LoginController.router()
2019-06-13 09:51:25.012  INFO 9604 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu],methods=[DELETE]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.remove(java.lang.Long)
2019-06-13 09:51:25.012  INFO 9604 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/{id}],methods=[GET]}" onto com.bootdo.clouddoadmin.domain.MenuDO com.bootdo.clouddoadmin.controller.MenuController.get(java.lang.Long)
2019-06-13 09:51:25.013  INFO 9604 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu],methods=[PUT]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.update(com.bootdo.clouddoadmin.domain.MenuDO)
2019-06-13 09:51:25.013  INFO 9604 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu],methods=[GET]}" onto java.util.List<com.bootdo.clouddoadmin.domain.Tree<com.bootdo.clouddoadmin.domain.MenuDO>> com.bootdo.clouddoadmin.controller.MenuController.list()
2019-06-13 09:51:25.014  INFO 9604 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/list],methods=[GET]}" onto java.util.List<com.bootdo.clouddoadmin.domain.MenuDO> com.bootdo.clouddoadmin.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-13 09:51:25.014  INFO 9604 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu],methods=[POST]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.save(com.bootdo.clouddoadmin.domain.MenuDO)
2019-06-13 09:51:25.014  INFO 9604 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/tree],methods=[GET]}" onto com.bootdo.clouddoadmin.domain.Tree<com.bootdo.clouddoadmin.domain.MenuDO> com.bootdo.clouddoadmin.controller.MenuController.tree()
2019-06-13 09:51:25.014  INFO 9604 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/clearCache],methods=[GET]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.clearCache()
2019-06-13 09:51:25.015  INFO 9604 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/roleId],methods=[GET]}" onto java.util.List<java.lang.Long> com.bootdo.clouddoadmin.controller.MenuController.menuIdsByRoleId(java.lang.Long)
2019-06-13 09:51:25.016  INFO 9604 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/userMenus],methods=[GET]}" onto java.util.List<com.bootdo.clouddocommon.dto.MenuDTO> com.bootdo.clouddoadmin.controller.MenuController.userMenus()
2019-06-13 09:51:25.016  INFO 9604 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/currentUserMenus],methods=[GET]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.currentUserMenus()
2019-06-13 09:51:25.020  INFO 9604 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role],methods=[PUT]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.RoleController.update(com.bootdo.clouddoadmin.domain.RoleDO)
2019-06-13 09:51:25.021  INFO 9604 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role],methods=[GET]}" onto com.bootdo.clouddocommon.utils.PageUtils com.bootdo.clouddoadmin.controller.RoleController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-13 09:51:25.021  INFO 9604 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role],methods=[POST]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.RoleController.save(com.bootdo.clouddoadmin.domain.RoleDO)
2019-06-13 09:51:25.022  INFO 9604 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/userId/{userId}],methods=[GET]}" onto java.util.List<java.lang.Long> com.bootdo.clouddoadmin.controller.RoleController.roleIdByUserId(java.lang.Long)
2019-06-13 09:51:25.022  INFO 9604 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.TestController.test()
2019-06-13 09:51:25.023  INFO 9604 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test1],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.TestController.test1()
2019-06-13 09:51:25.025  INFO 9604 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user],methods=[DELETE]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.remove(java.lang.Long)
2019-06-13 09:51:25.025  INFO 9604 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.get(java.lang.Long)
2019-06-13 09:51:25.026  INFO 9604 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user],methods=[PUT]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.update(com.bootdo.clouddoadmin.dto.UserDTO)
2019-06-13 09:51:25.026  INFO 9604 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user],methods=[POST]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.save(com.bootdo.clouddoadmin.domain.UserDO)
2019-06-13 09:51:25.026  INFO 9604 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/batchRemove],methods=[POST]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.batchRemove(java.lang.Long[])
2019-06-13 09:51:25.026  INFO 9604 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/tokenUser],methods=[GET]}" onto public java.security.Principal com.bootdo.clouddoadmin.controller.UserController.user(java.security.Principal)
2019-06-13 09:51:25.027  INFO 9604 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/currentUser],methods=[GET]}" onto public com.bootdo.clouddocommon.dto.LoginUserDTO com.bootdo.clouddoadmin.controller.UserController.currentUser()
2019-06-13 09:51:25.027  INFO 9604 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/roleId/{roleId}],methods=[GET]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.getTeacherList(java.lang.Long,java.util.Map<java.lang.String, java.lang.Object>)
2019-06-13 09:51:25.028  INFO 9604 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/exits],methods=[POST]}" onto boolean com.bootdo.clouddoadmin.controller.UserController.exits(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-13 09:51:25.031  INFO 9604 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-06-13 09:51:25.032  INFO 9604 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-06-13 09:51:25.033  INFO 9604 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-06-13 09:51:25.037  INFO 9604 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-06-13 09:51:25.037  INFO 9604 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-13 09:51:25.229  INFO 9604 --- [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 2 endpoint(s) beneath base path '/actuator'
2019-06-13 09:51:25.246  INFO 9604 --- [main] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-06-13 09:51:25.248  INFO 9604 --- [main] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-06-13 09:51:25.249  INFO 9604 --- [main] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-13 09:51:26.979  INFO 9604 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@430d3021, org.springframework.security.web.context.SecurityContextPersistenceFilter@df9d400, org.springframework.security.web.header.HeaderWriterFilter@30fa8a6b, org.springframework.security.web.authentication.logout.LogoutFilter@6ea3a513, org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter@288409f0, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@4c2bea52, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4c8d45cf, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@26270b77, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@58f290bc, org.springframework.security.web.session.SessionManagementFilter@342723a3, org.springframework.security.web.access.ExceptionTranslationFilter@3cb04dd, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3129299f]
2019-06-13 09:51:27.016  INFO 9604 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: org.springframework.security.oauth2.config.annotation.web.configuration.ResourceServerConfiguration$NotOAuthRequestMatcher@62158991, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@40738846, org.springframework.security.web.context.SecurityContextPersistenceFilter@3cead673, org.springframework.security.web.header.HeaderWriterFilter@341ccfd1, org.springframework.security.web.authentication.logout.LogoutFilter@2976ef56, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@4c41a177, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@38e7860c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@53ba25ff, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@10a0a1e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1255de25, org.springframework.security.web.session.SessionManagementFilter@5bde6148, org.springframework.security.web.access.ExceptionTranslationFilter@67e11bda, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@42e202d7]
2019-06-13 09:51:27.073  INFO 9604 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@11adab6d, org.springframework.security.web.context.SecurityContextPersistenceFilter@70697478, org.springframework.security.web.header.HeaderWriterFilter@ca2be53, org.springframework.security.web.csrf.CsrfFilter@1f5d7fd5, org.springframework.security.web.authentication.logout.LogoutFilter@2e0652ab, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@389008d1, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@4b9f7edc, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@718f3088, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@42b43a6, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1d622556, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@11bfd751, org.springframework.security.web.session.SessionManagementFilter@78f5cbc5, org.springframework.security.web.access.ExceptionTranslationFilter@37c87fcc, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@eb1d475]
2019-06-13 09:51:27.214  INFO 9604 --- [main] pertySourcedRequestMappingHandlerMapping : Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2019-06-13 09:51:27.670  INFO 9604 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService  'clientInboundChannelExecutor'
2019-06-13 09:51:27.693  INFO 9604 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-06-13 09:51:27.719  INFO 9604 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-06-13 09:51:27.805  INFO 9604 --- [main] o.s.w.s.s.s.WebSocketHandlerMapping      : Mapped URL path [/endpoint/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-06-13 09:51:27.859  INFO 9604 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService  'brokerChannelExecutor'
2019-06-13 09:51:28.109  WARN 9604 --- [main] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2019-06-13 09:51:28.109  INFO 9604 --- [main] c.n.c.sources.URLConfigurationSource     : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-06-13 09:51:28.271  INFO 9604 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-13 09:51:28.606  INFO 9604 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7241a47d: startup date [Thu Jun 13 09:51:08 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@561b6512
2019-06-13 09:51:28.692  INFO 9604 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-13 09:51:28.693  INFO 9604 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-13 09:51:28.721  INFO 9604 --- [main] .m.m.a.ExceptionHandlerExceptionResolver : Detected @ExceptionHandler methods in exceptionAdviceHandler
2019-06-13 09:51:30.911  INFO 9604 --- [main] o.s.ui.freemarker.SpringTemplateLoader   : SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7241a47d: startup date [Thu Jun 13 09:51:08 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@561b6512] and template loader path [classpath:/templates/]
2019-06-13 09:51:30.912  INFO 9604 --- [main] o.s.w.s.v.f.FreeMarkerConfigurer         : ClassTemplateLoader for Spring macros added to FreeMarker configuration
2019-06-13 09:51:31.600  INFO 9604 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2019-06-13 09:51:31.601  INFO 9604 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2019-06-13 09:51:31.613  INFO 9604 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'environmentManager' has been autodetected for JMX exposure
2019-06-13 09:51:31.615  INFO 9604 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'refreshScope' has been autodetected for JMX exposure
2019-06-13 09:51:31.616  INFO 9604 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2019-06-13 09:51:31.621  INFO 9604 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2019-06-13 09:51:31.644  INFO 9604 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2019-06-13 09:51:31.659  INFO 9604 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=7241a47d,type=ConfigurationPropertiesRebinder]
2019-06-13 09:51:31.668  INFO 9604 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-06-13 09:51:31.680  INFO 9604 --- [main] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase 0
2019-06-13 09:51:31.723  INFO 9604 --- [main] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2019-06-13 09:51:31.909  INFO 9604 --- [main] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2019-06-13 09:51:34.242  INFO 9604 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using JSON encoding codec LegacyJacksonJson
2019-06-13 09:51:34.242  INFO 9604 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using JSON decoding codec LegacyJacksonJson
2019-06-13 09:51:34.767  INFO 9604 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using XML encoding codec XStreamXml
2019-06-13 09:51:34.767  INFO 9604 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using XML decoding codec XStreamXml
2019-06-13 09:51:35.217  INFO 9604 --- [main] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 09:51:35.522  INFO 9604 --- [main] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2019-06-13 09:51:35.523  INFO 9604 --- [main] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2019-06-13 09:51:35.523  INFO 9604 --- [main] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2019-06-13 09:51:35.524  INFO 9604 --- [main] com.netflix.discovery.DiscoveryClient    : Application is null : false
2019-06-13 09:51:35.524  INFO 9604 --- [main] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2019-06-13 09:51:35.524  INFO 9604 --- [main] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2019-06-13 09:51:35.524  INFO 9604 --- [main] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2019-06-13 09:51:42.921  INFO 9604 --- [main] com.netflix.discovery.DiscoveryClient    : The response status is 200
2019-06-13 09:51:42.981  INFO 9604 --- [main] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2019-06-13 09:51:42.983  INFO 9604 --- [main] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2019-06-13 09:51:43.133  INFO 9604 --- [main] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1560390702989 with initial instances count: 2
2019-06-13 09:51:43.153  INFO 9604 --- [main] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application api-admin with eureka with status UP
2019-06-13 09:51:43.153  INFO 9604 --- [main] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1560390703153, current=UP, previous=STARTING]
2019-06-13 09:51:43.155  INFO 9604 --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_API-ADMIN/Lenovo-PC:api-admin:8005: registering service...
2019-06-13 09:51:43.159  INFO 9604 --- [main] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase 2147483647
2019-06-13 09:51:43.160  INFO 9604 --- [main] d.s.w.p.DocumentationPluginsBootstrapper : Context refreshed
2019-06-13 09:51:47.227  INFO 9604 --- [main] d.s.w.p.DocumentationPluginsBootstrapper : Found 1 custom documentation plugin(s)
2019-06-13 09:51:50.879  INFO 9604 --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_API-ADMIN/Lenovo-PC:api-admin:8005 - registration status: 204
2019-06-13 09:51:51.679  INFO 9604 --- [main] s.d.s.w.s.ApiListingReferenceScanner     : Scanning for api listing references
2019-06-13 09:51:54.752  INFO 9604 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: removeUsingPOST_1
2019-06-13 09:51:54.882  INFO 9604 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: listUsingGET_1
2019-06-13 09:51:54.890  INFO 9604 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: listUsingGET_2
2019-06-13 09:51:54.903  INFO 9604 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: saveUsingPOST_1
2019-06-13 09:51:54.904  INFO 9604 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: treeUsingGET_1
2019-06-13 09:51:54.906  INFO 9604 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: updateUsingPUT_1
2019-06-13 09:51:54.912  INFO 9604 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: listUsingGET_3
2019-06-13 09:51:54.923  INFO 9604 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: saveUsingPOST_2
2019-06-13 09:51:54.925  INFO 9604 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: updateUsingPUT_2
2019-06-13 09:51:54.938  INFO 9604 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: getUsingGET_1
2019-06-13 09:51:54.941  INFO 9604 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: removeUsingDELETE_1
2019-06-13 09:51:54.946  INFO 9604 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: saveUsingPOST_3
2019-06-13 09:51:54.955  INFO 9604 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: updateUsingPUT_3
2019-06-13 09:51:55.008  INFO 9604 --- [main] o.s.m.s.b.SimpleBrokerMessageHandler     : Starting...
2019-06-13 09:51:55.009  INFO 9604 --- [main] o.s.m.s.b.SimpleBrokerMessageHandler     : BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-06-13 09:51:55.010  INFO 9604 --- [main] o.s.m.s.b.SimpleBrokerMessageHandler     : Started.
2019-06-13 09:51:55.141  INFO 9604 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8005 (http) with context path ''
2019-06-13 09:51:55.143  INFO 9604 --- [main] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 8005
2019-06-13 09:51:55.145  INFO 9604 --- [main] c.b.c.ClouddoAdminApplication            : Started ClouddoAdminApplication in 50.046 seconds (JVM running for 51.484)
2019-06-13 09:51:56.045  INFO 9604 --- [RMI TCP Connection(6)-10.255.47.10] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-06-13 09:51:56.045  INFO 9604 --- [RMI TCP Connection(6)-10.255.47.10] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2019-06-13 09:51:56.145  INFO 9604 --- [RMI TCP Connection(6)-10.255.47.10] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 100 ms
2019-06-13 09:51:57.201  INFO 9604 --- [RMI TCP Connection(5)-10.255.47.10] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2019-06-13 09:51:58.326  INFO 9604 --- [RMI TCP Connection(5)-10.255.47.10] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2019-06-13 09:51:58.329  INFO 9604 --- [RMI TCP Connection(5)-10.255.47.10] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2019-06-13 09:52:27.855  INFO 9604 --- [MessageBroker-1] o.s.w.s.c.WebSocketMessageBrokerStats    : WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-06-13 09:56:35.530  INFO 9604 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 10:01:35.532  INFO 9604 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 10:06:35.535  INFO 9604 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 10:11:35.537  INFO 9604 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 10:16:35.538  INFO 9604 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 10:19:21.131  INFO 8312 --- [main] c.b.c.ClouddoAdminApplication            : No active profile set, falling back to default profiles: default
2019-06-13 10:19:21.154  INFO 8312 --- [main] ConfigServletWebServerApplicationContext : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@12f9af83: startup date [Thu Jun 13 10:19:21 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@139982de
2019-06-13 10:19:23.199  INFO 8312 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-13 10:19:23.906  INFO 8312 --- [main] o.s.cloud.context.scope.GenericScope     : BeanFactory id=1c774fab-2f18-3dff-8fab-5ac3d64963da
2019-06-13 10:19:23.947  INFO 8312 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-06-13 10:19:24.251  INFO 8312 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$da4ebf67] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 10:19:24.623  INFO 8312 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.bootdo.clouddoadmin.config.RedisConfig$$EnhancerBySpringCGLIB$$fcfc08b8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 10:19:24.643  INFO 8312 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.bootdo.clouddoadmin.config.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 10:19:24.737  INFO 8312 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f668c264] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 10:19:25.383  INFO 8312 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8005 (http)
2019-06-13 10:19:25.418  INFO 8312 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2019-06-13 10:19:25.419  INFO 8312 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.32
2019-06-13 10:19:25.425  INFO 8312 --- [localhost-startStop-1] o.a.catalina.core.AprLifecycleListener   : The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_181\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;C:;C:\Program Files\Java\jdk1.8.0_181\bin;D:\myApps\apache-maven-3.6.0\bin;C:\Program Files\Java\jdk1.8.0_181\jre\bin;C:\Program Files\Java\jdk1.8.0_181\bin ;C:\Program Files\TortoiseGit\bin;C:\windows\system32;C:\windows;C:\windows\system32\wbem;D:\StudyTools\XAMPP\mysql\bin;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;D:\系统工具\Git\cmd;D:\StudyTools\NodeJs\;D:\StudyTools\Elang\erl10.0.1\bin;D:\StudyTools\RabbitMQ Server\rabbitmq_server-3.7.7\sbin;;D:\StudyTools\DockerToolbox;D:\StudyTools\NodeJs\node_global;D:\StudyTools\WebStorm 2019.1.2\bin;;.]
2019-06-13 10:19:25.711  INFO 8312 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2019-06-13 10:19:25.712  INFO 8312 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 4558 ms
2019-06-13 10:19:25.734  INFO 8312 --- [localhost-startStop-1] c.b.c.config.DruidConfiguration          : init Druid Servlet Configuration 
2019-06-13 10:19:26.037  WARN 8312 --- [localhost-startStop-1] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2019-06-13 10:19:26.037  INFO 8312 --- [localhost-startStop-1] c.n.c.sources.URLConfigurationSource     : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-06-13 10:19:26.046  INFO 8312 --- [localhost-startStop-1] c.netflix.config.DynamicPropertyFactory  : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@5f1446d3
2019-06-13 10:19:28.900  INFO 8312 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2019-06-13 10:19:28.900  INFO 8312 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'webMvcMetricsFilter' to: [/*]
2019-06-13 10:19:28.901  INFO 8312 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-06-13 10:19:28.901  INFO 8312 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-06-13 10:19:28.901  INFO 8312 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2019-06-13 10:19:28.902  INFO 8312 --- [localhost-startStop-1] .s.DelegatingFilterProxyRegistrationBean : Mapping filter: 'springSecurityFilterChain' to: [/*]
2019-06-13 10:19:28.902  INFO 8312 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpTraceFilter' to: [/*]
2019-06-13 10:19:28.902  INFO 8312 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'webStatFilter' to urls: [/*]
2019-06-13 10:19:28.902  INFO 8312 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Servlet statViewServlet mapped to [/druid/*]
2019-06-13 10:19:28.903  INFO 8312 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Servlet dispatcherServlet mapped to [/]
2019-06-13 10:19:30.368  INFO 8312 --- [main] s.c.a.AnnotationConfigApplicationContext : Refreshing FeignContext-course: startup date [Thu Jun 13 10:19:30 CST 2019]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@12f9af83
2019-06-13 10:19:30.390  INFO 8312 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-06-13 10:19:30.702  INFO 8312 --- [main] s.c.a.AnnotationConfigApplicationContext : Refreshing FeignContext-api-base: startup date [Thu Jun 13 10:19:30 CST 2019]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@12f9af83
2019-06-13 10:19:30.718  INFO 8312 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-06-13 10:19:31.236  INFO 8312 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/authorize],methods=[POST],params=[user_oauth_approval]}" onto public org.springframework.web.servlet.View org.springframework.security.oauth2.provider.endpoint.AuthorizationEndpoint.approveOrDeny(java.util.Map<java.lang.String, java.lang.String>,java.util.Map<java.lang.String, ?>,org.springframework.web.bind.support.SessionStatus,java.security.Principal)
2019-06-13 10:19:31.238  INFO 8312 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/authorize]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.security.oauth2.provider.endpoint.AuthorizationEndpoint.authorize(java.util.Map<java.lang.String, java.lang.Object>,java.util.Map<java.lang.String, java.lang.String>,org.springframework.web.bind.support.SessionStatus,java.security.Principal)
2019-06-13 10:19:31.239  INFO 8312 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/token],methods=[POST]}" onto public org.springframework.http.ResponseEntity<org.springframework.security.oauth2.common.OAuth2AccessToken> org.springframework.security.oauth2.provider.endpoint.TokenEndpoint.postAccessToken(java.security.Principal,java.util.Map<java.lang.String, java.lang.String>) throws org.springframework.web.HttpRequestMethodNotSupportedException
2019-06-13 10:19:31.240  INFO 8312 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/token],methods=[GET]}" onto public org.springframework.http.ResponseEntity<org.springframework.security.oauth2.common.OAuth2AccessToken> org.springframework.security.oauth2.provider.endpoint.TokenEndpoint.getAccessToken(java.security.Principal,java.util.Map<java.lang.String, java.lang.String>) throws org.springframework.web.HttpRequestMethodNotSupportedException
2019-06-13 10:19:31.241  INFO 8312 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/check_token]}" onto public java.util.Map<java.lang.String, ?> org.springframework.security.oauth2.provider.endpoint.CheckTokenEndpoint.checkToken(java.lang.String)
2019-06-13 10:19:31.242  INFO 8312 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/confirm_access]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.security.oauth2.provider.endpoint.WhitelabelApprovalEndpoint.getAccessConfirmation(java.util.Map<java.lang.String, java.lang.Object>,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-06-13 10:19:31.242  INFO 8312 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/error]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.security.oauth2.provider.endpoint.WhitelabelErrorEndpoint.handleError(javax.servlet.http.HttpServletRequest)
2019-06-13 10:19:31.337  INFO 8312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-06-13 10:19:31.337  INFO 8312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/remove],methods=[POST]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.DeptController.remove(java.lang.Long)
2019-06-13 10:19:31.337  INFO 8312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/batchRemove],methods=[POST]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.DeptController.remove(java.lang.Long[])
2019-06-13 10:19:31.338  INFO 8312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/update]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.DeptController.update(com.bootdo.clouddoadmin.domain.DeptDO)
2019-06-13 10:19:31.338  INFO 8312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/list],methods=[GET]}" onto public java.util.List<com.bootdo.clouddoadmin.domain.DeptDO> com.bootdo.clouddoadmin.controller.DeptController.list()
2019-06-13 10:19:31.338  INFO 8312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/save],methods=[POST]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.DeptController.save(com.bootdo.clouddoadmin.domain.DeptDO)
2019-06-13 10:19:31.339  INFO 8312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/tree],methods=[GET]}" onto public com.bootdo.clouddoadmin.domain.Tree<com.bootdo.clouddoadmin.domain.DeptDO> com.bootdo.clouddoadmin.controller.DeptController.tree()
2019-06-13 10:19:31.339  INFO 8312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.DeptController.dept()
2019-06-13 10:19:31.340  INFO 8312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.DeptController.treeView()
2019-06-13 10:19:31.342  INFO 8312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/logout]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.LoginController.logout(java.lang.String)
2019-06-13 10:19:31.342  INFO 8312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/router],methods=[GET]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.LoginController.router()
2019-06-13 10:19:31.346  INFO 8312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu],methods=[DELETE]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.remove(java.lang.Long)
2019-06-13 10:19:31.346  INFO 8312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/{id}],methods=[GET]}" onto com.bootdo.clouddoadmin.domain.MenuDO com.bootdo.clouddoadmin.controller.MenuController.get(java.lang.Long)
2019-06-13 10:19:31.346  INFO 8312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu],methods=[PUT]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.update(com.bootdo.clouddoadmin.domain.MenuDO)
2019-06-13 10:19:31.347  INFO 8312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu],methods=[GET]}" onto java.util.List<com.bootdo.clouddoadmin.domain.Tree<com.bootdo.clouddoadmin.domain.MenuDO>> com.bootdo.clouddoadmin.controller.MenuController.list()
2019-06-13 10:19:31.347  INFO 8312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/list],methods=[GET]}" onto java.util.List<com.bootdo.clouddoadmin.domain.MenuDO> com.bootdo.clouddoadmin.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-13 10:19:31.347  INFO 8312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu],methods=[POST]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.save(com.bootdo.clouddoadmin.domain.MenuDO)
2019-06-13 10:19:31.347  INFO 8312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/tree],methods=[GET]}" onto com.bootdo.clouddoadmin.domain.Tree<com.bootdo.clouddoadmin.domain.MenuDO> com.bootdo.clouddoadmin.controller.MenuController.tree()
2019-06-13 10:19:31.348  INFO 8312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/clearCache],methods=[GET]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.clearCache()
2019-06-13 10:19:31.349  INFO 8312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/userMenus],methods=[GET]}" onto java.util.List<com.bootdo.clouddocommon.dto.MenuDTO> com.bootdo.clouddoadmin.controller.MenuController.userMenus()
2019-06-13 10:19:31.349  INFO 8312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/roleId],methods=[GET]}" onto java.util.List<java.lang.Long> com.bootdo.clouddoadmin.controller.MenuController.menuIdsByRoleId(java.lang.Long)
2019-06-13 10:19:31.349  INFO 8312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/currentUserMenus],methods=[GET]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.currentUserMenus()
2019-06-13 10:19:31.352  INFO 8312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role],methods=[PUT]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.RoleController.update(com.bootdo.clouddoadmin.domain.RoleDO)
2019-06-13 10:19:31.353  INFO 8312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role],methods=[GET]}" onto com.bootdo.clouddocommon.utils.PageUtils com.bootdo.clouddoadmin.controller.RoleController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-13 10:19:31.354  INFO 8312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role],methods=[POST]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.RoleController.save(com.bootdo.clouddoadmin.domain.RoleDO)
2019-06-13 10:19:31.354  INFO 8312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/userId/{userId}],methods=[GET]}" onto java.util.List<java.lang.Long> com.bootdo.clouddoadmin.controller.RoleController.roleIdByUserId(java.lang.Long)
2019-06-13 10:19:31.355  INFO 8312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.TestController.test()
2019-06-13 10:19:31.355  INFO 8312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test1],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.TestController.test1()
2019-06-13 10:19:31.358  INFO 8312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user],methods=[DELETE]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.remove(java.lang.Long)
2019-06-13 10:19:31.358  INFO 8312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.get(java.lang.Long)
2019-06-13 10:19:31.359  INFO 8312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user],methods=[PUT]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.update(com.bootdo.clouddoadmin.dto.UserDTO)
2019-06-13 10:19:31.359  INFO 8312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user],methods=[POST]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.save(com.bootdo.clouddoadmin.domain.UserDO)
2019-06-13 10:19:31.359  INFO 8312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/batchRemove],methods=[POST]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.batchRemove(java.lang.Long[])
2019-06-13 10:19:31.360  INFO 8312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/tokenUser],methods=[GET]}" onto public java.security.Principal com.bootdo.clouddoadmin.controller.UserController.user(java.security.Principal)
2019-06-13 10:19:31.360  INFO 8312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/currentUser],methods=[GET]}" onto public com.bootdo.clouddocommon.dto.LoginUserDTO com.bootdo.clouddoadmin.controller.UserController.currentUser()
2019-06-13 10:19:31.361  INFO 8312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/roleId/{roleId}],methods=[GET]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.getTeacherList(java.lang.Long,java.util.Map<java.lang.String, java.lang.Object>)
2019-06-13 10:19:31.362  INFO 8312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/exits],methods=[POST]}" onto boolean com.bootdo.clouddoadmin.controller.UserController.exits(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-13 10:19:31.365  INFO 8312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-06-13 10:19:31.366  INFO 8312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-06-13 10:19:31.368  INFO 8312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-06-13 10:19:31.371  INFO 8312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-06-13 10:19:31.371  INFO 8312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-13 10:19:31.553  INFO 8312 --- [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 2 endpoint(s) beneath base path '/actuator'
2019-06-13 10:19:31.577  INFO 8312 --- [main] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-06-13 10:19:31.579  INFO 8312 --- [main] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-06-13 10:19:31.580  INFO 8312 --- [main] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-13 10:19:32.634  INFO 8312 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@b34c7c9, org.springframework.security.web.context.SecurityContextPersistenceFilter@d4ecdb0, org.springframework.security.web.header.HeaderWriterFilter@3c7d8a4, org.springframework.security.web.authentication.logout.LogoutFilter@1328f482, org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter@661db63e, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@4cc4d454, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7a117dc2, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4eb1943b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5b490d5e, org.springframework.security.web.session.SessionManagementFilter@43423d40, org.springframework.security.web.access.ExceptionTranslationFilter@603f4e3e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3cb04dd]
2019-06-13 10:19:32.661  INFO 8312 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: org.springframework.security.oauth2.config.annotation.web.configuration.ResourceServerConfiguration$NotOAuthRequestMatcher@50f3ba6a, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@319aa9ee, org.springframework.security.web.context.SecurityContextPersistenceFilter@75b363c3, org.springframework.security.web.header.HeaderWriterFilter@6231f77a, org.springframework.security.web.authentication.logout.LogoutFilter@4b336cc8, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@402f61f5, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@35454c7a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6ea3a513, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3c4059a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1d806de6, org.springframework.security.web.session.SessionManagementFilter@290c266c, org.springframework.security.web.access.ExceptionTranslationFilter@2c56eba5, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@8549c5f]
2019-06-13 10:19:32.709  INFO 8312 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6de33fde, org.springframework.security.web.context.SecurityContextPersistenceFilter@19f497aa, org.springframework.security.web.header.HeaderWriterFilter@54234569, org.springframework.security.web.csrf.CsrfFilter@11cc9e1e, org.springframework.security.web.authentication.logout.LogoutFilter@2efcc0b3, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@78b9155e, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@9147ba2, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@2ceb68a1, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@36a58466, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@78e387d6, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@69c33ea2, org.springframework.security.web.session.SessionManagementFilter@21ea1d9d, org.springframework.security.web.access.ExceptionTranslationFilter@5b0e9e0c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1be3f8f8]
2019-06-13 10:19:32.791  INFO 8312 --- [main] pertySourcedRequestMappingHandlerMapping : Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2019-06-13 10:19:33.066  INFO 8312 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService  'clientInboundChannelExecutor'
2019-06-13 10:19:33.090  INFO 8312 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-06-13 10:19:33.117  INFO 8312 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-06-13 10:19:33.174  INFO 8312 --- [main] o.s.w.s.s.s.WebSocketHandlerMapping      : Mapped URL path [/endpoint/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-06-13 10:19:33.203  INFO 8312 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService  'brokerChannelExecutor'
2019-06-13 10:19:33.432  WARN 8312 --- [main] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2019-06-13 10:19:33.432  INFO 8312 --- [main] c.n.c.sources.URLConfigurationSource     : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-06-13 10:19:33.576  INFO 8312 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-13 10:19:33.726  INFO 8312 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@12f9af83: startup date [Thu Jun 13 10:19:21 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@139982de
2019-06-13 10:19:33.812  INFO 8312 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-13 10:19:33.813  INFO 8312 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-13 10:19:33.841  INFO 8312 --- [main] .m.m.a.ExceptionHandlerExceptionResolver : Detected @ExceptionHandler methods in exceptionAdviceHandler
2019-06-13 10:19:35.044  INFO 8312 --- [main] o.s.ui.freemarker.SpringTemplateLoader   : SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@12f9af83: startup date [Thu Jun 13 10:19:21 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@139982de] and template loader path [classpath:/templates/]
2019-06-13 10:19:35.045  INFO 8312 --- [main] o.s.w.s.v.f.FreeMarkerConfigurer         : ClassTemplateLoader for Spring macros added to FreeMarker configuration
2019-06-13 10:19:35.589  INFO 8312 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2019-06-13 10:19:35.591  INFO 8312 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2019-06-13 10:19:35.603  INFO 8312 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'environmentManager' has been autodetected for JMX exposure
2019-06-13 10:19:35.605  INFO 8312 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'refreshScope' has been autodetected for JMX exposure
2019-06-13 10:19:35.607  INFO 8312 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2019-06-13 10:19:35.612  INFO 8312 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2019-06-13 10:19:35.623  INFO 8312 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2019-06-13 10:19:35.637  INFO 8312 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=12f9af83,type=ConfigurationPropertiesRebinder]
2019-06-13 10:19:35.648  INFO 8312 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-06-13 10:19:35.660  INFO 8312 --- [main] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase 0
2019-06-13 10:19:35.679  INFO 8312 --- [main] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2019-06-13 10:19:35.713  INFO 8312 --- [main] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2019-06-13 10:19:36.138  INFO 8312 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using JSON encoding codec LegacyJacksonJson
2019-06-13 10:19:36.139  INFO 8312 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using JSON decoding codec LegacyJacksonJson
2019-06-13 10:19:36.280  INFO 8312 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using XML encoding codec XStreamXml
2019-06-13 10:19:36.280  INFO 8312 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using XML decoding codec XStreamXml
2019-06-13 10:19:36.536  INFO 8312 --- [main] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 10:19:36.758  INFO 8312 --- [main] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2019-06-13 10:19:36.758  INFO 8312 --- [main] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2019-06-13 10:19:36.758  INFO 8312 --- [main] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2019-06-13 10:19:36.758  INFO 8312 --- [main] com.netflix.discovery.DiscoveryClient    : Application is null : false
2019-06-13 10:19:36.758  INFO 8312 --- [main] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2019-06-13 10:19:36.758  INFO 8312 --- [main] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2019-06-13 10:19:36.758  INFO 8312 --- [main] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2019-06-13 10:19:36.936  INFO 8312 --- [main] com.netflix.discovery.DiscoveryClient    : The response status is 200
2019-06-13 10:19:36.939  INFO 8312 --- [main] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2019-06-13 10:19:36.941  INFO 8312 --- [main] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2019-06-13 10:19:36.945  INFO 8312 --- [main] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1560392376944 with initial instances count: 2
2019-06-13 10:19:36.963  INFO 8312 --- [main] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application api-admin with eureka with status UP
2019-06-13 10:19:36.963  INFO 8312 --- [main] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1560392376963, current=UP, previous=STARTING]
2019-06-13 10:19:36.965  INFO 8312 --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_API-ADMIN/Lenovo-PC:api-admin:8005: registering service...
2019-06-13 10:19:36.970  INFO 8312 --- [main] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase 2147483647
2019-06-13 10:19:36.970  INFO 8312 --- [main] d.s.w.p.DocumentationPluginsBootstrapper : Context refreshed
2019-06-13 10:19:37.005  INFO 8312 --- [main] d.s.w.p.DocumentationPluginsBootstrapper : Found 1 custom documentation plugin(s)
2019-06-13 10:19:37.011  INFO 8312 --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_API-ADMIN/Lenovo-PC:api-admin:8005 - registration status: 204
2019-06-13 10:19:37.087  INFO 8312 --- [main] s.d.s.w.s.ApiListingReferenceScanner     : Scanning for api listing references
2019-06-13 10:19:37.227  INFO 8312 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: removeUsingPOST_1
2019-06-13 10:19:37.307  INFO 8312 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: listUsingGET_1
2019-06-13 10:19:37.312  INFO 8312 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: listUsingGET_2
2019-06-13 10:19:37.318  INFO 8312 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: saveUsingPOST_1
2019-06-13 10:19:37.320  INFO 8312 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: treeUsingGET_1
2019-06-13 10:19:37.321  INFO 8312 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: updateUsingPUT_1
2019-06-13 10:19:37.330  INFO 8312 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: listUsingGET_3
2019-06-13 10:19:37.342  INFO 8312 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: saveUsingPOST_2
2019-06-13 10:19:37.344  INFO 8312 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: updateUsingPUT_2
2019-06-13 10:19:37.359  INFO 8312 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: getUsingGET_1
2019-06-13 10:19:37.364  INFO 8312 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: removeUsingDELETE_1
2019-06-13 10:19:37.371  INFO 8312 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: saveUsingPOST_3
2019-06-13 10:19:37.379  INFO 8312 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: updateUsingPUT_3
2019-06-13 10:19:37.399  INFO 8312 --- [main] o.s.m.s.b.SimpleBrokerMessageHandler     : Starting...
2019-06-13 10:19:37.401  INFO 8312 --- [main] o.s.m.s.b.SimpleBrokerMessageHandler     : BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-06-13 10:19:37.402  INFO 8312 --- [main] o.s.m.s.b.SimpleBrokerMessageHandler     : Started.
2019-06-13 10:19:37.471  INFO 8312 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8005 (http) with context path ''
2019-06-13 10:19:37.473  INFO 8312 --- [main] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 8005
2019-06-13 10:19:37.477  INFO 8312 --- [main] c.b.c.ClouddoAdminApplication            : Started ClouddoAdminApplication in 19.718 seconds (JVM running for 21.291)
2019-06-13 10:19:38.420  INFO 8312 --- [RMI TCP Connection(2)-10.255.47.10] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-06-13 10:19:38.420  INFO 8312 --- [RMI TCP Connection(2)-10.255.47.10] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2019-06-13 10:19:38.583  INFO 8312 --- [RMI TCP Connection(2)-10.255.47.10] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 163 ms
2019-06-13 10:19:38.967  INFO 8312 --- [RMI TCP Connection(3)-10.255.47.10] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2019-06-13 10:19:39.248  INFO 8312 --- [RMI TCP Connection(3)-10.255.47.10] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2019-06-13 10:19:39.250  INFO 8312 --- [RMI TCP Connection(3)-10.255.47.10] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2019-06-13 10:20:05.560  INFO 8312 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/currentUser
2019-06-13 10:20:05.560  INFO 8312 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/router
2019-06-13 10:20:05.561  INFO 8312 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 10:20:05.561  INFO 8312 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 10:20:05.591  INFO 8312 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.LoginController.router
2019-06-13 10:20:05.591  INFO 8312 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.currentUser
2019-06-13 10:20:05.592  INFO 8312 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 10:20:05.592  INFO 8312 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 10:20:05.695  INFO 8312 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 135
2019-06-13 10:20:05.695  INFO 8312 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 135
2019-06-13 10:20:05.703  INFO 8312 --- [http-nio-8005-exec-2] .s.a.AnnotationAsyncExecutionInterceptor : More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-06-13 10:20:05.730  INFO 8312 --- [SimpleAsyncTaskExecutor-1] feign.RequestInterceptor                 : ------feign设置token110
2019-06-13 10:20:05.730  INFO 8312 --- [SimpleAsyncTaskExecutor-2] feign.RequestInterceptor                 : ------feign设置token111
2019-06-13 10:20:05.759  INFO 8312 --- [SimpleAsyncTaskExecutor-2] s.c.a.AnnotationConfigApplicationContext : Refreshing SpringClientFactory-api-base: startup date [Thu Jun 13 10:20:05 CST 2019]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@12f9af83
2019-06-13 10:20:05.970  INFO 8312 --- [SimpleAsyncTaskExecutor-2] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-06-13 10:20:06.471  INFO 8312 --- [SimpleAsyncTaskExecutor-2] c.netflix.config.ChainedDynamicProperty  : Flipping property: api-base.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-06-13 10:20:06.498  INFO 8312 --- [SimpleAsyncTaskExecutor-2] c.n.u.concurrent.ShutdownEnabledTimer    : Shutdown hook installed for: NFLoadBalancer-PingTimer-api-base
2019-06-13 10:20:06.507  INFO 8312 --- [SimpleAsyncTaskExecutor-2] c.netflix.loadbalancer.BaseLoadBalancer  : Client: api-base instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=api-base,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2019-06-13 10:20:06.529  INFO 8312 --- [SimpleAsyncTaskExecutor-2] c.n.l.DynamicServerListLoadBalancer      : Using serverListUpdater PollingServerListUpdater
2019-06-13 10:20:06.536  INFO 8312 --- [SimpleAsyncTaskExecutor-2] c.n.l.DynamicServerListLoadBalancer      : DynamicServerListLoadBalancer for client api-base initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=api-base,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@5ba4b615
2019-06-13 10:20:06.778 ERROR 8312 --- [SimpleAsyncTaskExecutor-1] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 10:20:06.778 ERROR 8312 --- [SimpleAsyncTaskExecutor-2] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 10:20:09.142  INFO 8312 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/roleId/2
2019-06-13 10:20:09.146  INFO 8312 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 10:20:09.146  INFO 8312 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.getTeacherList
2019-06-13 10:20:09.147  INFO 8312 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : [2, {page=1, limit=10, name=}]
2019-06-13 10:20:09.180  INFO 8312 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 38
2019-06-13 10:20:09.193  INFO 8312 --- [SimpleAsyncTaskExecutor-3] feign.RequestInterceptor                 : ------feign设置token120
2019-06-13 10:20:09.200 ERROR 8312 --- [SimpleAsyncTaskExecutor-3] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 10:20:17.336  INFO 8312 --- [http-nio-8005-exec-5] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/role
2019-06-13 10:20:17.336  INFO 8312 --- [http-nio-8005-exec-5] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 10:20:17.336  INFO 8312 --- [http-nio-8005-exec-5] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.RoleController.list
2019-06-13 10:20:17.336  INFO 8312 --- [http-nio-8005-exec-5] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : [{}]
2019-06-13 10:20:17.892  INFO 8312 --- [http-nio-8005-exec-5] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 556
2019-06-13 10:20:17.896  INFO 8312 --- [SimpleAsyncTaskExecutor-4] feign.RequestInterceptor                 : ------feign设置token121
2019-06-13 10:20:17.898 ERROR 8312 --- [SimpleAsyncTaskExecutor-4] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 10:20:27.050  INFO 8312 --- [http-nio-8005-exec-7] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user
2019-06-13 10:20:27.051  INFO 8312 --- [http-nio-8005-exec-7] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : PUT
2019-06-13 10:20:27.052  INFO 8312 --- [http-nio-8005-exec-7] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.update
2019-06-13 10:20:27.053  INFO 8312 --- [http-nio-8005-exec-7] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : [UserDTO{, id=2, username=teacher1, name=李四, password=null, email=teacher@example.com, phone=15890932709, status=null, createTime=null, modifyTime=null, sex=男}]
2019-06-13 10:20:27.303  INFO 8312 --- [http-nio-8005-exec-7] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 253
2019-06-13 10:20:27.529  INFO 8312 --- [http-nio-8005-exec-8] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/roleId/2
2019-06-13 10:20:27.529  INFO 8312 --- [http-nio-8005-exec-8] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 10:20:27.529  INFO 8312 --- [http-nio-8005-exec-8] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.getTeacherList
2019-06-13 10:20:27.529  INFO 8312 --- [http-nio-8005-exec-8] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : [2, {page=1, limit=10, name=}]
2019-06-13 10:20:27.544  INFO 8312 --- [http-nio-8005-exec-8] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 15
2019-06-13 10:20:27.545  INFO 8312 --- [SimpleAsyncTaskExecutor-5] feign.RequestInterceptor                 : ------feign设置token122
2019-06-13 10:20:27.547 ERROR 8312 --- [SimpleAsyncTaskExecutor-5] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 10:20:33.201  INFO 8312 --- [MessageBroker-1] o.s.w.s.c.WebSocketMessageBrokerStats    : WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-06-13 10:21:15.320  INFO 8312 --- [http-nio-8005-exec-9] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/currentUser
2019-06-13 10:21:15.321  INFO 8312 --- [http-nio-8005-exec-9] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 10:21:15.321  INFO 8312 --- [http-nio-8005-exec-9] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.currentUser
2019-06-13 10:21:15.321  INFO 8312 --- [http-nio-8005-exec-9] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 10:21:15.326  INFO 8312 --- [http-nio-8005-exec-10] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/roleId/2
2019-06-13 10:21:15.328  INFO 8312 --- [http-nio-8005-exec-10] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 10:21:15.329  INFO 8312 --- [http-nio-8005-exec-10] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.getTeacherList
2019-06-13 10:21:15.329  INFO 8312 --- [http-nio-8005-exec-10] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : [2, {page=1, limit=10, name=}]
2019-06-13 10:21:15.335  INFO 8312 --- [http-nio-8005-exec-9] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 15
2019-06-13 10:21:15.339  INFO 8312 --- [SimpleAsyncTaskExecutor-6] feign.RequestInterceptor                 : ------feign设置token124
2019-06-13 10:21:15.340  INFO 8312 --- [http-nio-8005-exec-10] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 14
2019-06-13 10:21:15.351  INFO 8312 --- [SimpleAsyncTaskExecutor-7] feign.RequestInterceptor                 : ------feign设置token125
2019-06-13 10:21:15.351  INFO 8312 --- [http-nio-8005-exec-1] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/router
2019-06-13 10:21:15.351  INFO 8312 --- [http-nio-8005-exec-1] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 10:21:15.351 ERROR 8312 --- [SimpleAsyncTaskExecutor-6] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 10:21:15.351  INFO 8312 --- [http-nio-8005-exec-1] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.LoginController.router
2019-06-13 10:21:15.351  INFO 8312 --- [http-nio-8005-exec-1] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 10:21:15.352 ERROR 8312 --- [SimpleAsyncTaskExecutor-7] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 10:21:15.353  INFO 8312 --- [http-nio-8005-exec-1] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 2
2019-06-13 10:21:15.354  INFO 8312 --- [SimpleAsyncTaskExecutor-8] feign.RequestInterceptor                 : ------feign设置token126
2019-06-13 10:21:15.355 ERROR 8312 --- [SimpleAsyncTaskExecutor-8] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 10:22:05.607  INFO 8312 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/currentUser
2019-06-13 10:22:05.608  INFO 8312 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 10:22:05.608  INFO 8312 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.currentUser
2019-06-13 10:22:05.608  INFO 8312 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 10:22:05.609  INFO 8312 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 2
2019-06-13 10:22:05.610  INFO 8312 --- [SimpleAsyncTaskExecutor-9] feign.RequestInterceptor                 : ------feign设置token127
2019-06-13 10:22:05.612 ERROR 8312 --- [SimpleAsyncTaskExecutor-9] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 10:22:05.626  INFO 8312 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/router
2019-06-13 10:22:05.626  INFO 8312 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 10:22:05.626  INFO 8312 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.LoginController.router
2019-06-13 10:22:05.626  INFO 8312 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 10:22:05.629  INFO 8312 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 3
2019-06-13 10:22:05.630  INFO 8312 --- [SimpleAsyncTaskExecutor-10] feign.RequestInterceptor                 : ------feign设置token128
2019-06-13 10:22:05.632 ERROR 8312 --- [SimpleAsyncTaskExecutor-10] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 10:22:07.866  INFO 8312 --- [http-nio-8005-exec-5] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/roleId/2
2019-06-13 10:22:07.866  INFO 8312 --- [http-nio-8005-exec-5] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 10:22:07.866  INFO 8312 --- [http-nio-8005-exec-5] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.getTeacherList
2019-06-13 10:22:07.866  INFO 8312 --- [http-nio-8005-exec-5] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : [2, {page=1, limit=10, name=}]
2019-06-13 10:22:07.880  INFO 8312 --- [http-nio-8005-exec-5] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 15
2019-06-13 10:22:07.881  INFO 8312 --- [SimpleAsyncTaskExecutor-11] feign.RequestInterceptor                 : ------feign设置token129
2019-06-13 10:22:07.889 ERROR 8312 --- [SimpleAsyncTaskExecutor-11] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 10:24:36.761  INFO 8312 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 10:25:19.622  INFO 6772 --- [main] c.b.c.ClouddoAdminApplication            : No active profile set, falling back to default profiles: default
2019-06-13 10:25:19.640  INFO 6772 --- [main] ConfigServletWebServerApplicationContext : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6d025197: startup date [Thu Jun 13 10:25:19 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4c12331b
2019-06-13 10:25:21.155  INFO 6772 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-13 10:25:21.721  INFO 6772 --- [main] o.s.cloud.context.scope.GenericScope     : BeanFactory id=1c774fab-2f18-3dff-8fab-5ac3d64963da
2019-06-13 10:25:21.761  INFO 6772 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-06-13 10:25:22.010  INFO 6772 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$55e1c85a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 10:25:22.346  INFO 6772 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.bootdo.clouddoadmin.config.RedisConfig$$EnhancerBySpringCGLIB$$788f11ab] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 10:25:22.366  INFO 6772 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.bootdo.clouddoadmin.config.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 10:25:22.456  INFO 6772 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$71fbcb57] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 10:25:22.997  INFO 6772 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8005 (http)
2019-06-13 10:25:23.023  INFO 6772 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2019-06-13 10:25:23.023  INFO 6772 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.32
2019-06-13 10:25:23.029  INFO 6772 --- [localhost-startStop-1] o.a.catalina.core.AprLifecycleListener   : The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_181\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;C:;C:\Program Files\Java\jdk1.8.0_181\bin;D:\myApps\apache-maven-3.6.0\bin;C:\Program Files\Java\jdk1.8.0_181\jre\bin;C:\Program Files\Java\jdk1.8.0_181\bin ;C:\Program Files\TortoiseGit\bin;C:\windows\system32;C:\windows;C:\windows\system32\wbem;D:\StudyTools\XAMPP\mysql\bin;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;D:\系统工具\Git\cmd;D:\StudyTools\NodeJs\;D:\StudyTools\Elang\erl10.0.1\bin;D:\StudyTools\RabbitMQ Server\rabbitmq_server-3.7.7\sbin;;D:\StudyTools\DockerToolbox;D:\StudyTools\NodeJs\node_global;D:\StudyTools\WebStorm 2019.1.2\bin;;.]
2019-06-13 10:25:23.203  INFO 6772 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2019-06-13 10:25:23.203  INFO 6772 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 3563 ms
2019-06-13 10:25:23.227  INFO 6772 --- [localhost-startStop-1] c.b.c.config.DruidConfiguration          : init Druid Servlet Configuration 
2019-06-13 10:25:23.546  WARN 6772 --- [localhost-startStop-1] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2019-06-13 10:25:23.547  INFO 6772 --- [localhost-startStop-1] c.n.c.sources.URLConfigurationSource     : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-06-13 10:25:23.556  INFO 6772 --- [localhost-startStop-1] c.netflix.config.DynamicPropertyFactory  : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@6e581ca8
2019-06-13 10:25:26.153  INFO 6772 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2019-06-13 10:25:26.154  INFO 6772 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'webMvcMetricsFilter' to: [/*]
2019-06-13 10:25:26.155  INFO 6772 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-06-13 10:25:26.155  INFO 6772 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-06-13 10:25:26.155  INFO 6772 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2019-06-13 10:25:26.156  INFO 6772 --- [localhost-startStop-1] .s.DelegatingFilterProxyRegistrationBean : Mapping filter: 'springSecurityFilterChain' to: [/*]
2019-06-13 10:25:26.157  INFO 6772 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpTraceFilter' to: [/*]
2019-06-13 10:25:26.157  INFO 6772 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'webStatFilter' to urls: [/*]
2019-06-13 10:25:26.157  INFO 6772 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Servlet statViewServlet mapped to [/druid/*]
2019-06-13 10:25:26.158  INFO 6772 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Servlet dispatcherServlet mapped to [/]
2019-06-13 10:25:27.321  INFO 6772 --- [main] s.c.a.AnnotationConfigApplicationContext : Refreshing FeignContext-course: startup date [Thu Jun 13 10:25:27 CST 2019]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6d025197
2019-06-13 10:25:27.342  INFO 6772 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-06-13 10:25:27.596  INFO 6772 --- [main] s.c.a.AnnotationConfigApplicationContext : Refreshing FeignContext-api-base: startup date [Thu Jun 13 10:25:27 CST 2019]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6d025197
2019-06-13 10:25:27.613  INFO 6772 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-06-13 10:25:28.148  INFO 6772 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/authorize],methods=[POST],params=[user_oauth_approval]}" onto public org.springframework.web.servlet.View org.springframework.security.oauth2.provider.endpoint.AuthorizationEndpoint.approveOrDeny(java.util.Map<java.lang.String, java.lang.String>,java.util.Map<java.lang.String, ?>,org.springframework.web.bind.support.SessionStatus,java.security.Principal)
2019-06-13 10:25:28.150  INFO 6772 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/authorize]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.security.oauth2.provider.endpoint.AuthorizationEndpoint.authorize(java.util.Map<java.lang.String, java.lang.Object>,java.util.Map<java.lang.String, java.lang.String>,org.springframework.web.bind.support.SessionStatus,java.security.Principal)
2019-06-13 10:25:28.151  INFO 6772 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/token],methods=[GET]}" onto public org.springframework.http.ResponseEntity<org.springframework.security.oauth2.common.OAuth2AccessToken> org.springframework.security.oauth2.provider.endpoint.TokenEndpoint.getAccessToken(java.security.Principal,java.util.Map<java.lang.String, java.lang.String>) throws org.springframework.web.HttpRequestMethodNotSupportedException
2019-06-13 10:25:28.152  INFO 6772 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/token],methods=[POST]}" onto public org.springframework.http.ResponseEntity<org.springframework.security.oauth2.common.OAuth2AccessToken> org.springframework.security.oauth2.provider.endpoint.TokenEndpoint.postAccessToken(java.security.Principal,java.util.Map<java.lang.String, java.lang.String>) throws org.springframework.web.HttpRequestMethodNotSupportedException
2019-06-13 10:25:28.153  INFO 6772 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/check_token]}" onto public java.util.Map<java.lang.String, ?> org.springframework.security.oauth2.provider.endpoint.CheckTokenEndpoint.checkToken(java.lang.String)
2019-06-13 10:25:28.154  INFO 6772 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/confirm_access]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.security.oauth2.provider.endpoint.WhitelabelApprovalEndpoint.getAccessConfirmation(java.util.Map<java.lang.String, java.lang.Object>,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-06-13 10:25:28.154  INFO 6772 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/error]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.security.oauth2.provider.endpoint.WhitelabelErrorEndpoint.handleError(javax.servlet.http.HttpServletRequest)
2019-06-13 10:25:28.280  INFO 6772 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-06-13 10:25:28.280  INFO 6772 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/remove],methods=[POST]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.DeptController.remove(java.lang.Long)
2019-06-13 10:25:28.281  INFO 6772 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/batchRemove],methods=[POST]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.DeptController.remove(java.lang.Long[])
2019-06-13 10:25:28.281  INFO 6772 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/update]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.DeptController.update(com.bootdo.clouddoadmin.domain.DeptDO)
2019-06-13 10:25:28.281  INFO 6772 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/list],methods=[GET]}" onto public java.util.List<com.bootdo.clouddoadmin.domain.DeptDO> com.bootdo.clouddoadmin.controller.DeptController.list()
2019-06-13 10:25:28.282  INFO 6772 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/save],methods=[POST]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.DeptController.save(com.bootdo.clouddoadmin.domain.DeptDO)
2019-06-13 10:25:28.282  INFO 6772 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/tree],methods=[GET]}" onto public com.bootdo.clouddoadmin.domain.Tree<com.bootdo.clouddoadmin.domain.DeptDO> com.bootdo.clouddoadmin.controller.DeptController.tree()
2019-06-13 10:25:28.283  INFO 6772 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.DeptController.dept()
2019-06-13 10:25:28.283  INFO 6772 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.DeptController.treeView()
2019-06-13 10:25:28.284  INFO 6772 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/logout]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.LoginController.logout(java.lang.String)
2019-06-13 10:25:28.285  INFO 6772 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/router],methods=[GET]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.LoginController.router()
2019-06-13 10:25:28.290  INFO 6772 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu],methods=[DELETE]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.remove(java.lang.Long)
2019-06-13 10:25:28.291  INFO 6772 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/{id}],methods=[GET]}" onto com.bootdo.clouddoadmin.domain.MenuDO com.bootdo.clouddoadmin.controller.MenuController.get(java.lang.Long)
2019-06-13 10:25:28.292  INFO 6772 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu],methods=[PUT]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.update(com.bootdo.clouddoadmin.domain.MenuDO)
2019-06-13 10:25:28.293  INFO 6772 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu],methods=[GET]}" onto java.util.List<com.bootdo.clouddoadmin.domain.Tree<com.bootdo.clouddoadmin.domain.MenuDO>> com.bootdo.clouddoadmin.controller.MenuController.list()
2019-06-13 10:25:28.293  INFO 6772 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/list],methods=[GET]}" onto java.util.List<com.bootdo.clouddoadmin.domain.MenuDO> com.bootdo.clouddoadmin.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-13 10:25:28.294  INFO 6772 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu],methods=[POST]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.save(com.bootdo.clouddoadmin.domain.MenuDO)
2019-06-13 10:25:28.294  INFO 6772 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/tree],methods=[GET]}" onto com.bootdo.clouddoadmin.domain.Tree<com.bootdo.clouddoadmin.domain.MenuDO> com.bootdo.clouddoadmin.controller.MenuController.tree()
2019-06-13 10:25:28.295  INFO 6772 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/clearCache],methods=[GET]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.clearCache()
2019-06-13 10:25:28.296  INFO 6772 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/userMenus],methods=[GET]}" onto java.util.List<com.bootdo.clouddocommon.dto.MenuDTO> com.bootdo.clouddoadmin.controller.MenuController.userMenus()
2019-06-13 10:25:28.296  INFO 6772 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/currentUserMenus],methods=[GET]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.currentUserMenus()
2019-06-13 10:25:28.297  INFO 6772 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/roleId],methods=[GET]}" onto java.util.List<java.lang.Long> com.bootdo.clouddoadmin.controller.MenuController.menuIdsByRoleId(java.lang.Long)
2019-06-13 10:25:28.301  INFO 6772 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role],methods=[PUT]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.RoleController.update(com.bootdo.clouddoadmin.domain.RoleDO)
2019-06-13 10:25:28.301  INFO 6772 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role],methods=[GET]}" onto com.bootdo.clouddocommon.utils.PageUtils com.bootdo.clouddoadmin.controller.RoleController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-13 10:25:28.302  INFO 6772 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role],methods=[POST]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.RoleController.save(com.bootdo.clouddoadmin.domain.RoleDO)
2019-06-13 10:25:28.302  INFO 6772 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/userId/{userId}],methods=[GET]}" onto java.util.List<java.lang.Long> com.bootdo.clouddoadmin.controller.RoleController.roleIdByUserId(java.lang.Long)
2019-06-13 10:25:28.303  INFO 6772 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.TestController.test()
2019-06-13 10:25:28.304  INFO 6772 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test1],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.TestController.test1()
2019-06-13 10:25:28.306  INFO 6772 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user],methods=[DELETE]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.remove(java.lang.Long)
2019-06-13 10:25:28.307  INFO 6772 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.get(java.lang.Long)
2019-06-13 10:25:28.307  INFO 6772 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user],methods=[PUT]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.update(com.bootdo.clouddoadmin.dto.UserDTO)
2019-06-13 10:25:28.307  INFO 6772 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user],methods=[POST]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.save(com.bootdo.clouddoadmin.domain.UserDO)
2019-06-13 10:25:28.308  INFO 6772 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/batchRemove],methods=[POST]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.batchRemove(java.lang.Long[])
2019-06-13 10:25:28.308  INFO 6772 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/tokenUser],methods=[GET]}" onto public java.security.Principal com.bootdo.clouddoadmin.controller.UserController.user(java.security.Principal)
2019-06-13 10:25:28.308  INFO 6772 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/currentUser],methods=[GET]}" onto public com.bootdo.clouddocommon.dto.LoginUserDTO com.bootdo.clouddoadmin.controller.UserController.currentUser()
2019-06-13 10:25:28.309  INFO 6772 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/exits],methods=[POST]}" onto boolean com.bootdo.clouddoadmin.controller.UserController.exits(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-13 10:25:28.309  INFO 6772 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/roleId/{roleId}],methods=[GET]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.getTeacherList(java.lang.Long,java.util.Map<java.lang.String, java.lang.Object>)
2019-06-13 10:25:28.316  INFO 6772 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-06-13 10:25:28.317  INFO 6772 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-06-13 10:25:28.319  INFO 6772 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-06-13 10:25:28.324  INFO 6772 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-06-13 10:25:28.325  INFO 6772 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-13 10:25:28.523  INFO 6772 --- [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 2 endpoint(s) beneath base path '/actuator'
2019-06-13 10:25:28.545  INFO 6772 --- [main] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-06-13 10:25:28.547  INFO 6772 --- [main] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-06-13 10:25:28.548  INFO 6772 --- [main] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-13 10:25:29.417  INFO 6772 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@20231384, org.springframework.security.web.context.SecurityContextPersistenceFilter@33430fc, org.springframework.security.web.header.HeaderWriterFilter@1e6cb932, org.springframework.security.web.authentication.logout.LogoutFilter@669c2b07, org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter@4f6fd101, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@2beee3e8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@22ae32ba, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6c66ddab, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3ba97962, org.springframework.security.web.session.SessionManagementFilter@523abba9, org.springframework.security.web.access.ExceptionTranslationFilter@40a28bda, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@173a5fad]
2019-06-13 10:25:29.440  INFO 6772 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: org.springframework.security.oauth2.config.annotation.web.configuration.ResourceServerConfiguration$NotOAuthRequestMatcher@7df3da0b, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4e5d5ac1, org.springframework.security.web.context.SecurityContextPersistenceFilter@fde487b, org.springframework.security.web.header.HeaderWriterFilter@4ec427, org.springframework.security.web.authentication.logout.LogoutFilter@1c58d7be, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@18513c23, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@6cd7f381, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4cc4d454, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3add5e17, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@70777a65, org.springframework.security.web.session.SessionManagementFilter@4c8d45cf, org.springframework.security.web.access.ExceptionTranslationFilter@df9d400, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4ffe3d42]
2019-06-13 10:25:29.484  INFO 6772 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2e7a9db7, org.springframework.security.web.context.SecurityContextPersistenceFilter@4f541e67, org.springframework.security.web.header.HeaderWriterFilter@1d806de6, org.springframework.security.web.csrf.CsrfFilter@35454c7a, org.springframework.security.web.authentication.logout.LogoutFilter@15371de2, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@7827d7b, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@79c4f23b, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@646cb2e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2be50bba, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3514ac7d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5315266, org.springframework.security.web.session.SessionManagementFilter@2b9d4b0, org.springframework.security.web.access.ExceptionTranslationFilter@319aa9ee, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3350ab4]
2019-06-13 10:25:29.586  INFO 6772 --- [main] pertySourcedRequestMappingHandlerMapping : Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2019-06-13 10:25:29.816  INFO 6772 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService  'clientInboundChannelExecutor'
2019-06-13 10:25:29.837  INFO 6772 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-06-13 10:25:29.860  INFO 6772 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-06-13 10:25:29.909  INFO 6772 --- [main] o.s.w.s.s.s.WebSocketHandlerMapping      : Mapped URL path [/endpoint/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-06-13 10:25:29.934  INFO 6772 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService  'brokerChannelExecutor'
2019-06-13 10:25:30.139  WARN 6772 --- [main] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2019-06-13 10:25:30.139  INFO 6772 --- [main] c.n.c.sources.URLConfigurationSource     : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-06-13 10:25:30.268  INFO 6772 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-13 10:25:30.418  INFO 6772 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6d025197: startup date [Thu Jun 13 10:25:19 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4c12331b
2019-06-13 10:25:30.503  INFO 6772 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-13 10:25:30.503  INFO 6772 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-13 10:25:30.540  INFO 6772 --- [main] .m.m.a.ExceptionHandlerExceptionResolver : Detected @ExceptionHandler methods in exceptionAdviceHandler
2019-06-13 10:25:31.623  INFO 6772 --- [main] o.s.ui.freemarker.SpringTemplateLoader   : SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6d025197: startup date [Thu Jun 13 10:25:19 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4c12331b] and template loader path [classpath:/templates/]
2019-06-13 10:25:31.624  INFO 6772 --- [main] o.s.w.s.v.f.FreeMarkerConfigurer         : ClassTemplateLoader for Spring macros added to FreeMarker configuration
2019-06-13 10:25:32.145  INFO 6772 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2019-06-13 10:25:32.146  INFO 6772 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2019-06-13 10:25:32.158  INFO 6772 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'environmentManager' has been autodetected for JMX exposure
2019-06-13 10:25:32.160  INFO 6772 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'refreshScope' has been autodetected for JMX exposure
2019-06-13 10:25:32.160  INFO 6772 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2019-06-13 10:25:32.164  INFO 6772 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2019-06-13 10:25:32.175  INFO 6772 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2019-06-13 10:25:32.188  INFO 6772 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=6d025197,type=ConfigurationPropertiesRebinder]
2019-06-13 10:25:32.197  INFO 6772 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-06-13 10:25:32.208  INFO 6772 --- [main] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase 0
2019-06-13 10:25:32.228  INFO 6772 --- [main] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2019-06-13 10:25:32.262  INFO 6772 --- [main] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2019-06-13 10:25:32.671  INFO 6772 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using JSON encoding codec LegacyJacksonJson
2019-06-13 10:25:32.671  INFO 6772 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using JSON decoding codec LegacyJacksonJson
2019-06-13 10:25:32.777  INFO 6772 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using XML encoding codec XStreamXml
2019-06-13 10:25:32.778  INFO 6772 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using XML decoding codec XStreamXml
2019-06-13 10:25:32.955  INFO 6772 --- [main] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 10:25:33.164  INFO 6772 --- [main] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2019-06-13 10:25:33.164  INFO 6772 --- [main] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2019-06-13 10:25:33.164  INFO 6772 --- [main] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2019-06-13 10:25:33.164  INFO 6772 --- [main] com.netflix.discovery.DiscoveryClient    : Application is null : false
2019-06-13 10:25:33.164  INFO 6772 --- [main] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2019-06-13 10:25:33.164  INFO 6772 --- [main] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2019-06-13 10:25:33.165  INFO 6772 --- [main] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2019-06-13 10:25:33.442  INFO 6772 --- [main] com.netflix.discovery.DiscoveryClient    : The response status is 200
2019-06-13 10:25:33.445  INFO 6772 --- [main] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2019-06-13 10:25:33.447  INFO 6772 --- [main] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2019-06-13 10:25:33.452  INFO 6772 --- [main] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1560392733451 with initial instances count: 2
2019-06-13 10:25:33.472  INFO 6772 --- [main] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application api-admin with eureka with status UP
2019-06-13 10:25:33.473  INFO 6772 --- [main] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1560392733473, current=UP, previous=STARTING]
2019-06-13 10:25:33.474  INFO 6772 --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_API-ADMIN/Lenovo-PC:api-admin:8005: registering service...
2019-06-13 10:25:33.480  INFO 6772 --- [main] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase 2147483647
2019-06-13 10:25:33.480  INFO 6772 --- [main] d.s.w.p.DocumentationPluginsBootstrapper : Context refreshed
2019-06-13 10:25:33.513  INFO 6772 --- [main] d.s.w.p.DocumentationPluginsBootstrapper : Found 1 custom documentation plugin(s)
2019-06-13 10:25:33.541  INFO 6772 --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_API-ADMIN/Lenovo-PC:api-admin:8005 - registration status: 204
2019-06-13 10:25:33.596  INFO 6772 --- [main] s.d.s.w.s.ApiListingReferenceScanner     : Scanning for api listing references
2019-06-13 10:25:33.778  INFO 6772 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: removeUsingPOST_1
2019-06-13 10:25:33.847  INFO 6772 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: listUsingGET_1
2019-06-13 10:25:33.852  INFO 6772 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: listUsingGET_2
2019-06-13 10:25:33.859  INFO 6772 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: saveUsingPOST_1
2019-06-13 10:25:33.860  INFO 6772 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: treeUsingGET_1
2019-06-13 10:25:33.862  INFO 6772 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: updateUsingPUT_1
2019-06-13 10:25:33.867  INFO 6772 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: listUsingGET_3
2019-06-13 10:25:33.879  INFO 6772 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: saveUsingPOST_2
2019-06-13 10:25:33.881  INFO 6772 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: updateUsingPUT_2
2019-06-13 10:25:33.893  INFO 6772 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: getUsingGET_1
2019-06-13 10:25:33.896  INFO 6772 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: removeUsingDELETE_1
2019-06-13 10:25:33.902  INFO 6772 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: saveUsingPOST_3
2019-06-13 10:25:33.909  INFO 6772 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: updateUsingPUT_3
2019-06-13 10:25:33.924  INFO 6772 --- [main] o.s.m.s.b.SimpleBrokerMessageHandler     : Starting...
2019-06-13 10:25:33.925  INFO 6772 --- [main] o.s.m.s.b.SimpleBrokerMessageHandler     : BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-06-13 10:25:33.926  INFO 6772 --- [main] o.s.m.s.b.SimpleBrokerMessageHandler     : Started.
2019-06-13 10:25:33.978  INFO 6772 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8005 (http) with context path ''
2019-06-13 10:25:33.980  INFO 6772 --- [main] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 8005
2019-06-13 10:25:33.983  INFO 6772 --- [main] c.b.c.ClouddoAdminApplication            : Started ClouddoAdminApplication in 17.197 seconds (JVM running for 18.877)
2019-06-13 10:25:34.686  INFO 6772 --- [RMI TCP Connection(3)-10.255.47.10] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-06-13 10:25:34.686  INFO 6772 --- [RMI TCP Connection(3)-10.255.47.10] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2019-06-13 10:25:34.728  INFO 6772 --- [RMI TCP Connection(3)-10.255.47.10] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 41 ms
2019-06-13 10:25:34.921  INFO 6772 --- [RMI TCP Connection(2)-10.255.47.10] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2019-06-13 10:25:35.161  INFO 6772 --- [RMI TCP Connection(2)-10.255.47.10] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2019-06-13 10:25:35.165  INFO 6772 --- [RMI TCP Connection(2)-10.255.47.10] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2019-06-13 10:25:45.475  INFO 6772 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/router
2019-06-13 10:25:45.475  INFO 6772 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/currentUser
2019-06-13 10:25:45.475  INFO 6772 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 10:25:45.475  INFO 6772 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 10:25:45.477  INFO 6772 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.LoginController.router
2019-06-13 10:25:45.477  INFO 6772 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.currentUser
2019-06-13 10:25:45.477  INFO 6772 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 10:25:45.477  INFO 6772 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 10:25:45.503  INFO 6772 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 28
2019-06-13 10:25:45.503  INFO 6772 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 28
2019-06-13 10:25:45.511  INFO 6772 --- [http-nio-8005-exec-2] .s.a.AnnotationAsyncExecutionInterceptor : More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-06-13 10:25:45.535  INFO 6772 --- [SimpleAsyncTaskExecutor-2] feign.RequestInterceptor                 : ------feign设置token107
2019-06-13 10:25:45.536  INFO 6772 --- [SimpleAsyncTaskExecutor-1] feign.RequestInterceptor                 : ------feign设置token106
2019-06-13 10:25:45.545  INFO 6772 --- [SimpleAsyncTaskExecutor-2] s.c.a.AnnotationConfigApplicationContext : Refreshing SpringClientFactory-api-base: startup date [Thu Jun 13 10:25:45 CST 2019]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6d025197
2019-06-13 10:25:45.642  INFO 6772 --- [SimpleAsyncTaskExecutor-2] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-06-13 10:25:45.960  INFO 6772 --- [SimpleAsyncTaskExecutor-2] c.netflix.config.ChainedDynamicProperty  : Flipping property: api-base.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-06-13 10:25:45.987  INFO 6772 --- [SimpleAsyncTaskExecutor-2] c.n.u.concurrent.ShutdownEnabledTimer    : Shutdown hook installed for: NFLoadBalancer-PingTimer-api-base
2019-06-13 10:25:45.991  INFO 6772 --- [SimpleAsyncTaskExecutor-2] c.netflix.loadbalancer.BaseLoadBalancer  : Client: api-base instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=api-base,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2019-06-13 10:25:45.997  INFO 6772 --- [SimpleAsyncTaskExecutor-2] c.n.l.DynamicServerListLoadBalancer      : Using serverListUpdater PollingServerListUpdater
2019-06-13 10:25:46.001  INFO 6772 --- [SimpleAsyncTaskExecutor-2] c.n.l.DynamicServerListLoadBalancer      : DynamicServerListLoadBalancer for client api-base initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=api-base,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@1a46f2a3
2019-06-13 10:25:46.086 ERROR 6772 --- [SimpleAsyncTaskExecutor-2] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 10:25:46.086 ERROR 6772 --- [SimpleAsyncTaskExecutor-1] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 10:25:48.459  INFO 6772 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/roleId/2
2019-06-13 10:25:48.460  INFO 6772 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 10:25:48.460  INFO 6772 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.getTeacherList
2019-06-13 10:25:48.460  INFO 6772 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : [2, {page=1, limit=10, name=}]
2019-06-13 10:25:48.493  INFO 6772 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 34
2019-06-13 10:25:48.506  INFO 6772 --- [SimpleAsyncTaskExecutor-3] feign.RequestInterceptor                 : ------feign设置token114
2019-06-13 10:25:48.508 ERROR 6772 --- [SimpleAsyncTaskExecutor-3] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 10:26:13.334  INFO 6772 --- [http-nio-8005-exec-7] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/currentUser
2019-06-13 10:26:13.335  INFO 6772 --- [http-nio-8005-exec-7] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 10:26:13.335  INFO 6772 --- [http-nio-8005-exec-7] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.currentUser
2019-06-13 10:26:13.335  INFO 6772 --- [http-nio-8005-exec-7] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 10:26:13.336  INFO 6772 --- [http-nio-8005-exec-7] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 2
2019-06-13 10:26:13.337  INFO 6772 --- [SimpleAsyncTaskExecutor-4] feign.RequestInterceptor                 : ------feign设置token117
2019-06-13 10:26:13.340 ERROR 6772 --- [SimpleAsyncTaskExecutor-4] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 10:26:13.357  INFO 6772 --- [http-nio-8005-exec-8] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/router
2019-06-13 10:26:13.357  INFO 6772 --- [http-nio-8005-exec-8] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 10:26:13.357  INFO 6772 --- [http-nio-8005-exec-8] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.LoginController.router
2019-06-13 10:26:13.357  INFO 6772 --- [http-nio-8005-exec-8] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 10:26:13.359  INFO 6772 --- [http-nio-8005-exec-8] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 2
2019-06-13 10:26:13.360  INFO 6772 --- [SimpleAsyncTaskExecutor-5] feign.RequestInterceptor                 : ------feign设置token118
2019-06-13 10:26:13.363 ERROR 6772 --- [SimpleAsyncTaskExecutor-5] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 10:26:15.709  INFO 6772 --- [http-nio-8005-exec-9] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/roleId/2
2019-06-13 10:26:15.710  INFO 6772 --- [http-nio-8005-exec-9] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 10:26:15.710  INFO 6772 --- [http-nio-8005-exec-9] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.getTeacherList
2019-06-13 10:26:15.710  INFO 6772 --- [http-nio-8005-exec-9] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : [2, {page=1, limit=10, name=}]
2019-06-13 10:26:15.727  INFO 6772 --- [http-nio-8005-exec-9] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 18
2019-06-13 10:26:15.732  INFO 6772 --- [SimpleAsyncTaskExecutor-6] feign.RequestInterceptor                 : ------feign设置token119
2019-06-13 10:26:15.734 ERROR 6772 --- [SimpleAsyncTaskExecutor-6] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 10:26:29.934  INFO 6772 --- [MessageBroker-1] o.s.w.s.c.WebSocketMessageBrokerStats    : WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-06-13 10:30:33.167  INFO 6772 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 10:32:39.055  INFO 10828 --- [main] c.b.c.ClouddoAdminApplication            : No active profile set, falling back to default profiles: default
2019-06-13 10:32:39.079  INFO 10828 --- [main] ConfigServletWebServerApplicationContext : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@31dadd46: startup date [Thu Jun 13 10:32:39 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6989da5e
2019-06-13 10:32:40.726  INFO 10828 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-13 10:32:41.272  INFO 10828 --- [main] o.s.cloud.context.scope.GenericScope     : BeanFactory id=1c774fab-2f18-3dff-8fab-5ac3d64963da
2019-06-13 10:32:41.327  INFO 10828 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-06-13 10:32:41.551  INFO 10828 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d9b30593] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 10:32:41.847  INFO 10828 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.bootdo.clouddoadmin.config.RedisConfig$$EnhancerBySpringCGLIB$$fc604ee4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 10:32:41.862  INFO 10828 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.bootdo.clouddoadmin.config.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 10:32:41.944  INFO 10828 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f5cd0890] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 10:32:42.473  INFO 10828 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8005 (http)
2019-06-13 10:32:42.501  INFO 10828 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2019-06-13 10:32:42.502  INFO 10828 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.32
2019-06-13 10:32:42.508  INFO 10828 --- [localhost-startStop-1] o.a.catalina.core.AprLifecycleListener   : The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_181\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;C:;C:\Program Files\Java\jdk1.8.0_181\bin;D:\myApps\apache-maven-3.6.0\bin;C:\Program Files\Java\jdk1.8.0_181\jre\bin;C:\Program Files\Java\jdk1.8.0_181\bin ;C:\Program Files\TortoiseGit\bin;C:\windows\system32;C:\windows;C:\windows\system32\wbem;D:\StudyTools\XAMPP\mysql\bin;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;D:\系统工具\Git\cmd;D:\StudyTools\NodeJs\;D:\StudyTools\Elang\erl10.0.1\bin;D:\StudyTools\RabbitMQ Server\rabbitmq_server-3.7.7\sbin;;D:\StudyTools\DockerToolbox;D:\StudyTools\NodeJs\node_global;D:\StudyTools\WebStorm 2019.1.2\bin;;.]
2019-06-13 10:32:42.709  INFO 10828 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2019-06-13 10:32:42.710  INFO 10828 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 3631 ms
2019-06-13 10:32:42.735  INFO 10828 --- [localhost-startStop-1] c.b.c.config.DruidConfiguration          : init Druid Servlet Configuration 
2019-06-13 10:32:43.081  WARN 10828 --- [localhost-startStop-1] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2019-06-13 10:32:43.081  INFO 10828 --- [localhost-startStop-1] c.n.c.sources.URLConfigurationSource     : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-06-13 10:32:43.091  INFO 10828 --- [localhost-startStop-1] c.netflix.config.DynamicPropertyFactory  : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@58eda34b
2019-06-13 10:32:45.613  INFO 10828 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2019-06-13 10:32:45.614  INFO 10828 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'webMvcMetricsFilter' to: [/*]
2019-06-13 10:32:45.614  INFO 10828 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-06-13 10:32:45.614  INFO 10828 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-06-13 10:32:45.614  INFO 10828 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2019-06-13 10:32:45.615  INFO 10828 --- [localhost-startStop-1] .s.DelegatingFilterProxyRegistrationBean : Mapping filter: 'springSecurityFilterChain' to: [/*]
2019-06-13 10:32:45.615  INFO 10828 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpTraceFilter' to: [/*]
2019-06-13 10:32:45.616  INFO 10828 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'webStatFilter' to urls: [/*]
2019-06-13 10:32:45.616  INFO 10828 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Servlet statViewServlet mapped to [/druid/*]
2019-06-13 10:32:45.617  INFO 10828 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Servlet dispatcherServlet mapped to [/]
2019-06-13 10:32:46.725  INFO 10828 --- [main] s.c.a.AnnotationConfigApplicationContext : Refreshing FeignContext-course: startup date [Thu Jun 13 10:32:46 CST 2019]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@31dadd46
2019-06-13 10:32:46.747  INFO 10828 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-06-13 10:32:46.960  INFO 10828 --- [main] s.c.a.AnnotationConfigApplicationContext : Refreshing FeignContext-api-base: startup date [Thu Jun 13 10:32:46 CST 2019]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@31dadd46
2019-06-13 10:32:46.978  INFO 10828 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-06-13 10:32:47.461  INFO 10828 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/authorize],methods=[POST],params=[user_oauth_approval]}" onto public org.springframework.web.servlet.View org.springframework.security.oauth2.provider.endpoint.AuthorizationEndpoint.approveOrDeny(java.util.Map<java.lang.String, java.lang.String>,java.util.Map<java.lang.String, ?>,org.springframework.web.bind.support.SessionStatus,java.security.Principal)
2019-06-13 10:32:47.462  INFO 10828 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/authorize]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.security.oauth2.provider.endpoint.AuthorizationEndpoint.authorize(java.util.Map<java.lang.String, java.lang.Object>,java.util.Map<java.lang.String, java.lang.String>,org.springframework.web.bind.support.SessionStatus,java.security.Principal)
2019-06-13 10:32:47.464  INFO 10828 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/token],methods=[GET]}" onto public org.springframework.http.ResponseEntity<org.springframework.security.oauth2.common.OAuth2AccessToken> org.springframework.security.oauth2.provider.endpoint.TokenEndpoint.getAccessToken(java.security.Principal,java.util.Map<java.lang.String, java.lang.String>) throws org.springframework.web.HttpRequestMethodNotSupportedException
2019-06-13 10:32:47.464  INFO 10828 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/token],methods=[POST]}" onto public org.springframework.http.ResponseEntity<org.springframework.security.oauth2.common.OAuth2AccessToken> org.springframework.security.oauth2.provider.endpoint.TokenEndpoint.postAccessToken(java.security.Principal,java.util.Map<java.lang.String, java.lang.String>) throws org.springframework.web.HttpRequestMethodNotSupportedException
2019-06-13 10:32:47.465  INFO 10828 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/check_token]}" onto public java.util.Map<java.lang.String, ?> org.springframework.security.oauth2.provider.endpoint.CheckTokenEndpoint.checkToken(java.lang.String)
2019-06-13 10:32:47.465  INFO 10828 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/confirm_access]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.security.oauth2.provider.endpoint.WhitelabelApprovalEndpoint.getAccessConfirmation(java.util.Map<java.lang.String, java.lang.Object>,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-06-13 10:32:47.466  INFO 10828 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/error]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.security.oauth2.provider.endpoint.WhitelabelErrorEndpoint.handleError(javax.servlet.http.HttpServletRequest)
2019-06-13 10:32:47.561  INFO 10828 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-06-13 10:32:47.561  INFO 10828 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/remove],methods=[POST]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.DeptController.remove(java.lang.Long)
2019-06-13 10:32:47.562  INFO 10828 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/batchRemove],methods=[POST]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.DeptController.remove(java.lang.Long[])
2019-06-13 10:32:47.562  INFO 10828 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/update]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.DeptController.update(com.bootdo.clouddoadmin.domain.DeptDO)
2019-06-13 10:32:47.563  INFO 10828 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/list],methods=[GET]}" onto public java.util.List<com.bootdo.clouddoadmin.domain.DeptDO> com.bootdo.clouddoadmin.controller.DeptController.list()
2019-06-13 10:32:47.563  INFO 10828 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/save],methods=[POST]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.DeptController.save(com.bootdo.clouddoadmin.domain.DeptDO)
2019-06-13 10:32:47.564  INFO 10828 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/tree],methods=[GET]}" onto public com.bootdo.clouddoadmin.domain.Tree<com.bootdo.clouddoadmin.domain.DeptDO> com.bootdo.clouddoadmin.controller.DeptController.tree()
2019-06-13 10:32:47.564  INFO 10828 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.DeptController.treeView()
2019-06-13 10:32:47.564  INFO 10828 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.DeptController.dept()
2019-06-13 10:32:47.565  INFO 10828 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/logout]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.LoginController.logout(java.lang.String)
2019-06-13 10:32:47.565  INFO 10828 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/router],methods=[GET]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.LoginController.router()
2019-06-13 10:32:47.569  INFO 10828 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu],methods=[DELETE]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.remove(java.lang.Long)
2019-06-13 10:32:47.569  INFO 10828 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/{id}],methods=[GET]}" onto com.bootdo.clouddoadmin.domain.MenuDO com.bootdo.clouddoadmin.controller.MenuController.get(java.lang.Long)
2019-06-13 10:32:47.569  INFO 10828 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu],methods=[PUT]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.update(com.bootdo.clouddoadmin.domain.MenuDO)
2019-06-13 10:32:47.570  INFO 10828 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu],methods=[GET]}" onto java.util.List<com.bootdo.clouddoadmin.domain.Tree<com.bootdo.clouddoadmin.domain.MenuDO>> com.bootdo.clouddoadmin.controller.MenuController.list()
2019-06-13 10:32:47.570  INFO 10828 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/list],methods=[GET]}" onto java.util.List<com.bootdo.clouddoadmin.domain.MenuDO> com.bootdo.clouddoadmin.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-13 10:32:47.570  INFO 10828 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu],methods=[POST]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.save(com.bootdo.clouddoadmin.domain.MenuDO)
2019-06-13 10:32:47.571  INFO 10828 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/tree],methods=[GET]}" onto com.bootdo.clouddoadmin.domain.Tree<com.bootdo.clouddoadmin.domain.MenuDO> com.bootdo.clouddoadmin.controller.MenuController.tree()
2019-06-13 10:32:47.571  INFO 10828 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/clearCache],methods=[GET]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.clearCache()
2019-06-13 10:32:47.571  INFO 10828 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/currentUserMenus],methods=[GET]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.currentUserMenus()
2019-06-13 10:32:47.572  INFO 10828 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/roleId],methods=[GET]}" onto java.util.List<java.lang.Long> com.bootdo.clouddoadmin.controller.MenuController.menuIdsByRoleId(java.lang.Long)
2019-06-13 10:32:47.573  INFO 10828 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/userMenus],methods=[GET]}" onto java.util.List<com.bootdo.clouddocommon.dto.MenuDTO> com.bootdo.clouddoadmin.controller.MenuController.userMenus()
2019-06-13 10:32:47.575  INFO 10828 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role],methods=[PUT]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.RoleController.update(com.bootdo.clouddoadmin.domain.RoleDO)
2019-06-13 10:32:47.576  INFO 10828 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role],methods=[GET]}" onto com.bootdo.clouddocommon.utils.PageUtils com.bootdo.clouddoadmin.controller.RoleController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-13 10:32:47.576  INFO 10828 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role],methods=[POST]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.RoleController.save(com.bootdo.clouddoadmin.domain.RoleDO)
2019-06-13 10:32:47.577  INFO 10828 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/userId/{userId}],methods=[GET]}" onto java.util.List<java.lang.Long> com.bootdo.clouddoadmin.controller.RoleController.roleIdByUserId(java.lang.Long)
2019-06-13 10:32:47.577  INFO 10828 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.TestController.test()
2019-06-13 10:32:47.578  INFO 10828 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test1],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.TestController.test1()
2019-06-13 10:32:47.579  INFO 10828 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user],methods=[DELETE]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.remove(java.lang.Long)
2019-06-13 10:32:47.580  INFO 10828 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.get(java.lang.Long)
2019-06-13 10:32:47.580  INFO 10828 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user],methods=[PUT]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.update(com.bootdo.clouddoadmin.dto.UserDTO)
2019-06-13 10:32:47.580  INFO 10828 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user],methods=[POST]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.save(com.bootdo.clouddoadmin.domain.UserDO)
2019-06-13 10:32:47.580  INFO 10828 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/batchRemove],methods=[POST]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.batchRemove(java.lang.Long[])
2019-06-13 10:32:47.581  INFO 10828 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/tokenUser],methods=[GET]}" onto public java.security.Principal com.bootdo.clouddoadmin.controller.UserController.user(java.security.Principal)
2019-06-13 10:32:47.581  INFO 10828 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/exits],methods=[POST]}" onto boolean com.bootdo.clouddoadmin.controller.UserController.exits(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-13 10:32:47.581  INFO 10828 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/currentUser],methods=[GET]}" onto public com.bootdo.clouddocommon.dto.LoginUserDTO com.bootdo.clouddoadmin.controller.UserController.currentUser()
2019-06-13 10:32:47.582  INFO 10828 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/roleId/{roleId}],methods=[GET]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.getTeacherList(java.lang.Long,java.util.Map<java.lang.String, java.lang.Object>)
2019-06-13 10:32:47.585  INFO 10828 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-06-13 10:32:47.587  INFO 10828 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-06-13 10:32:47.588  INFO 10828 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-06-13 10:32:47.591  INFO 10828 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-06-13 10:32:47.593  INFO 10828 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-13 10:32:47.755  INFO 10828 --- [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 2 endpoint(s) beneath base path '/actuator'
2019-06-13 10:32:47.776  INFO 10828 --- [main] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-06-13 10:32:47.778  INFO 10828 --- [main] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-06-13 10:32:47.779  INFO 10828 --- [main] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-13 10:32:48.707  INFO 10828 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@58bad46f, org.springframework.security.web.context.SecurityContextPersistenceFilter@d7055be, org.springframework.security.web.header.HeaderWriterFilter@22ae32ba, org.springframework.security.web.authentication.logout.LogoutFilter@4eb1943b, org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter@32d22650, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@35b3c1f6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@12a6e8ed, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6200b644, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7c0e4e4e, org.springframework.security.web.session.SessionManagementFilter@299a43d9, org.springframework.security.web.access.ExceptionTranslationFilter@33430fc, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@42d174ad]
2019-06-13 10:32:48.734  INFO 10828 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: org.springframework.security.oauth2.config.annotation.web.configuration.ResourceServerConfiguration$NotOAuthRequestMatcher@4ffe3d42, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6cd7f381, org.springframework.security.web.context.SecurityContextPersistenceFilter@4ec427, org.springframework.security.web.header.HeaderWriterFilter@6b751cb1, org.springframework.security.web.authentication.logout.LogoutFilter@4cc4d454, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@7f030c72, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@460eb276, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4c8d45cf, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@fde487b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7df3da0b, org.springframework.security.web.session.SessionManagementFilter@df9d400, org.springframework.security.web.access.ExceptionTranslationFilter@f3876ef, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7d7d8911]
2019-06-13 10:32:48.776  INFO 10828 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7827d7b, org.springframework.security.web.context.SecurityContextPersistenceFilter@1d806de6, org.springframework.security.web.header.HeaderWriterFilter@50f3ba6a, org.springframework.security.web.csrf.CsrfFilter@67c0c90b, org.springframework.security.web.authentication.logout.LogoutFilter@79c4f23b, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@2ec0ca83, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@2be50bba, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@3350ab4, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2b9d4b0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4f541e67, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@646cb2e, org.springframework.security.web.session.SessionManagementFilter@319aa9ee, org.springframework.security.web.access.ExceptionTranslationFilter@35454c7a, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5b5b53c6]
2019-06-13 10:32:48.858  INFO 10828 --- [main] pertySourcedRequestMappingHandlerMapping : Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2019-06-13 10:32:49.095  INFO 10828 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService  'clientInboundChannelExecutor'
2019-06-13 10:32:49.117  INFO 10828 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-06-13 10:32:49.141  INFO 10828 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-06-13 10:32:49.192  INFO 10828 --- [main] o.s.w.s.s.s.WebSocketHandlerMapping      : Mapped URL path [/endpoint/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-06-13 10:32:49.218  INFO 10828 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService  'brokerChannelExecutor'
2019-06-13 10:32:49.414  WARN 10828 --- [main] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2019-06-13 10:32:49.414  INFO 10828 --- [main] c.n.c.sources.URLConfigurationSource     : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-06-13 10:32:49.559  INFO 10828 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-13 10:32:49.714  INFO 10828 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@31dadd46: startup date [Thu Jun 13 10:32:39 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6989da5e
2019-06-13 10:32:49.798  INFO 10828 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-13 10:32:49.799  INFO 10828 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-13 10:32:49.827  INFO 10828 --- [main] .m.m.a.ExceptionHandlerExceptionResolver : Detected @ExceptionHandler methods in exceptionAdviceHandler
2019-06-13 10:32:50.929  INFO 10828 --- [main] o.s.ui.freemarker.SpringTemplateLoader   : SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@31dadd46: startup date [Thu Jun 13 10:32:39 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6989da5e] and template loader path [classpath:/templates/]
2019-06-13 10:32:50.929  INFO 10828 --- [main] o.s.w.s.v.f.FreeMarkerConfigurer         : ClassTemplateLoader for Spring macros added to FreeMarker configuration
2019-06-13 10:32:51.450  INFO 10828 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2019-06-13 10:32:51.500  INFO 10828 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2019-06-13 10:32:51.517  INFO 10828 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'environmentManager' has been autodetected for JMX exposure
2019-06-13 10:32:51.520  INFO 10828 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'refreshScope' has been autodetected for JMX exposure
2019-06-13 10:32:51.521  INFO 10828 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2019-06-13 10:32:51.527  INFO 10828 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2019-06-13 10:32:51.545  INFO 10828 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2019-06-13 10:32:51.562  INFO 10828 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=31dadd46,type=ConfigurationPropertiesRebinder]
2019-06-13 10:32:51.571  INFO 10828 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-06-13 10:32:51.583  INFO 10828 --- [main] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase 0
2019-06-13 10:32:51.601  INFO 10828 --- [main] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2019-06-13 10:32:51.636  INFO 10828 --- [main] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2019-06-13 10:32:52.126  INFO 10828 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using JSON encoding codec LegacyJacksonJson
2019-06-13 10:32:52.126  INFO 10828 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using JSON decoding codec LegacyJacksonJson
2019-06-13 10:32:52.233  INFO 10828 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using XML encoding codec XStreamXml
2019-06-13 10:32:52.233  INFO 10828 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using XML decoding codec XStreamXml
2019-06-13 10:32:52.424  INFO 10828 --- [main] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 10:32:52.658  INFO 10828 --- [main] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2019-06-13 10:32:52.658  INFO 10828 --- [main] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2019-06-13 10:32:52.658  INFO 10828 --- [main] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2019-06-13 10:32:52.658  INFO 10828 --- [main] com.netflix.discovery.DiscoveryClient    : Application is null : false
2019-06-13 10:32:52.658  INFO 10828 --- [main] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2019-06-13 10:32:52.658  INFO 10828 --- [main] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2019-06-13 10:32:52.658  INFO 10828 --- [main] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2019-06-13 10:32:52.831  INFO 10828 --- [main] com.netflix.discovery.DiscoveryClient    : The response status is 200
2019-06-13 10:32:52.834  INFO 10828 --- [main] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2019-06-13 10:32:52.836  INFO 10828 --- [main] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2019-06-13 10:32:52.840  INFO 10828 --- [main] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1560393172839 with initial instances count: 2
2019-06-13 10:32:52.855  INFO 10828 --- [main] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application api-admin with eureka with status UP
2019-06-13 10:32:52.856  INFO 10828 --- [main] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1560393172856, current=UP, previous=STARTING]
2019-06-13 10:32:52.857  INFO 10828 --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_API-ADMIN/Lenovo-PC:api-admin:8005: registering service...
2019-06-13 10:32:52.864  INFO 10828 --- [main] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase 2147483647
2019-06-13 10:32:52.864  INFO 10828 --- [main] d.s.w.p.DocumentationPluginsBootstrapper : Context refreshed
2019-06-13 10:32:52.901  INFO 10828 --- [main] d.s.w.p.DocumentationPluginsBootstrapper : Found 1 custom documentation plugin(s)
2019-06-13 10:32:52.906  INFO 10828 --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_API-ADMIN/Lenovo-PC:api-admin:8005 - registration status: 204
2019-06-13 10:32:52.978  INFO 10828 --- [main] s.d.s.w.s.ApiListingReferenceScanner     : Scanning for api listing references
2019-06-13 10:32:53.097  INFO 10828 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: removeUsingPOST_1
2019-06-13 10:32:53.181  INFO 10828 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: listUsingGET_1
2019-06-13 10:32:53.186  INFO 10828 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: listUsingGET_2
2019-06-13 10:32:53.193  INFO 10828 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: saveUsingPOST_1
2019-06-13 10:32:53.195  INFO 10828 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: treeUsingGET_1
2019-06-13 10:32:53.196  INFO 10828 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: updateUsingPUT_1
2019-06-13 10:32:53.203  INFO 10828 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: listUsingGET_3
2019-06-13 10:32:53.213  INFO 10828 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: saveUsingPOST_2
2019-06-13 10:32:53.215  INFO 10828 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: updateUsingPUT_2
2019-06-13 10:32:53.227  INFO 10828 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: getUsingGET_1
2019-06-13 10:32:53.231  INFO 10828 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: removeUsingDELETE_1
2019-06-13 10:32:53.237  INFO 10828 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: saveUsingPOST_3
2019-06-13 10:32:53.244  INFO 10828 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: updateUsingPUT_3
2019-06-13 10:32:53.261  INFO 10828 --- [main] o.s.m.s.b.SimpleBrokerMessageHandler     : Starting...
2019-06-13 10:32:53.262  INFO 10828 --- [main] o.s.m.s.b.SimpleBrokerMessageHandler     : BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-06-13 10:32:53.263  INFO 10828 --- [main] o.s.m.s.b.SimpleBrokerMessageHandler     : Started.
2019-06-13 10:32:53.319  INFO 10828 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8005 (http) with context path ''
2019-06-13 10:32:53.321  INFO 10828 --- [main] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 8005
2019-06-13 10:32:53.325  INFO 10828 --- [main] c.b.c.ClouddoAdminApplication            : Started ClouddoAdminApplication in 17.231 seconds (JVM running for 18.562)
2019-06-13 10:32:53.954  INFO 10828 --- [RMI TCP Connection(3)-10.255.47.10] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-06-13 10:32:53.954  INFO 10828 --- [RMI TCP Connection(3)-10.255.47.10] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2019-06-13 10:32:54.095  INFO 10828 --- [RMI TCP Connection(3)-10.255.47.10] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 141 ms
2019-06-13 10:32:54.337  INFO 10828 --- [RMI TCP Connection(2)-10.255.47.10] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2019-06-13 10:32:54.587  INFO 10828 --- [RMI TCP Connection(2)-10.255.47.10] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2019-06-13 10:32:54.589  INFO 10828 --- [RMI TCP Connection(2)-10.255.47.10] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2019-06-13 10:33:01.659  INFO 10828 --- [http-nio-8005-exec-1] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/router
2019-06-13 10:33:01.660  INFO 10828 --- [http-nio-8005-exec-1] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 10:33:01.662  INFO 10828 --- [http-nio-8005-exec-1] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.LoginController.router
2019-06-13 10:33:01.662  INFO 10828 --- [http-nio-8005-exec-1] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 10:33:01.693  INFO 10828 --- [http-nio-8005-exec-1] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 34
2019-06-13 10:33:01.701  INFO 10828 --- [http-nio-8005-exec-1] .s.a.AnnotationAsyncExecutionInterceptor : More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-06-13 10:33:01.762  INFO 10828 --- [SimpleAsyncTaskExecutor-1] feign.RequestInterceptor                 : ------feign设置token102
2019-06-13 10:33:01.769  INFO 10828 --- [SimpleAsyncTaskExecutor-1] s.c.a.AnnotationConfigApplicationContext : Refreshing SpringClientFactory-api-base: startup date [Thu Jun 13 10:33:01 CST 2019]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@31dadd46
2019-06-13 10:33:01.810  INFO 10828 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/roleId/2
2019-06-13 10:33:01.810  INFO 10828 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 10:33:01.810  INFO 10828 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.getTeacherList
2019-06-13 10:33:01.811  INFO 10828 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : [2, {page=1, limit=10, name=}]
2019-06-13 10:33:01.877  INFO 10828 --- [SimpleAsyncTaskExecutor-1] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-06-13 10:33:01.941  INFO 10828 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 131
2019-06-13 10:33:01.952  INFO 10828 --- [SimpleAsyncTaskExecutor-2] feign.RequestInterceptor                 : ------feign设置token103
2019-06-13 10:33:02.201  INFO 10828 --- [SimpleAsyncTaskExecutor-1] c.netflix.config.ChainedDynamicProperty  : Flipping property: api-base.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-06-13 10:33:02.247  INFO 10828 --- [SimpleAsyncTaskExecutor-1] c.n.u.concurrent.ShutdownEnabledTimer    : Shutdown hook installed for: NFLoadBalancer-PingTimer-api-base
2019-06-13 10:33:02.253  INFO 10828 --- [SimpleAsyncTaskExecutor-1] c.netflix.loadbalancer.BaseLoadBalancer  : Client: api-base instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=api-base,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2019-06-13 10:33:02.259  INFO 10828 --- [SimpleAsyncTaskExecutor-1] c.n.l.DynamicServerListLoadBalancer      : Using serverListUpdater PollingServerListUpdater
2019-06-13 10:33:02.265  INFO 10828 --- [SimpleAsyncTaskExecutor-1] c.n.l.DynamicServerListLoadBalancer      : DynamicServerListLoadBalancer for client api-base initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=api-base,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@20a00622
2019-06-13 10:33:02.365 ERROR 10828 --- [SimpleAsyncTaskExecutor-2] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 10:33:02.366 ERROR 10828 --- [SimpleAsyncTaskExecutor-1] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 10:33:02.547  INFO 10828 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/currentUser
2019-06-13 10:33:02.547  INFO 10828 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 10:33:02.547  INFO 10828 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.currentUser
2019-06-13 10:33:02.547  INFO 10828 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 10:33:02.552  INFO 10828 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 5
2019-06-13 10:33:02.556  INFO 10828 --- [SimpleAsyncTaskExecutor-3] feign.RequestInterceptor                 : ------feign设置token109
2019-06-13 10:33:02.557 ERROR 10828 --- [SimpleAsyncTaskExecutor-3] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 10:33:13.015  INFO 10828 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/currentUser
2019-06-13 10:33:13.015  INFO 10828 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 10:33:13.015  INFO 10828 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.currentUser
2019-06-13 10:33:13.015  INFO 10828 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 10:33:13.017  INFO 10828 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 2
2019-06-13 10:33:13.019  INFO 10828 --- [SimpleAsyncTaskExecutor-4] feign.RequestInterceptor                 : ------feign设置token111
2019-06-13 10:33:13.020 ERROR 10828 --- [SimpleAsyncTaskExecutor-4] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 10:33:13.599  INFO 10828 --- [http-nio-8005-exec-7] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/router
2019-06-13 10:33:13.599  INFO 10828 --- [http-nio-8005-exec-7] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 10:33:13.599  INFO 10828 --- [http-nio-8005-exec-7] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.LoginController.router
2019-06-13 10:33:13.599  INFO 10828 --- [http-nio-8005-exec-7] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 10:33:13.604  INFO 10828 --- [http-nio-8005-exec-7] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 5
2019-06-13 10:33:13.605  INFO 10828 --- [SimpleAsyncTaskExecutor-5] feign.RequestInterceptor                 : ------feign设置token112
2019-06-13 10:33:13.608 ERROR 10828 --- [SimpleAsyncTaskExecutor-5] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 10:33:17.583  INFO 10828 --- [http-nio-8005-exec-8] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/roleId/2
2019-06-13 10:33:17.584  INFO 10828 --- [http-nio-8005-exec-8] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 10:33:17.584  INFO 10828 --- [http-nio-8005-exec-8] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.getTeacherList
2019-06-13 10:33:17.584  INFO 10828 --- [http-nio-8005-exec-8] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : [2, {page=1, limit=10, name=}]
2019-06-13 10:33:17.588  INFO 10828 --- [http-nio-8005-exec-8] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 5
2019-06-13 10:33:17.589  INFO 10828 --- [SimpleAsyncTaskExecutor-6] feign.RequestInterceptor                 : ------feign设置token113
2019-06-13 10:33:17.591 ERROR 10828 --- [SimpleAsyncTaskExecutor-6] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 10:33:49.215  INFO 10828 --- [MessageBroker-1] o.s.w.s.c.WebSocketMessageBrokerStats    : WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-06-13 10:35:06.214  INFO 3768 --- [main] c.b.c.ClouddoAdminApplication            : No active profile set, falling back to default profiles: default
2019-06-13 10:35:06.232  INFO 3768 --- [main] ConfigServletWebServerApplicationContext : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1b955cac: startup date [Thu Jun 13 10:35:06 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6150c3ec
2019-06-13 10:35:07.703  INFO 3768 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-13 10:35:08.228  INFO 3768 --- [main] o.s.cloud.context.scope.GenericScope     : BeanFactory id=1c774fab-2f18-3dff-8fab-5ac3d64963da
2019-06-13 10:35:08.258  INFO 3768 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-06-13 10:35:08.462  INFO 3768 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$67055a8c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 10:35:08.762  INFO 3768 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.bootdo.clouddoadmin.config.RedisConfig$$EnhancerBySpringCGLIB$$89b2a3dd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 10:35:08.778  INFO 3768 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.bootdo.clouddoadmin.config.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 10:35:08.860  INFO 3768 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$831f5d89] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 10:35:09.370  INFO 3768 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8005 (http)
2019-06-13 10:35:09.395  INFO 3768 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2019-06-13 10:35:09.396  INFO 3768 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.32
2019-06-13 10:35:09.401  INFO 3768 --- [localhost-startStop-1] o.a.catalina.core.AprLifecycleListener   : The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_181\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;C:;C:\Program Files\Java\jdk1.8.0_181\bin;D:\myApps\apache-maven-3.6.0\bin;C:\Program Files\Java\jdk1.8.0_181\jre\bin;C:\Program Files\Java\jdk1.8.0_181\bin ;C:\Program Files\TortoiseGit\bin;C:\windows\system32;C:\windows;C:\windows\system32\wbem;D:\StudyTools\XAMPP\mysql\bin;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;D:\系统工具\Git\cmd;D:\StudyTools\NodeJs\;D:\StudyTools\Elang\erl10.0.1\bin;D:\StudyTools\RabbitMQ Server\rabbitmq_server-3.7.7\sbin;;D:\StudyTools\DockerToolbox;D:\StudyTools\NodeJs\node_global;D:\StudyTools\WebStorm 2019.1.2\bin;;.]
2019-06-13 10:35:09.578  INFO 3768 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2019-06-13 10:35:09.578  INFO 3768 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 3346 ms
2019-06-13 10:35:09.601  INFO 3768 --- [localhost-startStop-1] c.b.c.config.DruidConfiguration          : init Druid Servlet Configuration 
2019-06-13 10:35:09.919  WARN 3768 --- [localhost-startStop-1] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2019-06-13 10:35:09.919  INFO 3768 --- [localhost-startStop-1] c.n.c.sources.URLConfigurationSource     : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-06-13 10:35:09.929  INFO 3768 --- [localhost-startStop-1] c.netflix.config.DynamicPropertyFactory  : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@1d914f48
2019-06-13 10:35:12.278  INFO 3768 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2019-06-13 10:35:12.279  INFO 3768 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'webMvcMetricsFilter' to: [/*]
2019-06-13 10:35:12.279  INFO 3768 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-06-13 10:35:12.280  INFO 3768 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-06-13 10:35:12.280  INFO 3768 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2019-06-13 10:35:12.281  INFO 3768 --- [localhost-startStop-1] .s.DelegatingFilterProxyRegistrationBean : Mapping filter: 'springSecurityFilterChain' to: [/*]
2019-06-13 10:35:12.281  INFO 3768 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpTraceFilter' to: [/*]
2019-06-13 10:35:12.281  INFO 3768 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'webStatFilter' to urls: [/*]
2019-06-13 10:35:12.281  INFO 3768 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Servlet statViewServlet mapped to [/druid/*]
2019-06-13 10:35:12.282  INFO 3768 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Servlet dispatcherServlet mapped to [/]
2019-06-13 10:35:13.483  INFO 3768 --- [main] s.c.a.AnnotationConfigApplicationContext : Refreshing FeignContext-course: startup date [Thu Jun 13 10:35:13 CST 2019]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1b955cac
2019-06-13 10:35:13.520  INFO 3768 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-06-13 10:35:13.767  INFO 3768 --- [main] s.c.a.AnnotationConfigApplicationContext : Refreshing FeignContext-api-base: startup date [Thu Jun 13 10:35:13 CST 2019]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1b955cac
2019-06-13 10:35:13.786  INFO 3768 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-06-13 10:35:14.262  INFO 3768 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/authorize]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.security.oauth2.provider.endpoint.AuthorizationEndpoint.authorize(java.util.Map<java.lang.String, java.lang.Object>,java.util.Map<java.lang.String, java.lang.String>,org.springframework.web.bind.support.SessionStatus,java.security.Principal)
2019-06-13 10:35:14.264  INFO 3768 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/authorize],methods=[POST],params=[user_oauth_approval]}" onto public org.springframework.web.servlet.View org.springframework.security.oauth2.provider.endpoint.AuthorizationEndpoint.approveOrDeny(java.util.Map<java.lang.String, java.lang.String>,java.util.Map<java.lang.String, ?>,org.springframework.web.bind.support.SessionStatus,java.security.Principal)
2019-06-13 10:35:14.265  INFO 3768 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/token],methods=[GET]}" onto public org.springframework.http.ResponseEntity<org.springframework.security.oauth2.common.OAuth2AccessToken> org.springframework.security.oauth2.provider.endpoint.TokenEndpoint.getAccessToken(java.security.Principal,java.util.Map<java.lang.String, java.lang.String>) throws org.springframework.web.HttpRequestMethodNotSupportedException
2019-06-13 10:35:14.266  INFO 3768 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/token],methods=[POST]}" onto public org.springframework.http.ResponseEntity<org.springframework.security.oauth2.common.OAuth2AccessToken> org.springframework.security.oauth2.provider.endpoint.TokenEndpoint.postAccessToken(java.security.Principal,java.util.Map<java.lang.String, java.lang.String>) throws org.springframework.web.HttpRequestMethodNotSupportedException
2019-06-13 10:35:14.266  INFO 3768 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/check_token]}" onto public java.util.Map<java.lang.String, ?> org.springframework.security.oauth2.provider.endpoint.CheckTokenEndpoint.checkToken(java.lang.String)
2019-06-13 10:35:14.267  INFO 3768 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/confirm_access]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.security.oauth2.provider.endpoint.WhitelabelApprovalEndpoint.getAccessConfirmation(java.util.Map<java.lang.String, java.lang.Object>,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-06-13 10:35:14.268  INFO 3768 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/error]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.security.oauth2.provider.endpoint.WhitelabelErrorEndpoint.handleError(javax.servlet.http.HttpServletRequest)
2019-06-13 10:35:14.349  INFO 3768 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-06-13 10:35:14.349  INFO 3768 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/remove],methods=[POST]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.DeptController.remove(java.lang.Long)
2019-06-13 10:35:14.350  INFO 3768 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/batchRemove],methods=[POST]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.DeptController.remove(java.lang.Long[])
2019-06-13 10:35:14.350  INFO 3768 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/update]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.DeptController.update(com.bootdo.clouddoadmin.domain.DeptDO)
2019-06-13 10:35:14.350  INFO 3768 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/list],methods=[GET]}" onto public java.util.List<com.bootdo.clouddoadmin.domain.DeptDO> com.bootdo.clouddoadmin.controller.DeptController.list()
2019-06-13 10:35:14.351  INFO 3768 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/save],methods=[POST]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.DeptController.save(com.bootdo.clouddoadmin.domain.DeptDO)
2019-06-13 10:35:14.351  INFO 3768 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/tree],methods=[GET]}" onto public com.bootdo.clouddoadmin.domain.Tree<com.bootdo.clouddoadmin.domain.DeptDO> com.bootdo.clouddoadmin.controller.DeptController.tree()
2019-06-13 10:35:14.351  INFO 3768 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.DeptController.dept()
2019-06-13 10:35:14.352  INFO 3768 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.DeptController.treeView()
2019-06-13 10:35:14.352  INFO 3768 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/logout]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.LoginController.logout(java.lang.String)
2019-06-13 10:35:14.353  INFO 3768 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/router],methods=[GET]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.LoginController.router()
2019-06-13 10:35:14.356  INFO 3768 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu],methods=[DELETE]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.remove(java.lang.Long)
2019-06-13 10:35:14.357  INFO 3768 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/{id}],methods=[GET]}" onto com.bootdo.clouddoadmin.domain.MenuDO com.bootdo.clouddoadmin.controller.MenuController.get(java.lang.Long)
2019-06-13 10:35:14.357  INFO 3768 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu],methods=[PUT]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.update(com.bootdo.clouddoadmin.domain.MenuDO)
2019-06-13 10:35:14.358  INFO 3768 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu],methods=[GET]}" onto java.util.List<com.bootdo.clouddoadmin.domain.Tree<com.bootdo.clouddoadmin.domain.MenuDO>> com.bootdo.clouddoadmin.controller.MenuController.list()
2019-06-13 10:35:14.359  INFO 3768 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/list],methods=[GET]}" onto java.util.List<com.bootdo.clouddoadmin.domain.MenuDO> com.bootdo.clouddoadmin.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-13 10:35:14.359  INFO 3768 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu],methods=[POST]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.save(com.bootdo.clouddoadmin.domain.MenuDO)
2019-06-13 10:35:14.360  INFO 3768 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/tree],methods=[GET]}" onto com.bootdo.clouddoadmin.domain.Tree<com.bootdo.clouddoadmin.domain.MenuDO> com.bootdo.clouddoadmin.controller.MenuController.tree()
2019-06-13 10:35:14.360  INFO 3768 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/clearCache],methods=[GET]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.clearCache()
2019-06-13 10:35:14.360  INFO 3768 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/roleId],methods=[GET]}" onto java.util.List<java.lang.Long> com.bootdo.clouddoadmin.controller.MenuController.menuIdsByRoleId(java.lang.Long)
2019-06-13 10:35:14.361  INFO 3768 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/currentUserMenus],methods=[GET]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.currentUserMenus()
2019-06-13 10:35:14.362  INFO 3768 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/userMenus],methods=[GET]}" onto java.util.List<com.bootdo.clouddocommon.dto.MenuDTO> com.bootdo.clouddoadmin.controller.MenuController.userMenus()
2019-06-13 10:35:14.365  INFO 3768 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role],methods=[PUT]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.RoleController.update(com.bootdo.clouddoadmin.domain.RoleDO)
2019-06-13 10:35:14.365  INFO 3768 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role],methods=[GET]}" onto com.bootdo.clouddocommon.utils.PageUtils com.bootdo.clouddoadmin.controller.RoleController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-13 10:35:14.366  INFO 3768 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role],methods=[POST]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.RoleController.save(com.bootdo.clouddoadmin.domain.RoleDO)
2019-06-13 10:35:14.366  INFO 3768 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/userId/{userId}],methods=[GET]}" onto java.util.List<java.lang.Long> com.bootdo.clouddoadmin.controller.RoleController.roleIdByUserId(java.lang.Long)
2019-06-13 10:35:14.367  INFO 3768 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.TestController.test()
2019-06-13 10:35:14.367  INFO 3768 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test1],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.TestController.test1()
2019-06-13 10:35:14.369  INFO 3768 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user],methods=[DELETE]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.remove(java.lang.Long)
2019-06-13 10:35:14.369  INFO 3768 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.get(java.lang.Long)
2019-06-13 10:35:14.369  INFO 3768 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user],methods=[PUT]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.update(com.bootdo.clouddoadmin.dto.UserDTO)
2019-06-13 10:35:14.370  INFO 3768 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user],methods=[POST]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.save(com.bootdo.clouddoadmin.domain.UserDO)
2019-06-13 10:35:14.370  INFO 3768 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/batchRemove],methods=[POST]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.batchRemove(java.lang.Long[])
2019-06-13 10:35:14.370  INFO 3768 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/tokenUser],methods=[GET]}" onto public java.security.Principal com.bootdo.clouddoadmin.controller.UserController.user(java.security.Principal)
2019-06-13 10:35:14.371  INFO 3768 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/exits],methods=[POST]}" onto boolean com.bootdo.clouddoadmin.controller.UserController.exits(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-13 10:35:14.371  INFO 3768 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/roleId/{roleId}],methods=[GET]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.getTeacherList(java.lang.Long,java.util.Map<java.lang.String, java.lang.Object>)
2019-06-13 10:35:14.371  INFO 3768 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/currentUser],methods=[GET]}" onto public com.bootdo.clouddocommon.dto.LoginUserDTO com.bootdo.clouddoadmin.controller.UserController.currentUser()
2019-06-13 10:35:14.374  INFO 3768 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-06-13 10:35:14.375  INFO 3768 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-06-13 10:35:14.376  INFO 3768 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-06-13 10:35:14.379  INFO 3768 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-06-13 10:35:14.380  INFO 3768 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-13 10:35:14.549  INFO 3768 --- [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 2 endpoint(s) beneath base path '/actuator'
2019-06-13 10:35:14.569  INFO 3768 --- [main] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-06-13 10:35:14.571  INFO 3768 --- [main] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-06-13 10:35:14.572  INFO 3768 --- [main] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-13 10:35:15.838  INFO 3768 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@342723a3, org.springframework.security.web.context.SecurityContextPersistenceFilter@768f4b42, org.springframework.security.web.header.HeaderWriterFilter@b8b2184, org.springframework.security.web.authentication.logout.LogoutFilter@4e2824b1, org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter@2b4829aa, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@3cb04dd, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@63b4b9c6, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@d4ecdb0, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@f3876ef, org.springframework.security.web.session.SessionManagementFilter@ccd000e, org.springframework.security.web.access.ExceptionTranslationFilter@45424c0, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1f48fa72]
2019-06-13 10:35:15.862  INFO 3768 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: org.springframework.security.oauth2.config.annotation.web.configuration.ResourceServerConfiguration$NotOAuthRequestMatcher@49e62b17, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@288409f0, org.springframework.security.web.context.SecurityContextPersistenceFilter@26270b77, org.springframework.security.web.header.HeaderWriterFilter@5b490d5e, org.springframework.security.web.authentication.logout.LogoutFilter@2fd4312a, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@75a9cc24, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@727dcc64, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@b808af5, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@18b04526, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7d685f4e, org.springframework.security.web.session.SessionManagementFilter@1f6c4ae, org.springframework.security.web.access.ExceptionTranslationFilter@b34c7c9, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2f6f4ac4]
2019-06-13 10:35:15.905  INFO 3768 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@36a58466, org.springframework.security.web.context.SecurityContextPersistenceFilter@2ec0ca83, org.springframework.security.web.header.HeaderWriterFilter@5503c7d, org.springframework.security.web.csrf.CsrfFilter@79c4f23b, org.springframework.security.web.authentication.logout.LogoutFilter@5315266, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@21ea1d9d, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@646cb2e, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@19f497aa, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3350ab4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7827d7b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@78e387d6, org.springframework.security.web.session.SessionManagementFilter@5b5b53c6, org.springframework.security.web.access.ExceptionTranslationFilter@15371de2, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@54234569]
2019-06-13 10:35:15.979  INFO 3768 --- [main] pertySourcedRequestMappingHandlerMapping : Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2019-06-13 10:35:16.216  INFO 3768 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService  'clientInboundChannelExecutor'
2019-06-13 10:35:16.237  INFO 3768 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-06-13 10:35:16.261  INFO 3768 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-06-13 10:35:16.312  INFO 3768 --- [main] o.s.w.s.s.s.WebSocketHandlerMapping      : Mapped URL path [/endpoint/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-06-13 10:35:16.338  INFO 3768 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService  'brokerChannelExecutor'
2019-06-13 10:35:16.556  WARN 3768 --- [main] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2019-06-13 10:35:16.556  INFO 3768 --- [main] c.n.c.sources.URLConfigurationSource     : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-06-13 10:35:16.690  INFO 3768 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-13 10:35:16.853  INFO 3768 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1b955cac: startup date [Thu Jun 13 10:35:06 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6150c3ec
2019-06-13 10:35:16.935  INFO 3768 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-13 10:35:16.935  INFO 3768 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-13 10:35:16.963  INFO 3768 --- [main] .m.m.a.ExceptionHandlerExceptionResolver : Detected @ExceptionHandler methods in exceptionAdviceHandler
2019-06-13 10:35:18.061  INFO 3768 --- [main] o.s.ui.freemarker.SpringTemplateLoader   : SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1b955cac: startup date [Thu Jun 13 10:35:06 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6150c3ec] and template loader path [classpath:/templates/]
2019-06-13 10:35:18.061  INFO 3768 --- [main] o.s.w.s.v.f.FreeMarkerConfigurer         : ClassTemplateLoader for Spring macros added to FreeMarker configuration
2019-06-13 10:35:18.592  INFO 3768 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2019-06-13 10:35:18.594  INFO 3768 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2019-06-13 10:35:18.605  INFO 3768 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'environmentManager' has been autodetected for JMX exposure
2019-06-13 10:35:18.607  INFO 3768 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'refreshScope' has been autodetected for JMX exposure
2019-06-13 10:35:18.608  INFO 3768 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2019-06-13 10:35:18.612  INFO 3768 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2019-06-13 10:35:18.624  INFO 3768 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2019-06-13 10:35:18.639  INFO 3768 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=1b955cac,type=ConfigurationPropertiesRebinder]
2019-06-13 10:35:18.648  INFO 3768 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-06-13 10:35:18.659  INFO 3768 --- [main] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase 0
2019-06-13 10:35:18.678  INFO 3768 --- [main] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2019-06-13 10:35:18.711  INFO 3768 --- [main] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2019-06-13 10:35:19.106  INFO 3768 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using JSON encoding codec LegacyJacksonJson
2019-06-13 10:35:19.106  INFO 3768 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using JSON decoding codec LegacyJacksonJson
2019-06-13 10:35:19.214  INFO 3768 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using XML encoding codec XStreamXml
2019-06-13 10:35:19.214  INFO 3768 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using XML decoding codec XStreamXml
2019-06-13 10:35:19.388  INFO 3768 --- [main] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 10:35:19.611  INFO 3768 --- [main] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2019-06-13 10:35:19.611  INFO 3768 --- [main] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2019-06-13 10:35:19.611  INFO 3768 --- [main] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2019-06-13 10:35:19.611  INFO 3768 --- [main] com.netflix.discovery.DiscoveryClient    : Application is null : false
2019-06-13 10:35:19.611  INFO 3768 --- [main] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2019-06-13 10:35:19.611  INFO 3768 --- [main] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2019-06-13 10:35:19.612  INFO 3768 --- [main] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2019-06-13 10:35:19.900  INFO 3768 --- [main] com.netflix.discovery.DiscoveryClient    : The response status is 200
2019-06-13 10:35:19.903  INFO 3768 --- [main] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2019-06-13 10:35:19.906  INFO 3768 --- [main] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2019-06-13 10:35:19.911  INFO 3768 --- [main] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1560393319910 with initial instances count: 2
2019-06-13 10:35:19.929  INFO 3768 --- [main] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application api-admin with eureka with status UP
2019-06-13 10:35:19.930  INFO 3768 --- [main] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1560393319930, current=UP, previous=STARTING]
2019-06-13 10:35:19.931  INFO 3768 --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_API-ADMIN/Lenovo-PC:api-admin:8005: registering service...
2019-06-13 10:35:19.937  INFO 3768 --- [main] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase 2147483647
2019-06-13 10:35:19.937  INFO 3768 --- [main] d.s.w.p.DocumentationPluginsBootstrapper : Context refreshed
2019-06-13 10:35:19.994  INFO 3768 --- [main] d.s.w.p.DocumentationPluginsBootstrapper : Found 1 custom documentation plugin(s)
2019-06-13 10:35:20.000  INFO 3768 --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_API-ADMIN/Lenovo-PC:api-admin:8005 - registration status: 204
2019-06-13 10:35:20.056  INFO 3768 --- [main] s.d.s.w.s.ApiListingReferenceScanner     : Scanning for api listing references
2019-06-13 10:35:20.189  INFO 3768 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: removeUsingPOST_1
2019-06-13 10:35:20.272  INFO 3768 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: listUsingGET_1
2019-06-13 10:35:20.279  INFO 3768 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: listUsingGET_2
2019-06-13 10:35:20.287  INFO 3768 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: saveUsingPOST_1
2019-06-13 10:35:20.289  INFO 3768 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: treeUsingGET_1
2019-06-13 10:35:20.290  INFO 3768 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: updateUsingPUT_1
2019-06-13 10:35:20.296  INFO 3768 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: listUsingGET_3
2019-06-13 10:35:20.307  INFO 3768 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: saveUsingPOST_2
2019-06-13 10:35:20.308  INFO 3768 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: updateUsingPUT_2
2019-06-13 10:35:20.322  INFO 3768 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: getUsingGET_1
2019-06-13 10:35:20.326  INFO 3768 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: removeUsingDELETE_1
2019-06-13 10:35:20.331  INFO 3768 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: saveUsingPOST_3
2019-06-13 10:35:20.338  INFO 3768 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: updateUsingPUT_3
2019-06-13 10:35:20.355  INFO 3768 --- [main] o.s.m.s.b.SimpleBrokerMessageHandler     : Starting...
2019-06-13 10:35:20.356  INFO 3768 --- [main] o.s.m.s.b.SimpleBrokerMessageHandler     : BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-06-13 10:35:20.357  INFO 3768 --- [main] o.s.m.s.b.SimpleBrokerMessageHandler     : Started.
2019-06-13 10:35:20.416  INFO 3768 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8005 (http) with context path ''
2019-06-13 10:35:20.418  INFO 3768 --- [main] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 8005
2019-06-13 10:35:20.420  INFO 3768 --- [main] c.b.c.ClouddoAdminApplication            : Started ClouddoAdminApplication in 17.15 seconds (JVM running for 18.517)
2019-06-13 10:35:20.884  INFO 3768 --- [RMI TCP Connection(4)-10.255.47.10] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-06-13 10:35:20.885  INFO 3768 --- [RMI TCP Connection(4)-10.255.47.10] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2019-06-13 10:35:20.931  INFO 3768 --- [RMI TCP Connection(4)-10.255.47.10] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 46 ms
2019-06-13 10:35:21.157  INFO 3768 --- [RMI TCP Connection(3)-10.255.47.10] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2019-06-13 10:35:21.615  INFO 3768 --- [RMI TCP Connection(3)-10.255.47.10] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2019-06-13 10:35:21.617  INFO 3768 --- [RMI TCP Connection(3)-10.255.47.10] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2019-06-13 10:35:35.715  INFO 3768 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/router
2019-06-13 10:35:35.715  INFO 3768 --- [http-nio-8005-exec-1] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/currentUser
2019-06-13 10:35:35.715  INFO 3768 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 10:35:35.715  INFO 3768 --- [http-nio-8005-exec-1] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 10:35:35.717  INFO 3768 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/roleId/2
2019-06-13 10:35:35.717  INFO 3768 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 10:35:35.718  INFO 3768 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.LoginController.router
2019-06-13 10:35:35.718  INFO 3768 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.getTeacherList
2019-06-13 10:35:35.718  INFO 3768 --- [http-nio-8005-exec-1] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.currentUser
2019-06-13 10:35:35.719  INFO 3768 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 10:35:35.719  INFO 3768 --- [http-nio-8005-exec-1] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 10:35:35.719  INFO 3768 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : [2, {page=1, limit=10, name=}]
2019-06-13 10:35:35.750  INFO 3768 --- [http-nio-8005-exec-1] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 35
2019-06-13 10:35:35.751  INFO 3768 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 36
2019-06-13 10:35:35.761  INFO 3768 --- [http-nio-8005-exec-2] .s.a.AnnotationAsyncExecutionInterceptor : More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-06-13 10:35:35.792  INFO 3768 --- [SimpleAsyncTaskExecutor-1] feign.RequestInterceptor                 : ------feign设置token105
2019-06-13 10:35:35.798  INFO 3768 --- [SimpleAsyncTaskExecutor-2] feign.RequestInterceptor                 : ------feign设置token104
2019-06-13 10:35:35.803  INFO 3768 --- [SimpleAsyncTaskExecutor-1] s.c.a.AnnotationConfigApplicationContext : Refreshing SpringClientFactory-api-base: startup date [Thu Jun 13 10:35:35 CST 2019]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1b955cac
2019-06-13 10:35:35.968  INFO 3768 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 251
2019-06-13 10:35:35.975  INFO 3768 --- [SimpleAsyncTaskExecutor-3] feign.RequestInterceptor                 : ------feign设置token106
2019-06-13 10:35:36.009  INFO 3768 --- [SimpleAsyncTaskExecutor-1] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-06-13 10:35:36.419  INFO 3768 --- [SimpleAsyncTaskExecutor-1] c.netflix.config.ChainedDynamicProperty  : Flipping property: api-base.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-06-13 10:35:36.468  INFO 3768 --- [SimpleAsyncTaskExecutor-1] c.n.u.concurrent.ShutdownEnabledTimer    : Shutdown hook installed for: NFLoadBalancer-PingTimer-api-base
2019-06-13 10:35:36.477  INFO 3768 --- [SimpleAsyncTaskExecutor-1] c.netflix.loadbalancer.BaseLoadBalancer  : Client: api-base instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=api-base,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2019-06-13 10:35:36.485  INFO 3768 --- [SimpleAsyncTaskExecutor-1] c.n.l.DynamicServerListLoadBalancer      : Using serverListUpdater PollingServerListUpdater
2019-06-13 10:35:36.490  INFO 3768 --- [SimpleAsyncTaskExecutor-1] c.n.l.DynamicServerListLoadBalancer      : DynamicServerListLoadBalancer for client api-base initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=api-base,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@59f511d8
2019-06-13 10:35:36.608 ERROR 3768 --- [SimpleAsyncTaskExecutor-3] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 10:35:36.608 ERROR 3768 --- [SimpleAsyncTaskExecutor-2] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 10:35:36.608 ERROR 3768 --- [SimpleAsyncTaskExecutor-1] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 10:35:52.646  INFO 3768 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/router
2019-06-13 10:35:52.647  INFO 3768 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 10:35:52.647  INFO 3768 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.LoginController.router
2019-06-13 10:35:52.647  INFO 3768 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 10:35:52.648  INFO 3768 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 2
2019-06-13 10:35:52.649  INFO 3768 --- [SimpleAsyncTaskExecutor-4] feign.RequestInterceptor                 : ------feign设置token115
2019-06-13 10:35:52.650 ERROR 3768 --- [SimpleAsyncTaskExecutor-4] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 10:35:52.676  INFO 3768 --- [http-nio-8005-exec-7] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/currentUser
2019-06-13 10:35:52.676  INFO 3768 --- [http-nio-8005-exec-7] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 10:35:52.676  INFO 3768 --- [http-nio-8005-exec-7] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.currentUser
2019-06-13 10:35:52.676  INFO 3768 --- [http-nio-8005-exec-7] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 10:35:52.678  INFO 3768 --- [http-nio-8005-exec-7] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 2
2019-06-13 10:35:52.679  INFO 3768 --- [SimpleAsyncTaskExecutor-5] feign.RequestInterceptor                 : ------feign设置token116
2019-06-13 10:35:52.680 ERROR 3768 --- [SimpleAsyncTaskExecutor-5] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 10:35:54.993  INFO 3768 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/roleId/2
2019-06-13 10:35:54.993  INFO 3768 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 10:35:54.993  INFO 3768 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.getTeacherList
2019-06-13 10:35:54.993  INFO 3768 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : [2, {page=1, limit=10, name=}]
2019-06-13 10:35:54.997  INFO 3768 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 4
2019-06-13 10:35:54.998  INFO 3768 --- [SimpleAsyncTaskExecutor-6] feign.RequestInterceptor                 : ------feign设置token117
2019-06-13 10:35:55.000 ERROR 3768 --- [SimpleAsyncTaskExecutor-6] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 10:36:16.335  INFO 3768 --- [MessageBroker-1] o.s.w.s.c.WebSocketMessageBrokerStats    : WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-06-13 10:36:41.252  INFO 3768 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/router
2019-06-13 10:36:41.253  INFO 3768 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 10:36:41.253  INFO 3768 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.LoginController.router
2019-06-13 10:36:41.253  INFO 3768 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 10:36:41.256  INFO 3768 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 4
2019-06-13 10:36:41.260  INFO 3768 --- [SimpleAsyncTaskExecutor-7] feign.RequestInterceptor                 : ------feign设置token119
2019-06-13 10:36:41.265 ERROR 3768 --- [SimpleAsyncTaskExecutor-7] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 10:36:41.291  INFO 3768 --- [http-nio-8005-exec-1] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/roleId/2
2019-06-13 10:36:41.291  INFO 3768 --- [http-nio-8005-exec-1] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 10:36:41.292  INFO 3768 --- [http-nio-8005-exec-1] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.getTeacherList
2019-06-13 10:36:41.292  INFO 3768 --- [http-nio-8005-exec-1] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : [2, {page=1, limit=10, name=}]
2019-06-13 10:36:41.299  INFO 3768 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/currentUser
2019-06-13 10:36:41.300  INFO 3768 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 10:36:41.300  INFO 3768 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.currentUser
2019-06-13 10:36:41.300  INFO 3768 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 10:36:41.327  INFO 3768 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 28
2019-06-13 10:36:41.340  INFO 3768 --- [SimpleAsyncTaskExecutor-8] feign.RequestInterceptor                 : ------feign设置token120
2019-06-13 10:36:41.342 ERROR 3768 --- [SimpleAsyncTaskExecutor-8] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 10:36:41.345  INFO 3768 --- [http-nio-8005-exec-1] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 54
2019-06-13 10:36:41.355  INFO 3768 --- [SimpleAsyncTaskExecutor-9] feign.RequestInterceptor                 : ------feign设置token121
2019-06-13 10:36:41.357 ERROR 3768 --- [SimpleAsyncTaskExecutor-9] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 10:38:26.611  INFO 3768 --- [http-nio-8005-exec-7] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/router
2019-06-13 10:38:26.612  INFO 3768 --- [http-nio-8005-exec-7] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 10:38:26.612  INFO 3768 --- [http-nio-8005-exec-7] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.LoginController.router
2019-06-13 10:38:26.612  INFO 3768 --- [http-nio-8005-exec-7] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 10:38:26.616  INFO 3768 --- [http-nio-8005-exec-7] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 5
2019-06-13 10:38:26.618  INFO 3768 --- [SimpleAsyncTaskExecutor-10] feign.RequestInterceptor                 : ------feign设置token122
2019-06-13 10:38:26.620 ERROR 3768 --- [SimpleAsyncTaskExecutor-10] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 10:38:26.693  INFO 3768 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/currentUser
2019-06-13 10:38:26.693  INFO 3768 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 10:38:26.693  INFO 3768 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.currentUser
2019-06-13 10:38:26.693  INFO 3768 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 10:38:26.695  INFO 3768 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 2
2019-06-13 10:38:26.703  INFO 3768 --- [http-nio-8005-exec-9] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/roleId/2
2019-06-13 10:38:26.703  INFO 3768 --- [http-nio-8005-exec-9] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 10:38:26.703  INFO 3768 --- [http-nio-8005-exec-9] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.getTeacherList
2019-06-13 10:38:26.703  INFO 3768 --- [http-nio-8005-exec-9] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : [2, {page=1, limit=10, name=}]
2019-06-13 10:38:26.704  INFO 3768 --- [SimpleAsyncTaskExecutor-11] feign.RequestInterceptor                 : ------feign设置token123
2019-06-13 10:38:26.705 ERROR 3768 --- [SimpleAsyncTaskExecutor-11] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 10:38:26.709  INFO 3768 --- [http-nio-8005-exec-9] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 6
2019-06-13 10:38:26.711  INFO 3768 --- [SimpleAsyncTaskExecutor-12] feign.RequestInterceptor                 : ------feign设置token124
2019-06-13 10:38:26.715 ERROR 3768 --- [SimpleAsyncTaskExecutor-12] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 10:38:41.892  INFO 3768 --- [http-nio-8005-exec-10] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/router
2019-06-13 10:38:41.892  INFO 3768 --- [http-nio-8005-exec-10] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 10:38:41.895  INFO 3768 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/roleId/2
2019-06-13 10:38:41.896  INFO 3768 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 10:38:41.896  INFO 3768 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.getTeacherList
2019-06-13 10:38:41.896  INFO 3768 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : [2, {page=1, limit=10, name=}]
2019-06-13 10:38:41.896  INFO 3768 --- [http-nio-8005-exec-10] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.LoginController.router
2019-06-13 10:38:41.896  INFO 3768 --- [http-nio-8005-exec-10] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 10:38:41.901  INFO 3768 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/currentUser
2019-06-13 10:38:41.902  INFO 3768 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 10:38:41.903  INFO 3768 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.currentUser
2019-06-13 10:38:41.903  INFO 3768 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 10:38:41.905  INFO 3768 --- [http-nio-8005-exec-10] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 13
2019-06-13 10:38:41.909  INFO 3768 --- [SimpleAsyncTaskExecutor-13] feign.RequestInterceptor                 : ------feign设置token125
2019-06-13 10:38:41.910 ERROR 3768 --- [SimpleAsyncTaskExecutor-13] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 10:38:41.943  INFO 3768 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 42
2019-06-13 10:38:41.952  INFO 3768 --- [SimpleAsyncTaskExecutor-14] feign.RequestInterceptor                 : ------feign设置token126
2019-06-13 10:38:41.953 ERROR 3768 --- [SimpleAsyncTaskExecutor-14] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 10:38:41.985  INFO 3768 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 90
2019-06-13 10:38:41.989  INFO 3768 --- [SimpleAsyncTaskExecutor-15] feign.RequestInterceptor                 : ------feign设置token127
2019-06-13 10:38:41.991 ERROR 3768 --- [SimpleAsyncTaskExecutor-15] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 10:38:44.137  INFO 3768 --- [http-nio-8005-exec-5] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/role
2019-06-13 10:38:44.137  INFO 3768 --- [http-nio-8005-exec-5] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 10:38:44.138  INFO 3768 --- [http-nio-8005-exec-5] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.RoleController.list
2019-06-13 10:38:44.138  INFO 3768 --- [http-nio-8005-exec-5] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : [{}]
2019-06-13 10:38:44.152  INFO 3768 --- [http-nio-8005-exec-5] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 15
2019-06-13 10:38:44.157  INFO 3768 --- [SimpleAsyncTaskExecutor-16] feign.RequestInterceptor                 : ------feign设置token128
2019-06-13 10:38:44.158 ERROR 3768 --- [SimpleAsyncTaskExecutor-16] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 10:38:54.207  INFO 3768 --- [http-nio-8005-exec-8] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/role
2019-06-13 10:38:54.207  INFO 3768 --- [http-nio-8005-exec-8] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 10:38:54.208  INFO 3768 --- [http-nio-8005-exec-8] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.RoleController.list
2019-06-13 10:38:54.208  INFO 3768 --- [http-nio-8005-exec-8] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : [{}]
2019-06-13 10:38:54.214  INFO 3768 --- [http-nio-8005-exec-8] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 7
2019-06-13 10:38:54.216  INFO 3768 --- [SimpleAsyncTaskExecutor-17] feign.RequestInterceptor                 : ------feign设置token129
2019-06-13 10:38:54.218 ERROR 3768 --- [SimpleAsyncTaskExecutor-17] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 10:38:58.789  INFO 3768 --- [http-nio-8005-exec-7] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user
2019-06-13 10:38:58.790  INFO 3768 --- [http-nio-8005-exec-7] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : PUT
2019-06-13 10:38:58.790  INFO 3768 --- [http-nio-8005-exec-7] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.update
2019-06-13 10:38:58.790  INFO 3768 --- [http-nio-8005-exec-7] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : [UserDTO{, id=2, username=teacher1, name=王五, password=null, email=teacher@example.com, phone=15890932709, status=null, createTime=null, modifyTime=null, sex=男}]
2019-06-13 10:38:58.872  INFO 3768 --- [http-nio-8005-exec-7] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 83
2019-06-13 10:38:59.002  INFO 3768 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/roleId/2
2019-06-13 10:38:59.002  INFO 3768 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 10:38:59.002  INFO 3768 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.getTeacherList
2019-06-13 10:38:59.002  INFO 3768 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : [2, {page=1, limit=10, name=}]
2019-06-13 10:38:59.019  INFO 3768 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 17
2019-06-13 10:38:59.019  INFO 3768 --- [SimpleAsyncTaskExecutor-18] feign.RequestInterceptor                 : ------feign设置token130
2019-06-13 10:38:59.023 ERROR 3768 --- [SimpleAsyncTaskExecutor-18] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.GeneratedMethodAccessor182.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 13 common frames omitted

2019-06-13 10:40:19.614  INFO 3768 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 10:41:49.629  INFO 3768 --- [http-nio-8005-exec-10] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/roleId/2
2019-06-13 10:41:49.629  INFO 3768 --- [http-nio-8005-exec-10] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 10:41:49.629  INFO 3768 --- [http-nio-8005-exec-10] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.getTeacherList
2019-06-13 10:41:49.629  INFO 3768 --- [http-nio-8005-exec-10] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : [2, {page=1, limit=10, name=}]
2019-06-13 10:41:49.663  INFO 3768 --- [http-nio-8005-exec-10] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 34
2019-06-13 10:41:49.684  INFO 3768 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/router
2019-06-13 10:41:49.684  INFO 3768 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 10:41:49.685  INFO 3768 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.LoginController.router
2019-06-13 10:41:49.685  INFO 3768 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 10:41:49.685  INFO 3768 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/currentUser
2019-06-13 10:41:49.685  INFO 3768 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 10:41:49.686  INFO 3768 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.currentUser
2019-06-13 10:41:49.686  INFO 3768 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 10:41:49.694  INFO 3768 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 10
2019-06-13 10:41:49.693  INFO 3768 --- [SimpleAsyncTaskExecutor-19] feign.RequestInterceptor                 : ------feign设置token132
2019-06-13 10:41:49.705 ERROR 3768 --- [SimpleAsyncTaskExecutor-19] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.GeneratedMethodAccessor182.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 13 common frames omitted

2019-06-13 10:41:49.711  INFO 3768 --- [SimpleAsyncTaskExecutor-20] feign.RequestInterceptor                 : ------feign设置token133
2019-06-13 10:41:49.719 ERROR 3768 --- [SimpleAsyncTaskExecutor-20] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.GeneratedMethodAccessor182.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 13 common frames omitted

2019-06-13 10:41:49.722  INFO 3768 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 37
2019-06-13 10:41:49.725  INFO 3768 --- [SimpleAsyncTaskExecutor-21] feign.RequestInterceptor                 : ------feign设置token134
2019-06-13 10:41:49.729 ERROR 3768 --- [SimpleAsyncTaskExecutor-21] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.GeneratedMethodAccessor182.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 13 common frames omitted

2019-06-13 10:42:15.038  INFO 9660 --- [main] c.b.c.ClouddoAdminApplication            : No active profile set, falling back to default profiles: default
2019-06-13 10:42:15.057  INFO 9660 --- [main] ConfigServletWebServerApplicationContext : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6b88ca8c: startup date [Thu Jun 13 10:42:15 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@45752059
2019-06-13 10:42:16.701  INFO 9660 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-13 10:42:17.353  INFO 9660 --- [main] o.s.cloud.context.scope.GenericScope     : BeanFactory id=1c774fab-2f18-3dff-8fab-5ac3d64963da
2019-06-13 10:42:17.398  INFO 9660 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-06-13 10:42:17.650  INFO 9660 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$1bb4f593] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 10:42:17.993  INFO 9660 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.bootdo.clouddoadmin.config.RedisConfig$$EnhancerBySpringCGLIB$$3e623ee4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 10:42:18.008  INFO 9660 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.bootdo.clouddoadmin.config.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 10:42:18.107  INFO 9660 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$37cef890] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 10:42:19.183  INFO 9660 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8005 (http)
2019-06-13 10:42:19.235  INFO 9660 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2019-06-13 10:42:19.236  INFO 9660 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.32
2019-06-13 10:42:19.243  INFO 9660 --- [localhost-startStop-1] o.a.catalina.core.AprLifecycleListener   : The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_181\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;C:;C:\Program Files\Java\jdk1.8.0_181\bin;D:\myApps\apache-maven-3.6.0\bin;C:\Program Files\Java\jdk1.8.0_181\jre\bin;C:\Program Files\Java\jdk1.8.0_181\bin ;C:\Program Files\TortoiseGit\bin;C:\windows\system32;C:\windows;C:\windows\system32\wbem;D:\StudyTools\XAMPP\mysql\bin;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;D:\系统工具\Git\cmd;D:\StudyTools\NodeJs\;D:\StudyTools\Elang\erl10.0.1\bin;D:\StudyTools\RabbitMQ Server\rabbitmq_server-3.7.7\sbin;;D:\StudyTools\DockerToolbox;D:\StudyTools\NodeJs\node_global;D:\StudyTools\WebStorm 2019.1.2\bin;;.]
2019-06-13 10:42:19.500  INFO 9660 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2019-06-13 10:42:19.501  INFO 9660 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 4445 ms
2019-06-13 10:42:19.530  INFO 9660 --- [localhost-startStop-1] c.b.c.config.DruidConfiguration          : init Druid Servlet Configuration 
2019-06-13 10:42:20.296  WARN 9660 --- [localhost-startStop-1] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2019-06-13 10:42:20.297  INFO 9660 --- [localhost-startStop-1] c.n.c.sources.URLConfigurationSource     : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-06-13 10:42:20.315  INFO 9660 --- [localhost-startStop-1] c.netflix.config.DynamicPropertyFactory  : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@712cc7bd
2019-06-13 10:42:24.213  INFO 9660 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2019-06-13 10:42:24.215  INFO 9660 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'webMvcMetricsFilter' to: [/*]
2019-06-13 10:42:24.215  INFO 9660 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-06-13 10:42:24.215  INFO 9660 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-06-13 10:42:24.215  INFO 9660 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2019-06-13 10:42:24.216  INFO 9660 --- [localhost-startStop-1] .s.DelegatingFilterProxyRegistrationBean : Mapping filter: 'springSecurityFilterChain' to: [/*]
2019-06-13 10:42:24.217  INFO 9660 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpTraceFilter' to: [/*]
2019-06-13 10:42:24.217  INFO 9660 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'webStatFilter' to urls: [/*]
2019-06-13 10:42:24.218  INFO 9660 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Servlet statViewServlet mapped to [/druid/*]
2019-06-13 10:42:24.220  INFO 9660 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Servlet dispatcherServlet mapped to [/]
2019-06-13 10:42:26.302  INFO 9660 --- [main] s.c.a.AnnotationConfigApplicationContext : Refreshing FeignContext-course: startup date [Thu Jun 13 10:42:26 CST 2019]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6b88ca8c
2019-06-13 10:42:26.336  INFO 9660 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-06-13 10:42:26.609  INFO 9660 --- [main] s.c.a.AnnotationConfigApplicationContext : Refreshing FeignContext-api-base: startup date [Thu Jun 13 10:42:26 CST 2019]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6b88ca8c
2019-06-13 10:42:26.625  INFO 9660 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-06-13 10:42:27.145  INFO 9660 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/authorize]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.security.oauth2.provider.endpoint.AuthorizationEndpoint.authorize(java.util.Map<java.lang.String, java.lang.Object>,java.util.Map<java.lang.String, java.lang.String>,org.springframework.web.bind.support.SessionStatus,java.security.Principal)
2019-06-13 10:42:27.146  INFO 9660 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/authorize],methods=[POST],params=[user_oauth_approval]}" onto public org.springframework.web.servlet.View org.springframework.security.oauth2.provider.endpoint.AuthorizationEndpoint.approveOrDeny(java.util.Map<java.lang.String, java.lang.String>,java.util.Map<java.lang.String, ?>,org.springframework.web.bind.support.SessionStatus,java.security.Principal)
2019-06-13 10:42:27.148  INFO 9660 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/token],methods=[GET]}" onto public org.springframework.http.ResponseEntity<org.springframework.security.oauth2.common.OAuth2AccessToken> org.springframework.security.oauth2.provider.endpoint.TokenEndpoint.getAccessToken(java.security.Principal,java.util.Map<java.lang.String, java.lang.String>) throws org.springframework.web.HttpRequestMethodNotSupportedException
2019-06-13 10:42:27.148  INFO 9660 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/token],methods=[POST]}" onto public org.springframework.http.ResponseEntity<org.springframework.security.oauth2.common.OAuth2AccessToken> org.springframework.security.oauth2.provider.endpoint.TokenEndpoint.postAccessToken(java.security.Principal,java.util.Map<java.lang.String, java.lang.String>) throws org.springframework.web.HttpRequestMethodNotSupportedException
2019-06-13 10:42:27.149  INFO 9660 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/check_token]}" onto public java.util.Map<java.lang.String, ?> org.springframework.security.oauth2.provider.endpoint.CheckTokenEndpoint.checkToken(java.lang.String)
2019-06-13 10:42:27.149  INFO 9660 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/confirm_access]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.security.oauth2.provider.endpoint.WhitelabelApprovalEndpoint.getAccessConfirmation(java.util.Map<java.lang.String, java.lang.Object>,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-06-13 10:42:27.150  INFO 9660 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/error]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.security.oauth2.provider.endpoint.WhitelabelErrorEndpoint.handleError(javax.servlet.http.HttpServletRequest)
2019-06-13 10:42:27.231  INFO 9660 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-06-13 10:42:27.232  INFO 9660 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/remove],methods=[POST]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.DeptController.remove(java.lang.Long)
2019-06-13 10:42:27.232  INFO 9660 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/batchRemove],methods=[POST]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.DeptController.remove(java.lang.Long[])
2019-06-13 10:42:27.232  INFO 9660 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/update]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.DeptController.update(com.bootdo.clouddoadmin.domain.DeptDO)
2019-06-13 10:42:27.233  INFO 9660 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/list],methods=[GET]}" onto public java.util.List<com.bootdo.clouddoadmin.domain.DeptDO> com.bootdo.clouddoadmin.controller.DeptController.list()
2019-06-13 10:42:27.233  INFO 9660 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/save],methods=[POST]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.DeptController.save(com.bootdo.clouddoadmin.domain.DeptDO)
2019-06-13 10:42:27.233  INFO 9660 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/tree],methods=[GET]}" onto public com.bootdo.clouddoadmin.domain.Tree<com.bootdo.clouddoadmin.domain.DeptDO> com.bootdo.clouddoadmin.controller.DeptController.tree()
2019-06-13 10:42:27.233  INFO 9660 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.DeptController.dept()
2019-06-13 10:42:27.234  INFO 9660 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.DeptController.treeView()
2019-06-13 10:42:27.235  INFO 9660 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/router],methods=[GET]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.LoginController.router()
2019-06-13 10:42:27.235  INFO 9660 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/logout]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.LoginController.logout(java.lang.String)
2019-06-13 10:42:27.239  INFO 9660 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu],methods=[DELETE]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.remove(java.lang.Long)
2019-06-13 10:42:27.239  INFO 9660 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/{id}],methods=[GET]}" onto com.bootdo.clouddoadmin.domain.MenuDO com.bootdo.clouddoadmin.controller.MenuController.get(java.lang.Long)
2019-06-13 10:42:27.240  INFO 9660 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu],methods=[PUT]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.update(com.bootdo.clouddoadmin.domain.MenuDO)
2019-06-13 10:42:27.240  INFO 9660 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu],methods=[GET]}" onto java.util.List<com.bootdo.clouddoadmin.domain.Tree<com.bootdo.clouddoadmin.domain.MenuDO>> com.bootdo.clouddoadmin.controller.MenuController.list()
2019-06-13 10:42:27.240  INFO 9660 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/list],methods=[GET]}" onto java.util.List<com.bootdo.clouddoadmin.domain.MenuDO> com.bootdo.clouddoadmin.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-13 10:42:27.241  INFO 9660 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu],methods=[POST]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.save(com.bootdo.clouddoadmin.domain.MenuDO)
2019-06-13 10:42:27.241  INFO 9660 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/tree],methods=[GET]}" onto com.bootdo.clouddoadmin.domain.Tree<com.bootdo.clouddoadmin.domain.MenuDO> com.bootdo.clouddoadmin.controller.MenuController.tree()
2019-06-13 10:42:27.241  INFO 9660 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/clearCache],methods=[GET]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.clearCache()
2019-06-13 10:42:27.242  INFO 9660 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/currentUserMenus],methods=[GET]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.currentUserMenus()
2019-06-13 10:42:27.242  INFO 9660 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/roleId],methods=[GET]}" onto java.util.List<java.lang.Long> com.bootdo.clouddoadmin.controller.MenuController.menuIdsByRoleId(java.lang.Long)
2019-06-13 10:42:27.243  INFO 9660 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/userMenus],methods=[GET]}" onto java.util.List<com.bootdo.clouddocommon.dto.MenuDTO> com.bootdo.clouddoadmin.controller.MenuController.userMenus()
2019-06-13 10:42:27.246  INFO 9660 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role],methods=[PUT]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.RoleController.update(com.bootdo.clouddoadmin.domain.RoleDO)
2019-06-13 10:42:27.246  INFO 9660 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role],methods=[GET]}" onto com.bootdo.clouddocommon.utils.PageUtils com.bootdo.clouddoadmin.controller.RoleController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-13 10:42:27.247  INFO 9660 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role],methods=[POST]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.RoleController.save(com.bootdo.clouddoadmin.domain.RoleDO)
2019-06-13 10:42:27.247  INFO 9660 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/userId/{userId}],methods=[GET]}" onto java.util.List<java.lang.Long> com.bootdo.clouddoadmin.controller.RoleController.roleIdByUserId(java.lang.Long)
2019-06-13 10:42:27.248  INFO 9660 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.TestController.test()
2019-06-13 10:42:27.248  INFO 9660 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test1],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.TestController.test1()
2019-06-13 10:42:27.250  INFO 9660 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user],methods=[DELETE]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.remove(java.lang.Long)
2019-06-13 10:42:27.251  INFO 9660 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.get(java.lang.Long)
2019-06-13 10:42:27.251  INFO 9660 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user],methods=[PUT]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.update(com.bootdo.clouddoadmin.dto.UserDTO)
2019-06-13 10:42:27.251  INFO 9660 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user],methods=[POST]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.save(com.bootdo.clouddoadmin.domain.UserDO)
2019-06-13 10:42:27.251  INFO 9660 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/batchRemove],methods=[POST]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.batchRemove(java.lang.Long[])
2019-06-13 10:42:27.251  INFO 9660 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/tokenUser],methods=[GET]}" onto public java.security.Principal com.bootdo.clouddoadmin.controller.UserController.user(java.security.Principal)
2019-06-13 10:42:27.350  INFO 9660 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/currentUser],methods=[GET]}" onto public com.bootdo.clouddocommon.dto.LoginUserDTO com.bootdo.clouddoadmin.controller.UserController.currentUser()
2019-06-13 10:42:27.351  INFO 9660 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/roleId/{roleId}],methods=[GET]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.getTeacherList(java.lang.Long,java.util.Map<java.lang.String, java.lang.Object>)
2019-06-13 10:42:27.353  INFO 9660 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/exits],methods=[POST]}" onto boolean com.bootdo.clouddoadmin.controller.UserController.exits(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-13 10:42:27.360  INFO 9660 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-06-13 10:42:27.361  INFO 9660 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-06-13 10:42:27.363  INFO 9660 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-06-13 10:42:27.370  INFO 9660 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-06-13 10:42:27.372  INFO 9660 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-13 10:42:27.557  INFO 9660 --- [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 2 endpoint(s) beneath base path '/actuator'
2019-06-13 10:42:27.578  INFO 9660 --- [main] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-06-13 10:42:27.580  INFO 9660 --- [main] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-06-13 10:42:27.582  INFO 9660 --- [main] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-13 10:42:28.457  INFO 9660 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@65d90b7f, org.springframework.security.web.context.SecurityContextPersistenceFilter@2e85e3f1, org.springframework.security.web.header.HeaderWriterFilter@35536760, org.springframework.security.web.authentication.logout.LogoutFilter@63b4b9c6, org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter@351d93bd, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@42d174ad, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4b360972, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6e090aaa, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2a42019a, org.springframework.security.web.session.SessionManagementFilter@27e21083, org.springframework.security.web.access.ExceptionTranslationFilter@e36bc01, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@9880a15]
2019-06-13 10:42:28.480  INFO 9660 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: org.springframework.security.oauth2.config.annotation.web.configuration.ResourceServerConfiguration$NotOAuthRequestMatcher@ce2eaa7, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2166c48a, org.springframework.security.web.context.SecurityContextPersistenceFilter@3ba97962, org.springframework.security.web.header.HeaderWriterFilter@7c0e4e4e, org.springframework.security.web.authentication.logout.LogoutFilter@3cb04dd, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@290c266c, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@6be50b35, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@35becbd4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3bcc8f13, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@304744a1, org.springframework.security.web.session.SessionManagementFilter@20231384, org.springframework.security.web.access.ExceptionTranslationFilter@58bad46f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@18513c23]
2019-06-13 10:42:28.532  INFO 9660 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2b9d4b0, org.springframework.security.web.context.SecurityContextPersistenceFilter@7d685f4e, org.springframework.security.web.header.HeaderWriterFilter@49e62b17, org.springframework.security.web.csrf.CsrfFilter@6480a063, org.springframework.security.web.authentication.logout.LogoutFilter@1a0ffb9b, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@319aa9ee, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@116fc29e, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@1d806de6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@61eab26b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@19ac93d2, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4f541e67, org.springframework.security.web.session.SessionManagementFilter@288409f0, org.springframework.security.web.access.ExceptionTranslationFilter@727dcc64, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@50f3ba6a]
2019-06-13 10:42:28.604  INFO 9660 --- [main] pertySourcedRequestMappingHandlerMapping : Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2019-06-13 10:42:28.834  INFO 9660 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService  'clientInboundChannelExecutor'
2019-06-13 10:42:28.856  INFO 9660 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-06-13 10:42:28.879  INFO 9660 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-06-13 10:42:28.946  INFO 9660 --- [main] o.s.w.s.s.s.WebSocketHandlerMapping      : Mapped URL path [/endpoint/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-06-13 10:42:28.974  INFO 9660 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService  'brokerChannelExecutor'
2019-06-13 10:42:29.197  WARN 9660 --- [main] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2019-06-13 10:42:29.198  INFO 9660 --- [main] c.n.c.sources.URLConfigurationSource     : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-06-13 10:42:29.342  INFO 9660 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-13 10:42:29.572  INFO 9660 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6b88ca8c: startup date [Thu Jun 13 10:42:15 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@45752059
2019-06-13 10:42:29.658  INFO 9660 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-13 10:42:29.658  INFO 9660 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-13 10:42:29.688  INFO 9660 --- [main] .m.m.a.ExceptionHandlerExceptionResolver : Detected @ExceptionHandler methods in exceptionAdviceHandler
2019-06-13 10:42:31.136  INFO 9660 --- [main] o.s.ui.freemarker.SpringTemplateLoader   : SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6b88ca8c: startup date [Thu Jun 13 10:42:15 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@45752059] and template loader path [classpath:/templates/]
2019-06-13 10:42:31.137  INFO 9660 --- [main] o.s.w.s.v.f.FreeMarkerConfigurer         : ClassTemplateLoader for Spring macros added to FreeMarker configuration
2019-06-13 10:42:31.747  INFO 9660 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2019-06-13 10:42:31.748  INFO 9660 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2019-06-13 10:42:31.761  INFO 9660 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'environmentManager' has been autodetected for JMX exposure
2019-06-13 10:42:31.763  INFO 9660 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'refreshScope' has been autodetected for JMX exposure
2019-06-13 10:42:31.764  INFO 9660 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2019-06-13 10:42:31.768  INFO 9660 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2019-06-13 10:42:31.782  INFO 9660 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2019-06-13 10:42:31.795  INFO 9660 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=6b88ca8c,type=ConfigurationPropertiesRebinder]
2019-06-13 10:42:31.804  INFO 9660 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-06-13 10:42:31.817  INFO 9660 --- [main] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase 0
2019-06-13 10:42:31.836  INFO 9660 --- [main] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2019-06-13 10:42:31.870  INFO 9660 --- [main] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2019-06-13 10:42:41.804  INFO 8632 --- [main] c.b.c.ClouddoAdminApplication            : No active profile set, falling back to default profiles: default
2019-06-13 10:42:41.823  INFO 8632 --- [main] ConfigServletWebServerApplicationContext : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@29ca3d04: startup date [Thu Jun 13 10:42:41 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6c6cb480
2019-06-13 10:42:43.303  INFO 8632 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-13 10:42:43.840  INFO 8632 --- [main] o.s.cloud.context.scope.GenericScope     : BeanFactory id=1c774fab-2f18-3dff-8fab-5ac3d64963da
2019-06-13 10:42:43.872  INFO 8632 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-06-13 10:42:44.076  INFO 8632 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f8f86dd2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 10:42:44.368  INFO 8632 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.bootdo.clouddoadmin.config.RedisConfig$$EnhancerBySpringCGLIB$$1ba5b723] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 10:42:44.382  INFO 8632 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.bootdo.clouddoadmin.config.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 10:42:44.455  INFO 8632 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$151270cf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 10:42:44.956  INFO 8632 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8005 (http)
2019-06-13 10:42:44.982  INFO 8632 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2019-06-13 10:42:44.982  INFO 8632 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.32
2019-06-13 10:42:44.987  INFO 8632 --- [localhost-startStop-1] o.a.catalina.core.AprLifecycleListener   : The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_181\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;C:;C:\Program Files\Java\jdk1.8.0_181\bin;D:\myApps\apache-maven-3.6.0\bin;C:\Program Files\Java\jdk1.8.0_181\jre\bin;C:\Program Files\Java\jdk1.8.0_181\bin ;C:\Program Files\TortoiseGit\bin;C:\windows\system32;C:\windows;C:\windows\system32\wbem;D:\StudyTools\XAMPP\mysql\bin;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;D:\系统工具\Git\cmd;D:\StudyTools\NodeJs\;D:\StudyTools\Elang\erl10.0.1\bin;D:\StudyTools\RabbitMQ Server\rabbitmq_server-3.7.7\sbin;;D:\StudyTools\DockerToolbox;D:\StudyTools\NodeJs\node_global;D:\StudyTools\WebStorm 2019.1.2\bin;;.]
2019-06-13 10:42:45.167  INFO 8632 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2019-06-13 10:42:45.167  INFO 8632 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 3345 ms
2019-06-13 10:42:45.189  INFO 8632 --- [localhost-startStop-1] c.b.c.config.DruidConfiguration          : init Druid Servlet Configuration 
2019-06-13 10:42:45.529  WARN 8632 --- [localhost-startStop-1] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2019-06-13 10:42:45.529  INFO 8632 --- [localhost-startStop-1] c.n.c.sources.URLConfigurationSource     : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-06-13 10:42:45.538  INFO 8632 --- [localhost-startStop-1] c.netflix.config.DynamicPropertyFactory  : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@362feb8f
2019-06-13 10:42:47.844  INFO 8632 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2019-06-13 10:42:47.845  INFO 8632 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'webMvcMetricsFilter' to: [/*]
2019-06-13 10:42:47.845  INFO 8632 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-06-13 10:42:47.845  INFO 8632 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-06-13 10:42:47.845  INFO 8632 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2019-06-13 10:42:47.846  INFO 8632 --- [localhost-startStop-1] .s.DelegatingFilterProxyRegistrationBean : Mapping filter: 'springSecurityFilterChain' to: [/*]
2019-06-13 10:42:47.846  INFO 8632 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpTraceFilter' to: [/*]
2019-06-13 10:42:47.846  INFO 8632 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'webStatFilter' to urls: [/*]
2019-06-13 10:42:47.847  INFO 8632 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Servlet statViewServlet mapped to [/druid/*]
2019-06-13 10:42:47.848  INFO 8632 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Servlet dispatcherServlet mapped to [/]
2019-06-13 10:42:48.971  INFO 8632 --- [main] s.c.a.AnnotationConfigApplicationContext : Refreshing FeignContext-course: startup date [Thu Jun 13 10:42:48 CST 2019]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@29ca3d04
2019-06-13 10:42:48.993  INFO 8632 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-06-13 10:42:49.206  INFO 8632 --- [main] s.c.a.AnnotationConfigApplicationContext : Refreshing FeignContext-api-base: startup date [Thu Jun 13 10:42:49 CST 2019]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@29ca3d04
2019-06-13 10:42:49.222  INFO 8632 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-06-13 10:42:49.705  INFO 8632 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/authorize],methods=[POST],params=[user_oauth_approval]}" onto public org.springframework.web.servlet.View org.springframework.security.oauth2.provider.endpoint.AuthorizationEndpoint.approveOrDeny(java.util.Map<java.lang.String, java.lang.String>,java.util.Map<java.lang.String, ?>,org.springframework.web.bind.support.SessionStatus,java.security.Principal)
2019-06-13 10:42:49.706  INFO 8632 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/authorize]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.security.oauth2.provider.endpoint.AuthorizationEndpoint.authorize(java.util.Map<java.lang.String, java.lang.Object>,java.util.Map<java.lang.String, java.lang.String>,org.springframework.web.bind.support.SessionStatus,java.security.Principal)
2019-06-13 10:42:49.708  INFO 8632 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/token],methods=[GET]}" onto public org.springframework.http.ResponseEntity<org.springframework.security.oauth2.common.OAuth2AccessToken> org.springframework.security.oauth2.provider.endpoint.TokenEndpoint.getAccessToken(java.security.Principal,java.util.Map<java.lang.String, java.lang.String>) throws org.springframework.web.HttpRequestMethodNotSupportedException
2019-06-13 10:42:49.708  INFO 8632 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/token],methods=[POST]}" onto public org.springframework.http.ResponseEntity<org.springframework.security.oauth2.common.OAuth2AccessToken> org.springframework.security.oauth2.provider.endpoint.TokenEndpoint.postAccessToken(java.security.Principal,java.util.Map<java.lang.String, java.lang.String>) throws org.springframework.web.HttpRequestMethodNotSupportedException
2019-06-13 10:42:49.709  INFO 8632 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/check_token]}" onto public java.util.Map<java.lang.String, ?> org.springframework.security.oauth2.provider.endpoint.CheckTokenEndpoint.checkToken(java.lang.String)
2019-06-13 10:42:49.709  INFO 8632 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/confirm_access]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.security.oauth2.provider.endpoint.WhitelabelApprovalEndpoint.getAccessConfirmation(java.util.Map<java.lang.String, java.lang.Object>,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-06-13 10:42:49.710  INFO 8632 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/error]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.security.oauth2.provider.endpoint.WhitelabelErrorEndpoint.handleError(javax.servlet.http.HttpServletRequest)
2019-06-13 10:42:49.794  INFO 8632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-06-13 10:42:49.794  INFO 8632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/remove],methods=[POST]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.DeptController.remove(java.lang.Long)
2019-06-13 10:42:49.795  INFO 8632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/batchRemove],methods=[POST]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.DeptController.remove(java.lang.Long[])
2019-06-13 10:42:49.795  INFO 8632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/update]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.DeptController.update(com.bootdo.clouddoadmin.domain.DeptDO)
2019-06-13 10:42:49.796  INFO 8632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/list],methods=[GET]}" onto public java.util.List<com.bootdo.clouddoadmin.domain.DeptDO> com.bootdo.clouddoadmin.controller.DeptController.list()
2019-06-13 10:42:49.796  INFO 8632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/save],methods=[POST]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.DeptController.save(com.bootdo.clouddoadmin.domain.DeptDO)
2019-06-13 10:42:49.797  INFO 8632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/tree],methods=[GET]}" onto public com.bootdo.clouddoadmin.domain.Tree<com.bootdo.clouddoadmin.domain.DeptDO> com.bootdo.clouddoadmin.controller.DeptController.tree()
2019-06-13 10:42:49.797  INFO 8632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.DeptController.treeView()
2019-06-13 10:42:49.797  INFO 8632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.DeptController.dept()
2019-06-13 10:42:49.798  INFO 8632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/logout]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.LoginController.logout(java.lang.String)
2019-06-13 10:42:49.798  INFO 8632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/router],methods=[GET]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.LoginController.router()
2019-06-13 10:42:49.802  INFO 8632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu],methods=[DELETE]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.remove(java.lang.Long)
2019-06-13 10:42:49.802  INFO 8632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/{id}],methods=[GET]}" onto com.bootdo.clouddoadmin.domain.MenuDO com.bootdo.clouddoadmin.controller.MenuController.get(java.lang.Long)
2019-06-13 10:42:49.802  INFO 8632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu],methods=[PUT]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.update(com.bootdo.clouddoadmin.domain.MenuDO)
2019-06-13 10:42:49.802  INFO 8632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu],methods=[GET]}" onto java.util.List<com.bootdo.clouddoadmin.domain.Tree<com.bootdo.clouddoadmin.domain.MenuDO>> com.bootdo.clouddoadmin.controller.MenuController.list()
2019-06-13 10:42:49.803  INFO 8632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/list],methods=[GET]}" onto java.util.List<com.bootdo.clouddoadmin.domain.MenuDO> com.bootdo.clouddoadmin.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-13 10:42:49.803  INFO 8632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu],methods=[POST]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.save(com.bootdo.clouddoadmin.domain.MenuDO)
2019-06-13 10:42:49.804  INFO 8632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/tree],methods=[GET]}" onto com.bootdo.clouddoadmin.domain.Tree<com.bootdo.clouddoadmin.domain.MenuDO> com.bootdo.clouddoadmin.controller.MenuController.tree()
2019-06-13 10:42:49.804  INFO 8632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/clearCache],methods=[GET]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.clearCache()
2019-06-13 10:42:49.804  INFO 8632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/roleId],methods=[GET]}" onto java.util.List<java.lang.Long> com.bootdo.clouddoadmin.controller.MenuController.menuIdsByRoleId(java.lang.Long)
2019-06-13 10:42:49.805  INFO 8632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/userMenus],methods=[GET]}" onto java.util.List<com.bootdo.clouddocommon.dto.MenuDTO> com.bootdo.clouddoadmin.controller.MenuController.userMenus()
2019-06-13 10:42:49.805  INFO 8632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/currentUserMenus],methods=[GET]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.currentUserMenus()
2019-06-13 10:42:49.808  INFO 8632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role],methods=[PUT]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.RoleController.update(com.bootdo.clouddoadmin.domain.RoleDO)
2019-06-13 10:42:49.809  INFO 8632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role],methods=[GET]}" onto com.bootdo.clouddocommon.utils.PageUtils com.bootdo.clouddoadmin.controller.RoleController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-13 10:42:49.809  INFO 8632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role],methods=[POST]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.RoleController.save(com.bootdo.clouddoadmin.domain.RoleDO)
2019-06-13 10:42:49.810  INFO 8632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/userId/{userId}],methods=[GET]}" onto java.util.List<java.lang.Long> com.bootdo.clouddoadmin.controller.RoleController.roleIdByUserId(java.lang.Long)
2019-06-13 10:42:49.810  INFO 8632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.TestController.test()
2019-06-13 10:42:49.811  INFO 8632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test1],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.TestController.test1()
2019-06-13 10:42:49.812  INFO 8632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user],methods=[DELETE]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.remove(java.lang.Long)
2019-06-13 10:42:49.813  INFO 8632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.get(java.lang.Long)
2019-06-13 10:42:49.813  INFO 8632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user],methods=[PUT]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.update(com.bootdo.clouddoadmin.dto.UserDTO)
2019-06-13 10:42:49.814  INFO 8632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user],methods=[POST]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.save(com.bootdo.clouddoadmin.domain.UserDO)
2019-06-13 10:42:49.814  INFO 8632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/batchRemove],methods=[POST]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.batchRemove(java.lang.Long[])
2019-06-13 10:42:49.814  INFO 8632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/tokenUser],methods=[GET]}" onto public java.security.Principal com.bootdo.clouddoadmin.controller.UserController.user(java.security.Principal)
2019-06-13 10:42:49.814  INFO 8632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/currentUser],methods=[GET]}" onto public com.bootdo.clouddocommon.dto.LoginUserDTO com.bootdo.clouddoadmin.controller.UserController.currentUser()
2019-06-13 10:42:49.815  INFO 8632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/exits],methods=[POST]}" onto boolean com.bootdo.clouddoadmin.controller.UserController.exits(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-13 10:42:49.815  INFO 8632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/roleId/{roleId}],methods=[GET]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.getTeacherList(java.lang.Long,java.util.Map<java.lang.String, java.lang.Object>)
2019-06-13 10:42:49.818  INFO 8632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-06-13 10:42:49.819  INFO 8632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-06-13 10:42:49.820  INFO 8632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-06-13 10:42:49.823  INFO 8632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-06-13 10:42:49.824  INFO 8632 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-13 10:42:49.975  INFO 8632 --- [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 2 endpoint(s) beneath base path '/actuator'
2019-06-13 10:42:50.019  INFO 8632 --- [main] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-06-13 10:42:50.021  INFO 8632 --- [main] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-06-13 10:42:50.021  INFO 8632 --- [main] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-13 10:42:50.875  INFO 8632 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@c0013b8, org.springframework.security.web.context.SecurityContextPersistenceFilter@e36bc01, org.springframework.security.web.header.HeaderWriterFilter@28f90752, org.springframework.security.web.authentication.logout.LogoutFilter@b8b2184, org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter@5bd3ca3c, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@79b8ecb, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@35536760, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@68821f6, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2c1ea7be, org.springframework.security.web.session.SessionManagementFilter@72a34537, org.springframework.security.web.access.ExceptionTranslationFilter@47ef5a33, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6dbbdf92]
2019-06-13 10:42:50.897  INFO 8632 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: org.springframework.security.oauth2.config.annotation.web.configuration.ResourceServerConfiguration$NotOAuthRequestMatcher@25464154, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@58ebee9, org.springframework.security.web.context.SecurityContextPersistenceFilter@35b3c1f6, org.springframework.security.web.header.HeaderWriterFilter@7742a276, org.springframework.security.web.authentication.logout.LogoutFilter@732d078d, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@2fd4312a, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@75c33608, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@495da9a7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2beee3e8, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@131c0b6f, org.springframework.security.web.session.SessionManagementFilter@1f48fa72, org.springframework.security.web.access.ExceptionTranslationFilter@4db6348b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@56881196]
2019-06-13 10:42:50.942  INFO 8632 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1a0ffb9b, org.springframework.security.web.context.SecurityContextPersistenceFilter@236fd411, org.springframework.security.web.header.HeaderWriterFilter@4e5d5ac1, org.springframework.security.web.csrf.CsrfFilter@4ffe3d42, org.springframework.security.web.authentication.logout.LogoutFilter@49e62b17, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@116fc29e, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@2f6f4ac4, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@2e426dd2, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@402f61f5, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6480a063, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@67c0c90b, org.springframework.security.web.session.SessionManagementFilter@70777a65, org.springframework.security.web.access.ExceptionTranslationFilter@7df3da0b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@19ac93d2]
2019-06-13 10:42:51.011  INFO 8632 --- [main] pertySourcedRequestMappingHandlerMapping : Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2019-06-13 10:42:51.235  INFO 8632 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService  'clientInboundChannelExecutor'
2019-06-13 10:42:51.258  INFO 8632 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-06-13 10:42:51.283  INFO 8632 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-06-13 10:42:51.333  INFO 8632 --- [main] o.s.w.s.s.s.WebSocketHandlerMapping      : Mapped URL path [/endpoint/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-06-13 10:42:51.359  INFO 8632 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService  'brokerChannelExecutor'
2019-06-13 10:42:51.605  WARN 8632 --- [main] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2019-06-13 10:42:51.605  INFO 8632 --- [main] c.n.c.sources.URLConfigurationSource     : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-06-13 10:42:51.732  INFO 8632 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-13 10:42:51.875  INFO 8632 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@29ca3d04: startup date [Thu Jun 13 10:42:41 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6c6cb480
2019-06-13 10:42:51.958  INFO 8632 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-13 10:42:51.958  INFO 8632 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-13 10:42:51.988  INFO 8632 --- [main] .m.m.a.ExceptionHandlerExceptionResolver : Detected @ExceptionHandler methods in exceptionAdviceHandler
2019-06-13 10:42:53.070  INFO 8632 --- [main] o.s.ui.freemarker.SpringTemplateLoader   : SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@29ca3d04: startup date [Thu Jun 13 10:42:41 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6c6cb480] and template loader path [classpath:/templates/]
2019-06-13 10:42:53.071  INFO 8632 --- [main] o.s.w.s.v.f.FreeMarkerConfigurer         : ClassTemplateLoader for Spring macros added to FreeMarker configuration
2019-06-13 10:42:53.586  INFO 8632 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2019-06-13 10:42:53.587  INFO 8632 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2019-06-13 10:42:53.599  INFO 8632 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'environmentManager' has been autodetected for JMX exposure
2019-06-13 10:42:53.601  INFO 8632 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'refreshScope' has been autodetected for JMX exposure
2019-06-13 10:42:53.602  INFO 8632 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2019-06-13 10:42:53.606  INFO 8632 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2019-06-13 10:42:53.618  INFO 8632 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2019-06-13 10:42:53.632  INFO 8632 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=29ca3d04,type=ConfigurationPropertiesRebinder]
2019-06-13 10:42:53.641  INFO 8632 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-06-13 10:42:53.652  INFO 8632 --- [main] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase 0
2019-06-13 10:42:53.671  INFO 8632 --- [main] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2019-06-13 10:42:53.703  INFO 8632 --- [main] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2019-06-13 10:42:54.113  INFO 8632 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using JSON encoding codec LegacyJacksonJson
2019-06-13 10:42:54.113  INFO 8632 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using JSON decoding codec LegacyJacksonJson
2019-06-13 10:42:54.216  INFO 8632 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using XML encoding codec XStreamXml
2019-06-13 10:42:54.217  INFO 8632 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using XML decoding codec XStreamXml
2019-06-13 10:42:54.398  INFO 8632 --- [main] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 10:42:54.622  INFO 8632 --- [main] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2019-06-13 10:42:54.622  INFO 8632 --- [main] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2019-06-13 10:42:54.622  INFO 8632 --- [main] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2019-06-13 10:42:54.622  INFO 8632 --- [main] com.netflix.discovery.DiscoveryClient    : Application is null : false
2019-06-13 10:42:54.623  INFO 8632 --- [main] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2019-06-13 10:42:54.623  INFO 8632 --- [main] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2019-06-13 10:42:54.623  INFO 8632 --- [main] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2019-06-13 10:42:54.904  INFO 8632 --- [main] com.netflix.discovery.DiscoveryClient    : The response status is 200
2019-06-13 10:42:54.907  INFO 8632 --- [main] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2019-06-13 10:42:54.910  INFO 8632 --- [main] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2019-06-13 10:42:54.914  INFO 8632 --- [main] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1560393774912 with initial instances count: 2
2019-06-13 10:42:54.933  INFO 8632 --- [main] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application api-admin with eureka with status UP
2019-06-13 10:42:54.933  INFO 8632 --- [main] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1560393774933, current=UP, previous=STARTING]
2019-06-13 10:42:54.935  INFO 8632 --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_API-ADMIN/Lenovo-PC:api-admin:8005: registering service...
2019-06-13 10:42:54.941  INFO 8632 --- [main] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase 2147483647
2019-06-13 10:42:54.941  INFO 8632 --- [main] d.s.w.p.DocumentationPluginsBootstrapper : Context refreshed
2019-06-13 10:42:54.971  INFO 8632 --- [main] d.s.w.p.DocumentationPluginsBootstrapper : Found 1 custom documentation plugin(s)
2019-06-13 10:42:54.975  INFO 8632 --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_API-ADMIN/Lenovo-PC:api-admin:8005 - registration status: 204
2019-06-13 10:42:55.037  INFO 8632 --- [main] s.d.s.w.s.ApiListingReferenceScanner     : Scanning for api listing references
2019-06-13 10:42:55.181  INFO 8632 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: removeUsingPOST_1
2019-06-13 10:42:55.285  INFO 8632 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: listUsingGET_1
2019-06-13 10:42:55.291  INFO 8632 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: listUsingGET_2
2019-06-13 10:42:55.299  INFO 8632 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: saveUsingPOST_1
2019-06-13 10:42:55.301  INFO 8632 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: treeUsingGET_1
2019-06-13 10:42:55.302  INFO 8632 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: updateUsingPUT_1
2019-06-13 10:42:55.308  INFO 8632 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: listUsingGET_3
2019-06-13 10:42:55.318  INFO 8632 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: saveUsingPOST_2
2019-06-13 10:42:55.320  INFO 8632 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: updateUsingPUT_2
2019-06-13 10:42:55.333  INFO 8632 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: getUsingGET_1
2019-06-13 10:42:55.336  INFO 8632 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: removeUsingDELETE_1
2019-06-13 10:42:55.341  INFO 8632 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: saveUsingPOST_3
2019-06-13 10:42:55.348  INFO 8632 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: updateUsingPUT_3
2019-06-13 10:42:55.364  INFO 8632 --- [main] o.s.m.s.b.SimpleBrokerMessageHandler     : Starting...
2019-06-13 10:42:55.365  INFO 8632 --- [main] o.s.m.s.b.SimpleBrokerMessageHandler     : BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-06-13 10:42:55.366  INFO 8632 --- [main] o.s.m.s.b.SimpleBrokerMessageHandler     : Started.
2019-06-13 10:42:55.456  INFO 8632 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8005 (http) with context path ''
2019-06-13 10:42:55.458  INFO 8632 --- [main] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 8005
2019-06-13 10:42:55.462  INFO 8632 --- [main] c.b.c.ClouddoAdminApplication            : Started ClouddoAdminApplication in 16.463 seconds (JVM running for 17.991)
2019-06-13 10:42:56.540  INFO 8632 --- [RMI TCP Connection(5)-10.255.47.10] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-06-13 10:42:56.546  INFO 8632 --- [RMI TCP Connection(5)-10.255.47.10] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2019-06-13 10:42:56.657  INFO 8632 --- [RMI TCP Connection(5)-10.255.47.10] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 108 ms
2019-06-13 10:42:56.901  INFO 8632 --- [RMI TCP Connection(4)-10.255.47.10] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2019-06-13 10:42:57.135  INFO 8632 --- [RMI TCP Connection(4)-10.255.47.10] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2019-06-13 10:42:57.140  INFO 8632 --- [RMI TCP Connection(4)-10.255.47.10] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2019-06-13 10:43:04.475  INFO 8632 --- [http-nio-8005-exec-1] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/currentUser
2019-06-13 10:43:04.475  INFO 8632 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/router
2019-06-13 10:43:04.476  INFO 8632 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 10:43:04.476  INFO 8632 --- [http-nio-8005-exec-1] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 10:43:04.476  INFO 8632 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/roleId/2
2019-06-13 10:43:04.476  INFO 8632 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 10:43:04.478  INFO 8632 --- [http-nio-8005-exec-1] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.currentUser
2019-06-13 10:43:04.478  INFO 8632 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.LoginController.router
2019-06-13 10:43:04.478  INFO 8632 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.getTeacherList
2019-06-13 10:43:04.479  INFO 8632 --- [http-nio-8005-exec-1] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 10:43:04.479  INFO 8632 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : [2, {page=1, limit=10, name=}]
2019-06-13 10:43:04.479  INFO 8632 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 10:43:04.510  INFO 8632 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 35
2019-06-13 10:43:04.519  INFO 8632 --- [http-nio-8005-exec-3] .s.a.AnnotationAsyncExecutionInterceptor : More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-06-13 10:43:04.549  INFO 8632 --- [SimpleAsyncTaskExecutor-1] feign.RequestInterceptor                 : ------feign设置token105
2019-06-13 10:43:04.560  INFO 8632 --- [SimpleAsyncTaskExecutor-1] s.c.a.AnnotationConfigApplicationContext : Refreshing SpringClientFactory-api-base: startup date [Thu Jun 13 10:43:04 CST 2019]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@29ca3d04
2019-06-13 10:43:04.649  INFO 8632 --- [http-nio-8005-exec-1] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 174
2019-06-13 10:43:04.657  INFO 8632 --- [SimpleAsyncTaskExecutor-2] feign.RequestInterceptor                 : ------feign设置token106
2019-06-13 10:43:04.706  INFO 8632 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 230
2019-06-13 10:43:04.707  INFO 8632 --- [SimpleAsyncTaskExecutor-1] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-06-13 10:43:04.709  INFO 8632 --- [SimpleAsyncTaskExecutor-3] feign.RequestInterceptor                 : ------feign设置token107
2019-06-13 10:43:05.067  INFO 8632 --- [SimpleAsyncTaskExecutor-1] c.netflix.config.ChainedDynamicProperty  : Flipping property: api-base.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-06-13 10:43:05.097  INFO 8632 --- [SimpleAsyncTaskExecutor-1] c.n.u.concurrent.ShutdownEnabledTimer    : Shutdown hook installed for: NFLoadBalancer-PingTimer-api-base
2019-06-13 10:43:05.101  INFO 8632 --- [SimpleAsyncTaskExecutor-1] c.netflix.loadbalancer.BaseLoadBalancer  : Client: api-base instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=api-base,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2019-06-13 10:43:05.109  INFO 8632 --- [SimpleAsyncTaskExecutor-1] c.n.l.DynamicServerListLoadBalancer      : Using serverListUpdater PollingServerListUpdater
2019-06-13 10:43:05.113  INFO 8632 --- [SimpleAsyncTaskExecutor-1] c.n.l.DynamicServerListLoadBalancer      : DynamicServerListLoadBalancer for client api-base initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=api-base,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@46484bb4
2019-06-13 10:43:05.211 ERROR 8632 --- [SimpleAsyncTaskExecutor-3] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 10:43:05.211 ERROR 8632 --- [SimpleAsyncTaskExecutor-2] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 10:43:05.211 ERROR 8632 --- [SimpleAsyncTaskExecutor-1] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 10:43:51.356  INFO 8632 --- [MessageBroker-1] o.s.w.s.c.WebSocketMessageBrokerStats    : WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-06-13 10:44:26.729  INFO 7016 --- [main] c.b.c.ClouddoAdminApplication            : No active profile set, falling back to default profiles: default
2019-06-13 10:44:26.747  INFO 7016 --- [main] ConfigServletWebServerApplicationContext : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@32a68f4f: startup date [Thu Jun 13 10:44:26 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1f2586d6
2019-06-13 10:44:28.310  INFO 7016 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-13 10:44:28.844  INFO 7016 --- [main] o.s.cloud.context.scope.GenericScope     : BeanFactory id=1c774fab-2f18-3dff-8fab-5ac3d64963da
2019-06-13 10:44:28.875  INFO 7016 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-06-13 10:44:29.086  INFO 7016 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$862fad9a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 10:44:29.384  INFO 7016 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.bootdo.clouddoadmin.config.RedisConfig$$EnhancerBySpringCGLIB$$a8dcf6eb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 10:44:29.400  INFO 7016 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.bootdo.clouddoadmin.config.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 10:44:29.469  INFO 7016 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a249b097] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 10:44:29.975  INFO 7016 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8005 (http)
2019-06-13 10:44:30.001  INFO 7016 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2019-06-13 10:44:30.001  INFO 7016 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.32
2019-06-13 10:44:30.006  INFO 7016 --- [localhost-startStop-1] o.a.catalina.core.AprLifecycleListener   : The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_181\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;C:;C:\Program Files\Java\jdk1.8.0_181\bin;D:\myApps\apache-maven-3.6.0\bin;C:\Program Files\Java\jdk1.8.0_181\jre\bin;C:\Program Files\Java\jdk1.8.0_181\bin ;C:\Program Files\TortoiseGit\bin;C:\windows\system32;C:\windows;C:\windows\system32\wbem;D:\StudyTools\XAMPP\mysql\bin;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;D:\系统工具\Git\cmd;D:\StudyTools\NodeJs\;D:\StudyTools\Elang\erl10.0.1\bin;D:\StudyTools\RabbitMQ Server\rabbitmq_server-3.7.7\sbin;;D:\StudyTools\DockerToolbox;D:\StudyTools\NodeJs\node_global;D:\StudyTools\WebStorm 2019.1.2\bin;;.]
2019-06-13 10:44:30.178  INFO 7016 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2019-06-13 10:44:30.178  INFO 7016 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 3431 ms
2019-06-13 10:44:30.204  INFO 7016 --- [localhost-startStop-1] c.b.c.config.DruidConfiguration          : init Druid Servlet Configuration 
2019-06-13 10:44:30.537  WARN 7016 --- [localhost-startStop-1] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2019-06-13 10:44:30.538  INFO 7016 --- [localhost-startStop-1] c.n.c.sources.URLConfigurationSource     : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-06-13 10:44:30.547  INFO 7016 --- [localhost-startStop-1] c.netflix.config.DynamicPropertyFactory  : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@39946e27
2019-06-13 10:44:32.895  INFO 7016 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2019-06-13 10:44:32.896  INFO 7016 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'webMvcMetricsFilter' to: [/*]
2019-06-13 10:44:32.896  INFO 7016 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-06-13 10:44:32.896  INFO 7016 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-06-13 10:44:32.896  INFO 7016 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2019-06-13 10:44:32.897  INFO 7016 --- [localhost-startStop-1] .s.DelegatingFilterProxyRegistrationBean : Mapping filter: 'springSecurityFilterChain' to: [/*]
2019-06-13 10:44:32.897  INFO 7016 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpTraceFilter' to: [/*]
2019-06-13 10:44:32.898  INFO 7016 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'webStatFilter' to urls: [/*]
2019-06-13 10:44:32.898  INFO 7016 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Servlet statViewServlet mapped to [/druid/*]
2019-06-13 10:44:32.899  INFO 7016 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Servlet dispatcherServlet mapped to [/]
2019-06-13 10:44:34.017  INFO 7016 --- [main] s.c.a.AnnotationConfigApplicationContext : Refreshing FeignContext-course: startup date [Thu Jun 13 10:44:34 CST 2019]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@32a68f4f
2019-06-13 10:44:34.037  INFO 7016 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-06-13 10:44:34.249  INFO 7016 --- [main] s.c.a.AnnotationConfigApplicationContext : Refreshing FeignContext-api-base: startup date [Thu Jun 13 10:44:34 CST 2019]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@32a68f4f
2019-06-13 10:44:34.266  INFO 7016 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-06-13 10:44:34.782  INFO 7016 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/authorize],methods=[POST],params=[user_oauth_approval]}" onto public org.springframework.web.servlet.View org.springframework.security.oauth2.provider.endpoint.AuthorizationEndpoint.approveOrDeny(java.util.Map<java.lang.String, java.lang.String>,java.util.Map<java.lang.String, ?>,org.springframework.web.bind.support.SessionStatus,java.security.Principal)
2019-06-13 10:44:34.783  INFO 7016 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/authorize]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.security.oauth2.provider.endpoint.AuthorizationEndpoint.authorize(java.util.Map<java.lang.String, java.lang.Object>,java.util.Map<java.lang.String, java.lang.String>,org.springframework.web.bind.support.SessionStatus,java.security.Principal)
2019-06-13 10:44:34.784  INFO 7016 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/token],methods=[GET]}" onto public org.springframework.http.ResponseEntity<org.springframework.security.oauth2.common.OAuth2AccessToken> org.springframework.security.oauth2.provider.endpoint.TokenEndpoint.getAccessToken(java.security.Principal,java.util.Map<java.lang.String, java.lang.String>) throws org.springframework.web.HttpRequestMethodNotSupportedException
2019-06-13 10:44:34.785  INFO 7016 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/token],methods=[POST]}" onto public org.springframework.http.ResponseEntity<org.springframework.security.oauth2.common.OAuth2AccessToken> org.springframework.security.oauth2.provider.endpoint.TokenEndpoint.postAccessToken(java.security.Principal,java.util.Map<java.lang.String, java.lang.String>) throws org.springframework.web.HttpRequestMethodNotSupportedException
2019-06-13 10:44:34.786  INFO 7016 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/check_token]}" onto public java.util.Map<java.lang.String, ?> org.springframework.security.oauth2.provider.endpoint.CheckTokenEndpoint.checkToken(java.lang.String)
2019-06-13 10:44:34.786  INFO 7016 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/confirm_access]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.security.oauth2.provider.endpoint.WhitelabelApprovalEndpoint.getAccessConfirmation(java.util.Map<java.lang.String, java.lang.Object>,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-06-13 10:44:34.787  INFO 7016 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/error]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.security.oauth2.provider.endpoint.WhitelabelErrorEndpoint.handleError(javax.servlet.http.HttpServletRequest)
2019-06-13 10:44:34.871  INFO 7016 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-06-13 10:44:34.871  INFO 7016 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/remove],methods=[POST]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.DeptController.remove(java.lang.Long)
2019-06-13 10:44:34.871  INFO 7016 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/batchRemove],methods=[POST]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.DeptController.remove(java.lang.Long[])
2019-06-13 10:44:34.872  INFO 7016 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/update]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.DeptController.update(com.bootdo.clouddoadmin.domain.DeptDO)
2019-06-13 10:44:34.872  INFO 7016 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/list],methods=[GET]}" onto public java.util.List<com.bootdo.clouddoadmin.domain.DeptDO> com.bootdo.clouddoadmin.controller.DeptController.list()
2019-06-13 10:44:34.872  INFO 7016 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/save],methods=[POST]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.DeptController.save(com.bootdo.clouddoadmin.domain.DeptDO)
2019-06-13 10:44:34.873  INFO 7016 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/tree],methods=[GET]}" onto public com.bootdo.clouddoadmin.domain.Tree<com.bootdo.clouddoadmin.domain.DeptDO> com.bootdo.clouddoadmin.controller.DeptController.tree()
2019-06-13 10:44:34.873  INFO 7016 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.DeptController.treeView()
2019-06-13 10:44:34.873  INFO 7016 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.DeptController.dept()
2019-06-13 10:44:34.874  INFO 7016 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/router],methods=[GET]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.LoginController.router()
2019-06-13 10:44:34.874  INFO 7016 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/logout]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.LoginController.logout(java.lang.String)
2019-06-13 10:44:34.878  INFO 7016 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu],methods=[DELETE]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.remove(java.lang.Long)
2019-06-13 10:44:34.879  INFO 7016 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/{id}],methods=[GET]}" onto com.bootdo.clouddoadmin.domain.MenuDO com.bootdo.clouddoadmin.controller.MenuController.get(java.lang.Long)
2019-06-13 10:44:34.879  INFO 7016 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu],methods=[PUT]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.update(com.bootdo.clouddoadmin.domain.MenuDO)
2019-06-13 10:44:34.879  INFO 7016 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu],methods=[GET]}" onto java.util.List<com.bootdo.clouddoadmin.domain.Tree<com.bootdo.clouddoadmin.domain.MenuDO>> com.bootdo.clouddoadmin.controller.MenuController.list()
2019-06-13 10:44:34.880  INFO 7016 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/list],methods=[GET]}" onto java.util.List<com.bootdo.clouddoadmin.domain.MenuDO> com.bootdo.clouddoadmin.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-13 10:44:34.880  INFO 7016 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu],methods=[POST]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.save(com.bootdo.clouddoadmin.domain.MenuDO)
2019-06-13 10:44:34.880  INFO 7016 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/tree],methods=[GET]}" onto com.bootdo.clouddoadmin.domain.Tree<com.bootdo.clouddoadmin.domain.MenuDO> com.bootdo.clouddoadmin.controller.MenuController.tree()
2019-06-13 10:44:34.880  INFO 7016 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/clearCache],methods=[GET]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.clearCache()
2019-06-13 10:44:34.881  INFO 7016 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/currentUserMenus],methods=[GET]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.currentUserMenus()
2019-06-13 10:44:34.881  INFO 7016 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/roleId],methods=[GET]}" onto java.util.List<java.lang.Long> com.bootdo.clouddoadmin.controller.MenuController.menuIdsByRoleId(java.lang.Long)
2019-06-13 10:44:34.882  INFO 7016 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/userMenus],methods=[GET]}" onto java.util.List<com.bootdo.clouddocommon.dto.MenuDTO> com.bootdo.clouddoadmin.controller.MenuController.userMenus()
2019-06-13 10:44:34.886  INFO 7016 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role],methods=[PUT]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.RoleController.update(com.bootdo.clouddoadmin.domain.RoleDO)
2019-06-13 10:44:34.887  INFO 7016 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role],methods=[GET]}" onto com.bootdo.clouddocommon.utils.PageUtils com.bootdo.clouddoadmin.controller.RoleController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-13 10:44:34.888  INFO 7016 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role],methods=[POST]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.RoleController.save(com.bootdo.clouddoadmin.domain.RoleDO)
2019-06-13 10:44:34.888  INFO 7016 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/userId/{userId}],methods=[GET]}" onto java.util.List<java.lang.Long> com.bootdo.clouddoadmin.controller.RoleController.roleIdByUserId(java.lang.Long)
2019-06-13 10:44:34.889  INFO 7016 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.TestController.test()
2019-06-13 10:44:34.889  INFO 7016 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test1],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.TestController.test1()
2019-06-13 10:44:34.891  INFO 7016 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user],methods=[DELETE]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.remove(java.lang.Long)
2019-06-13 10:44:34.891  INFO 7016 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.get(java.lang.Long)
2019-06-13 10:44:34.892  INFO 7016 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user],methods=[PUT]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.update(com.bootdo.clouddoadmin.dto.UserDTO)
2019-06-13 10:44:34.892  INFO 7016 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user],methods=[POST]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.save(com.bootdo.clouddoadmin.domain.UserDO)
2019-06-13 10:44:34.892  INFO 7016 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/batchRemove],methods=[POST]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.batchRemove(java.lang.Long[])
2019-06-13 10:44:34.893  INFO 7016 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/tokenUser],methods=[GET]}" onto public java.security.Principal com.bootdo.clouddoadmin.controller.UserController.user(java.security.Principal)
2019-06-13 10:44:34.893  INFO 7016 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/roleId/{roleId}],methods=[GET]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.getTeacherList(java.lang.Long,java.util.Map<java.lang.String, java.lang.Object>)
2019-06-13 10:44:34.893  INFO 7016 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/exits],methods=[POST]}" onto boolean com.bootdo.clouddoadmin.controller.UserController.exits(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-13 10:44:34.894  INFO 7016 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/currentUser],methods=[GET]}" onto public com.bootdo.clouddocommon.dto.LoginUserDTO com.bootdo.clouddoadmin.controller.UserController.currentUser()
2019-06-13 10:44:34.897  INFO 7016 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-06-13 10:44:34.898  INFO 7016 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-06-13 10:44:34.899  INFO 7016 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-06-13 10:44:34.902  INFO 7016 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-06-13 10:44:34.903  INFO 7016 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-13 10:44:35.043  INFO 7016 --- [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 2 endpoint(s) beneath base path '/actuator'
2019-06-13 10:44:35.060  INFO 7016 --- [main] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-06-13 10:44:35.061  INFO 7016 --- [main] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-06-13 10:44:35.062  INFO 7016 --- [main] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-13 10:44:35.906  INFO 7016 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@fde487b, org.springframework.security.web.context.SecurityContextPersistenceFilter@3c7d8a4, org.springframework.security.web.header.HeaderWriterFilter@12a6e8ed, org.springframework.security.web.authentication.logout.LogoutFilter@37f71c05, org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter@2fa879ed, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@6b751cb1, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@43423d40, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6a902015, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4cc4d454, org.springframework.security.web.session.SessionManagementFilter@6c66ddab, org.springframework.security.web.access.ExceptionTranslationFilter@d7055be, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7c0e4e4e]
2019-06-13 10:44:35.929  INFO 7016 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: org.springframework.security.oauth2.config.annotation.web.configuration.ResourceServerConfiguration$NotOAuthRequestMatcher@2e426dd2, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1a0ffb9b, org.springframework.security.web.context.SecurityContextPersistenceFilter@246df37b, org.springframework.security.web.header.HeaderWriterFilter@31b6fb14, org.springframework.security.web.authentication.logout.LogoutFilter@6231f77a, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@6cd7f381, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@116fc29e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2abedbbd, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2c56eba5, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@67c0c90b, org.springframework.security.web.session.SessionManagementFilter@3eee08f5, org.springframework.security.web.access.ExceptionTranslationFilter@2fd4312a, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@19ac93d2]
2019-06-13 10:44:35.970  INFO 7016 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@60a6840c, org.springframework.security.web.context.SecurityContextPersistenceFilter@11cc9e1e, org.springframework.security.web.header.HeaderWriterFilter@2e7a9db7, org.springframework.security.web.csrf.CsrfFilter@3350ab4, org.springframework.security.web.authentication.logout.LogoutFilter@19f497aa, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@2efcc0b3, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@54234569, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@4a453f8d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@216328b2, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5b0e9e0c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@53525379, org.springframework.security.web.session.SessionManagementFilter@5315266, org.springframework.security.web.access.ExceptionTranslationFilter@646cb2e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3460e4ed]
2019-06-13 10:44:36.042  INFO 7016 --- [main] pertySourcedRequestMappingHandlerMapping : Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2019-06-13 10:44:36.304  INFO 7016 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService  'clientInboundChannelExecutor'
2019-06-13 10:44:36.326  INFO 7016 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-06-13 10:44:36.349  INFO 7016 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-06-13 10:44:36.401  INFO 7016 --- [main] o.s.w.s.s.s.WebSocketHandlerMapping      : Mapped URL path [/endpoint/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-06-13 10:44:36.442  INFO 7016 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService  'brokerChannelExecutor'
2019-06-13 10:44:36.714  WARN 7016 --- [main] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2019-06-13 10:44:36.714  INFO 7016 --- [main] c.n.c.sources.URLConfigurationSource     : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-06-13 10:44:36.890  INFO 7016 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-13 10:44:37.091  INFO 7016 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@32a68f4f: startup date [Thu Jun 13 10:44:26 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1f2586d6
2019-06-13 10:44:37.202  INFO 7016 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-13 10:44:37.202  INFO 7016 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-13 10:44:37.230  INFO 7016 --- [main] .m.m.a.ExceptionHandlerExceptionResolver : Detected @ExceptionHandler methods in exceptionAdviceHandler
2019-06-13 10:44:38.271  INFO 7016 --- [main] o.s.ui.freemarker.SpringTemplateLoader   : SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@32a68f4f: startup date [Thu Jun 13 10:44:26 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1f2586d6] and template loader path [classpath:/templates/]
2019-06-13 10:44:38.272  INFO 7016 --- [main] o.s.w.s.v.f.FreeMarkerConfigurer         : ClassTemplateLoader for Spring macros added to FreeMarker configuration
2019-06-13 10:44:38.798  INFO 7016 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2019-06-13 10:44:38.799  INFO 7016 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2019-06-13 10:44:38.811  INFO 7016 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'environmentManager' has been autodetected for JMX exposure
2019-06-13 10:44:38.813  INFO 7016 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'refreshScope' has been autodetected for JMX exposure
2019-06-13 10:44:38.813  INFO 7016 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2019-06-13 10:44:38.817  INFO 7016 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2019-06-13 10:44:38.828  INFO 7016 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2019-06-13 10:44:38.842  INFO 7016 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=32a68f4f,type=ConfigurationPropertiesRebinder]
2019-06-13 10:44:38.851  INFO 7016 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-06-13 10:44:38.862  INFO 7016 --- [main] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase 0
2019-06-13 10:44:38.880  INFO 7016 --- [main] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2019-06-13 10:44:38.912  INFO 7016 --- [main] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2019-06-13 10:44:39.424  INFO 7016 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using JSON encoding codec LegacyJacksonJson
2019-06-13 10:44:39.424  INFO 7016 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using JSON decoding codec LegacyJacksonJson
2019-06-13 10:44:39.539  INFO 7016 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using XML encoding codec XStreamXml
2019-06-13 10:44:39.540  INFO 7016 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using XML decoding codec XStreamXml
2019-06-13 10:44:39.722  INFO 7016 --- [main] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 10:44:39.943  INFO 7016 --- [main] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2019-06-13 10:44:39.943  INFO 7016 --- [main] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2019-06-13 10:44:39.943  INFO 7016 --- [main] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2019-06-13 10:44:39.943  INFO 7016 --- [main] com.netflix.discovery.DiscoveryClient    : Application is null : false
2019-06-13 10:44:39.943  INFO 7016 --- [main] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2019-06-13 10:44:39.943  INFO 7016 --- [main] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2019-06-13 10:44:39.943  INFO 7016 --- [main] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2019-06-13 10:44:40.154  INFO 7016 --- [main] com.netflix.discovery.DiscoveryClient    : The response status is 200
2019-06-13 10:44:40.158  INFO 7016 --- [main] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2019-06-13 10:44:40.160  INFO 7016 --- [main] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2019-06-13 10:44:40.164  INFO 7016 --- [main] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1560393880163 with initial instances count: 2
2019-06-13 10:44:40.181  INFO 7016 --- [main] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application api-admin with eureka with status UP
2019-06-13 10:44:40.181  INFO 7016 --- [main] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1560393880181, current=UP, previous=STARTING]
2019-06-13 10:44:40.183  INFO 7016 --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_API-ADMIN/Lenovo-PC:api-admin:8005: registering service...
2019-06-13 10:44:40.189  INFO 7016 --- [main] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase 2147483647
2019-06-13 10:44:40.189  INFO 7016 --- [main] d.s.w.p.DocumentationPluginsBootstrapper : Context refreshed
2019-06-13 10:44:40.221  INFO 7016 --- [main] d.s.w.p.DocumentationPluginsBootstrapper : Found 1 custom documentation plugin(s)
2019-06-13 10:44:40.226  INFO 7016 --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_API-ADMIN/Lenovo-PC:api-admin:8005 - registration status: 204
2019-06-13 10:44:40.289  INFO 7016 --- [main] s.d.s.w.s.ApiListingReferenceScanner     : Scanning for api listing references
2019-06-13 10:44:40.415  INFO 7016 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: removeUsingPOST_1
2019-06-13 10:44:40.508  INFO 7016 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: listUsingGET_1
2019-06-13 10:44:40.514  INFO 7016 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: listUsingGET_2
2019-06-13 10:44:40.524  INFO 7016 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: saveUsingPOST_1
2019-06-13 10:44:40.527  INFO 7016 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: treeUsingGET_1
2019-06-13 10:44:40.529  INFO 7016 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: updateUsingPUT_1
2019-06-13 10:44:40.540  INFO 7016 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: listUsingGET_3
2019-06-13 10:44:40.552  INFO 7016 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: saveUsingPOST_2
2019-06-13 10:44:40.553  INFO 7016 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: updateUsingPUT_2
2019-06-13 10:44:40.567  INFO 7016 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: getUsingGET_1
2019-06-13 10:44:40.570  INFO 7016 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: removeUsingDELETE_1
2019-06-13 10:44:40.575  INFO 7016 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: saveUsingPOST_3
2019-06-13 10:44:40.583  INFO 7016 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: updateUsingPUT_3
2019-06-13 10:44:40.599  INFO 7016 --- [main] o.s.m.s.b.SimpleBrokerMessageHandler     : Starting...
2019-06-13 10:44:40.600  INFO 7016 --- [main] o.s.m.s.b.SimpleBrokerMessageHandler     : BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-06-13 10:44:40.601  INFO 7016 --- [main] o.s.m.s.b.SimpleBrokerMessageHandler     : Started.
2019-06-13 10:44:40.663  INFO 7016 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8005 (http) with context path ''
2019-06-13 10:44:40.664  INFO 7016 --- [main] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 8005
2019-06-13 10:44:40.668  INFO 7016 --- [main] c.b.c.ClouddoAdminApplication            : Started ClouddoAdminApplication in 16.709 seconds (JVM running for 18.234)
2019-06-13 10:44:41.145  INFO 7016 --- [RMI TCP Connection(3)-10.255.47.10] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-06-13 10:44:41.145  INFO 7016 --- [RMI TCP Connection(3)-10.255.47.10] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2019-06-13 10:44:41.190  INFO 7016 --- [RMI TCP Connection(3)-10.255.47.10] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 45 ms
2019-06-13 10:44:41.445  INFO 7016 --- [RMI TCP Connection(4)-10.255.47.10] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2019-06-13 10:44:41.809  INFO 7016 --- [RMI TCP Connection(4)-10.255.47.10] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2019-06-13 10:44:41.813  INFO 7016 --- [RMI TCP Connection(4)-10.255.47.10] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2019-06-13 10:44:54.224  INFO 7016 --- [http-nio-8005-exec-1] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/currentUser
2019-06-13 10:44:54.224  INFO 7016 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/router
2019-06-13 10:44:54.224  INFO 7016 --- [http-nio-8005-exec-1] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 10:44:54.224  INFO 7016 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 10:44:54.224  INFO 7016 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/roleId/2
2019-06-13 10:44:54.225  INFO 7016 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 10:44:54.228  INFO 7016 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.LoginController.router
2019-06-13 10:44:54.228  INFO 7016 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.getTeacherList
2019-06-13 10:44:54.228  INFO 7016 --- [http-nio-8005-exec-1] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.currentUser
2019-06-13 10:44:54.228  INFO 7016 --- [http-nio-8005-exec-1] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 10:44:54.228  INFO 7016 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : [2, {page=1, limit=10, name=}]
2019-06-13 10:44:54.228  INFO 7016 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 10:44:54.267  INFO 7016 --- [http-nio-8005-exec-1] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 44
2019-06-13 10:44:54.267  INFO 7016 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 44
2019-06-13 10:44:54.277  INFO 7016 --- [http-nio-8005-exec-1] .s.a.AnnotationAsyncExecutionInterceptor : More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-06-13 10:44:54.300  INFO 7016 --- [SimpleAsyncTaskExecutor-1] feign.RequestInterceptor                 : ------feign设置token105
2019-06-13 10:44:54.300  INFO 7016 --- [SimpleAsyncTaskExecutor-2] feign.RequestInterceptor                 : ------feign设置token106
2019-06-13 10:44:54.309  INFO 7016 --- [SimpleAsyncTaskExecutor-1] s.c.a.AnnotationConfigApplicationContext : Refreshing SpringClientFactory-api-base: startup date [Thu Jun 13 10:44:54 CST 2019]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@32a68f4f
2019-06-13 10:44:54.431  INFO 7016 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 207
2019-06-13 10:44:54.439  INFO 7016 --- [SimpleAsyncTaskExecutor-3] feign.RequestInterceptor                 : ------feign设置token107
2019-06-13 10:44:54.471  INFO 7016 --- [SimpleAsyncTaskExecutor-1] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-06-13 10:44:54.895  INFO 7016 --- [SimpleAsyncTaskExecutor-1] c.netflix.config.ChainedDynamicProperty  : Flipping property: api-base.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-06-13 10:44:54.939  INFO 7016 --- [SimpleAsyncTaskExecutor-1] c.n.u.concurrent.ShutdownEnabledTimer    : Shutdown hook installed for: NFLoadBalancer-PingTimer-api-base
2019-06-13 10:44:54.944  INFO 7016 --- [SimpleAsyncTaskExecutor-1] c.netflix.loadbalancer.BaseLoadBalancer  : Client: api-base instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=api-base,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2019-06-13 10:44:54.951  INFO 7016 --- [SimpleAsyncTaskExecutor-1] c.n.l.DynamicServerListLoadBalancer      : Using serverListUpdater PollingServerListUpdater
2019-06-13 10:44:54.956  INFO 7016 --- [SimpleAsyncTaskExecutor-1] c.n.l.DynamicServerListLoadBalancer      : DynamicServerListLoadBalancer for client api-base initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=api-base,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@5ab32d7f
2019-06-13 10:44:55.070 ERROR 7016 --- [SimpleAsyncTaskExecutor-3] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 10:44:55.070 ERROR 7016 --- [SimpleAsyncTaskExecutor-2] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 10:44:55.070 ERROR 7016 --- [SimpleAsyncTaskExecutor-1] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 10:45:36.438  INFO 7016 --- [MessageBroker-1] o.s.w.s.c.WebSocketMessageBrokerStats    : WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-06-13 10:47:22.598  INFO 5780 --- [main] c.b.c.ClouddoAdminApplication            : No active profile set, falling back to default profiles: default
2019-06-13 10:47:22.617  INFO 5780 --- [main] ConfigServletWebServerApplicationContext : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@8ad6665: startup date [Thu Jun 13 10:47:22 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@5bda8e08
2019-06-13 10:47:24.188  INFO 5780 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-13 10:47:24.741  INFO 5780 --- [main] o.s.cloud.context.scope.GenericScope     : BeanFactory id=1c774fab-2f18-3dff-8fab-5ac3d64963da
2019-06-13 10:47:24.775  INFO 5780 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-06-13 10:47:24.986  INFO 5780 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b728a42b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 10:47:25.317  INFO 5780 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.bootdo.clouddoadmin.config.RedisConfig$$EnhancerBySpringCGLIB$$d9d5ed7c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 10:47:25.335  INFO 5780 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.bootdo.clouddoadmin.config.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 10:47:25.416  INFO 5780 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$d342a728] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 10:47:25.946  INFO 5780 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8005 (http)
2019-06-13 10:47:25.972  INFO 5780 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2019-06-13 10:47:25.973  INFO 5780 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.32
2019-06-13 10:47:25.978  INFO 5780 --- [localhost-startStop-1] o.a.catalina.core.AprLifecycleListener   : The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_181\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;C:;C:\Program Files\Java\jdk1.8.0_181\bin;D:\myApps\apache-maven-3.6.0\bin;C:\Program Files\Java\jdk1.8.0_181\jre\bin;C:\Program Files\Java\jdk1.8.0_181\bin ;C:\Program Files\TortoiseGit\bin;C:\windows\system32;C:\windows;C:\windows\system32\wbem;D:\StudyTools\XAMPP\mysql\bin;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;D:\系统工具\Git\cmd;D:\StudyTools\NodeJs\;D:\StudyTools\Elang\erl10.0.1\bin;D:\StudyTools\RabbitMQ Server\rabbitmq_server-3.7.7\sbin;;D:\StudyTools\DockerToolbox;D:\StudyTools\NodeJs\node_global;D:\StudyTools\WebStorm 2019.1.2\bin;;.]
2019-06-13 10:47:26.151  INFO 5780 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2019-06-13 10:47:26.152  INFO 5780 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 3535 ms
2019-06-13 10:47:26.175  INFO 5780 --- [localhost-startStop-1] c.b.c.config.DruidConfiguration          : init Druid Servlet Configuration 
2019-06-13 10:47:26.492  WARN 5780 --- [localhost-startStop-1] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2019-06-13 10:47:26.492  INFO 5780 --- [localhost-startStop-1] c.n.c.sources.URLConfigurationSource     : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-06-13 10:47:26.504  INFO 5780 --- [localhost-startStop-1] c.netflix.config.DynamicPropertyFactory  : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@7455199b
2019-06-13 10:47:28.917  INFO 5780 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2019-06-13 10:47:28.918  INFO 5780 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'webMvcMetricsFilter' to: [/*]
2019-06-13 10:47:28.918  INFO 5780 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-06-13 10:47:28.918  INFO 5780 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-06-13 10:47:28.919  INFO 5780 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2019-06-13 10:47:28.919  INFO 5780 --- [localhost-startStop-1] .s.DelegatingFilterProxyRegistrationBean : Mapping filter: 'springSecurityFilterChain' to: [/*]
2019-06-13 10:47:28.919  INFO 5780 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpTraceFilter' to: [/*]
2019-06-13 10:47:28.920  INFO 5780 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'webStatFilter' to urls: [/*]
2019-06-13 10:47:28.920  INFO 5780 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Servlet statViewServlet mapped to [/druid/*]
2019-06-13 10:47:28.921  INFO 5780 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Servlet dispatcherServlet mapped to [/]
2019-06-13 10:47:30.157  INFO 5780 --- [main] s.c.a.AnnotationConfigApplicationContext : Refreshing FeignContext-course: startup date [Thu Jun 13 10:47:30 CST 2019]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@8ad6665
2019-06-13 10:47:30.184  INFO 5780 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-06-13 10:47:30.459  INFO 5780 --- [main] s.c.a.AnnotationConfigApplicationContext : Refreshing FeignContext-api-base: startup date [Thu Jun 13 10:47:30 CST 2019]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@8ad6665
2019-06-13 10:47:30.479  INFO 5780 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-06-13 10:47:31.136  INFO 5780 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/authorize]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.security.oauth2.provider.endpoint.AuthorizationEndpoint.authorize(java.util.Map<java.lang.String, java.lang.Object>,java.util.Map<java.lang.String, java.lang.String>,org.springframework.web.bind.support.SessionStatus,java.security.Principal)
2019-06-13 10:47:31.139  INFO 5780 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/authorize],methods=[POST],params=[user_oauth_approval]}" onto public org.springframework.web.servlet.View org.springframework.security.oauth2.provider.endpoint.AuthorizationEndpoint.approveOrDeny(java.util.Map<java.lang.String, java.lang.String>,java.util.Map<java.lang.String, ?>,org.springframework.web.bind.support.SessionStatus,java.security.Principal)
2019-06-13 10:47:31.141  INFO 5780 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/token],methods=[GET]}" onto public org.springframework.http.ResponseEntity<org.springframework.security.oauth2.common.OAuth2AccessToken> org.springframework.security.oauth2.provider.endpoint.TokenEndpoint.getAccessToken(java.security.Principal,java.util.Map<java.lang.String, java.lang.String>) throws org.springframework.web.HttpRequestMethodNotSupportedException
2019-06-13 10:47:31.142  INFO 5780 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/token],methods=[POST]}" onto public org.springframework.http.ResponseEntity<org.springframework.security.oauth2.common.OAuth2AccessToken> org.springframework.security.oauth2.provider.endpoint.TokenEndpoint.postAccessToken(java.security.Principal,java.util.Map<java.lang.String, java.lang.String>) throws org.springframework.web.HttpRequestMethodNotSupportedException
2019-06-13 10:47:31.142  INFO 5780 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/check_token]}" onto public java.util.Map<java.lang.String, ?> org.springframework.security.oauth2.provider.endpoint.CheckTokenEndpoint.checkToken(java.lang.String)
2019-06-13 10:47:31.143  INFO 5780 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/confirm_access]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.security.oauth2.provider.endpoint.WhitelabelApprovalEndpoint.getAccessConfirmation(java.util.Map<java.lang.String, java.lang.Object>,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-06-13 10:47:31.144  INFO 5780 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/error]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.security.oauth2.provider.endpoint.WhitelabelErrorEndpoint.handleError(javax.servlet.http.HttpServletRequest)
2019-06-13 10:47:31.259  INFO 5780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-06-13 10:47:31.260  INFO 5780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/remove],methods=[POST]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.DeptController.remove(java.lang.Long)
2019-06-13 10:47:31.260  INFO 5780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/batchRemove],methods=[POST]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.DeptController.remove(java.lang.Long[])
2019-06-13 10:47:31.261  INFO 5780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/update]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.DeptController.update(com.bootdo.clouddoadmin.domain.DeptDO)
2019-06-13 10:47:31.261  INFO 5780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/list],methods=[GET]}" onto public java.util.List<com.bootdo.clouddoadmin.domain.DeptDO> com.bootdo.clouddoadmin.controller.DeptController.list()
2019-06-13 10:47:31.261  INFO 5780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/save],methods=[POST]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.DeptController.save(com.bootdo.clouddoadmin.domain.DeptDO)
2019-06-13 10:47:31.262  INFO 5780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/tree],methods=[GET]}" onto public com.bootdo.clouddoadmin.domain.Tree<com.bootdo.clouddoadmin.domain.DeptDO> com.bootdo.clouddoadmin.controller.DeptController.tree()
2019-06-13 10:47:31.262  INFO 5780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.DeptController.dept()
2019-06-13 10:47:31.262  INFO 5780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.DeptController.treeView()
2019-06-13 10:47:31.263  INFO 5780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/logout]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.LoginController.logout(java.lang.String)
2019-06-13 10:47:31.264  INFO 5780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/router],methods=[GET]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.LoginController.router()
2019-06-13 10:47:31.269  INFO 5780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu],methods=[DELETE]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.remove(java.lang.Long)
2019-06-13 10:47:31.269  INFO 5780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/{id}],methods=[GET]}" onto com.bootdo.clouddoadmin.domain.MenuDO com.bootdo.clouddoadmin.controller.MenuController.get(java.lang.Long)
2019-06-13 10:47:31.270  INFO 5780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu],methods=[PUT]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.update(com.bootdo.clouddoadmin.domain.MenuDO)
2019-06-13 10:47:31.270  INFO 5780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu],methods=[GET]}" onto java.util.List<com.bootdo.clouddoadmin.domain.Tree<com.bootdo.clouddoadmin.domain.MenuDO>> com.bootdo.clouddoadmin.controller.MenuController.list()
2019-06-13 10:47:31.271  INFO 5780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/list],methods=[GET]}" onto java.util.List<com.bootdo.clouddoadmin.domain.MenuDO> com.bootdo.clouddoadmin.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-13 10:47:31.271  INFO 5780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu],methods=[POST]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.save(com.bootdo.clouddoadmin.domain.MenuDO)
2019-06-13 10:47:31.271  INFO 5780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/tree],methods=[GET]}" onto com.bootdo.clouddoadmin.domain.Tree<com.bootdo.clouddoadmin.domain.MenuDO> com.bootdo.clouddoadmin.controller.MenuController.tree()
2019-06-13 10:47:31.272  INFO 5780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/clearCache],methods=[GET]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.clearCache()
2019-06-13 10:47:31.272  INFO 5780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/currentUserMenus],methods=[GET]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.currentUserMenus()
2019-06-13 10:47:31.273  INFO 5780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/userMenus],methods=[GET]}" onto java.util.List<com.bootdo.clouddocommon.dto.MenuDTO> com.bootdo.clouddoadmin.controller.MenuController.userMenus()
2019-06-13 10:47:31.274  INFO 5780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/roleId],methods=[GET]}" onto java.util.List<java.lang.Long> com.bootdo.clouddoadmin.controller.MenuController.menuIdsByRoleId(java.lang.Long)
2019-06-13 10:47:31.276  INFO 5780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role],methods=[PUT]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.RoleController.update(com.bootdo.clouddoadmin.domain.RoleDO)
2019-06-13 10:47:31.277  INFO 5780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role],methods=[GET]}" onto com.bootdo.clouddocommon.utils.PageUtils com.bootdo.clouddoadmin.controller.RoleController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-13 10:47:31.278  INFO 5780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role],methods=[POST]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.RoleController.save(com.bootdo.clouddoadmin.domain.RoleDO)
2019-06-13 10:47:31.279  INFO 5780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/userId/{userId}],methods=[GET]}" onto java.util.List<java.lang.Long> com.bootdo.clouddoadmin.controller.RoleController.roleIdByUserId(java.lang.Long)
2019-06-13 10:47:31.279  INFO 5780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.TestController.test()
2019-06-13 10:47:31.280  INFO 5780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test1],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.TestController.test1()
2019-06-13 10:47:31.282  INFO 5780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user],methods=[DELETE]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.remove(java.lang.Long)
2019-06-13 10:47:31.282  INFO 5780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.get(java.lang.Long)
2019-06-13 10:47:31.282  INFO 5780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user],methods=[PUT]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.update(com.bootdo.clouddoadmin.dto.UserDTO)
2019-06-13 10:47:31.282  INFO 5780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user],methods=[POST]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.save(com.bootdo.clouddoadmin.domain.UserDO)
2019-06-13 10:47:31.283  INFO 5780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/batchRemove],methods=[POST]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.batchRemove(java.lang.Long[])
2019-06-13 10:47:31.283  INFO 5780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/tokenUser],methods=[GET]}" onto public java.security.Principal com.bootdo.clouddoadmin.controller.UserController.user(java.security.Principal)
2019-06-13 10:47:31.284  INFO 5780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/currentUser],methods=[GET]}" onto public com.bootdo.clouddocommon.dto.LoginUserDTO com.bootdo.clouddoadmin.controller.UserController.currentUser()
2019-06-13 10:47:31.284  INFO 5780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/exits],methods=[POST]}" onto boolean com.bootdo.clouddoadmin.controller.UserController.exits(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-13 10:47:31.285  INFO 5780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/roleId/{roleId}],methods=[GET]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.getTeacherList(java.lang.Long,java.util.Map<java.lang.String, java.lang.Object>)
2019-06-13 10:47:31.291  INFO 5780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-06-13 10:47:31.292  INFO 5780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-06-13 10:47:31.293  INFO 5780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-06-13 10:47:31.297  INFO 5780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-06-13 10:47:31.298  INFO 5780 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-13 10:47:31.540  INFO 5780 --- [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 2 endpoint(s) beneath base path '/actuator'
2019-06-13 10:47:31.568  INFO 5780 --- [main] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-06-13 10:47:31.570  INFO 5780 --- [main] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-06-13 10:47:31.571  INFO 5780 --- [main] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-13 10:47:32.556  INFO 5780 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6ea3a513, org.springframework.security.web.context.SecurityContextPersistenceFilter@3f4a605f, org.springframework.security.web.header.HeaderWriterFilter@579f3c8e, org.springframework.security.web.authentication.logout.LogoutFilter@135064ea, org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter@636fccb0, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@2c56eba5, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@bcfe29c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@351d93bd, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3c4059a, org.springframework.security.web.session.SessionManagementFilter@4e2824b1, org.springframework.security.web.access.ExceptionTranslationFilter@521a506c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@b34c7c9]
2019-06-13 10:47:32.591  INFO 5780 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: org.springframework.security.oauth2.config.annotation.web.configuration.ResourceServerConfiguration$NotOAuthRequestMatcher@646cb2e, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2e7a9db7, org.springframework.security.web.context.SecurityContextPersistenceFilter@2166c48a, org.springframework.security.web.header.HeaderWriterFilter@6be50b35, org.springframework.security.web.authentication.logout.LogoutFilter@6814262d, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@50f3ba6a, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@7827d7b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@304744a1, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@73385d3f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5315266, org.springframework.security.web.session.SessionManagementFilter@ce2eaa7, org.springframework.security.web.access.ExceptionTranslationFilter@18513c23, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3350ab4]
2019-06-13 10:47:32.650  INFO 5780 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5402612e, org.springframework.security.web.context.SecurityContextPersistenceFilter@2e3900dc, org.springframework.security.web.header.HeaderWriterFilter@69c33ea2, org.springframework.security.web.csrf.CsrfFilter@78b9155e, org.springframework.security.web.authentication.logout.LogoutFilter@4fedf908, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@3006bfb, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@75805562, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@4fd37449, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5ad0c70a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2a16d4dc, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@43445fc6, org.springframework.security.web.session.SessionManagementFilter@59e0d521, org.springframework.security.web.access.ExceptionTranslationFilter@6de33fde, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5bb99d1d]
2019-06-13 10:47:32.748  INFO 5780 --- [main] pertySourcedRequestMappingHandlerMapping : Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2019-06-13 10:47:33.104  INFO 5780 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService  'clientInboundChannelExecutor'
2019-06-13 10:47:33.131  INFO 5780 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-06-13 10:47:33.154  INFO 5780 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-06-13 10:47:33.206  INFO 5780 --- [main] o.s.w.s.s.s.WebSocketHandlerMapping      : Mapped URL path [/endpoint/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-06-13 10:47:33.234  INFO 5780 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService  'brokerChannelExecutor'
2019-06-13 10:47:33.447  WARN 5780 --- [main] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2019-06-13 10:47:33.447  INFO 5780 --- [main] c.n.c.sources.URLConfigurationSource     : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-06-13 10:47:33.614  INFO 5780 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-13 10:47:33.919  INFO 5780 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@8ad6665: startup date [Thu Jun 13 10:47:22 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@5bda8e08
2019-06-13 10:47:34.059  INFO 5780 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-13 10:47:34.059  INFO 5780 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-13 10:47:34.105  INFO 5780 --- [main] .m.m.a.ExceptionHandlerExceptionResolver : Detected @ExceptionHandler methods in exceptionAdviceHandler
2019-06-13 10:47:35.391  INFO 5780 --- [main] o.s.ui.freemarker.SpringTemplateLoader   : SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@8ad6665: startup date [Thu Jun 13 10:47:22 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@5bda8e08] and template loader path [classpath:/templates/]
2019-06-13 10:47:35.393  INFO 5780 --- [main] o.s.w.s.v.f.FreeMarkerConfigurer         : ClassTemplateLoader for Spring macros added to FreeMarker configuration
2019-06-13 10:47:35.929  INFO 5780 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2019-06-13 10:47:35.931  INFO 5780 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2019-06-13 10:47:35.943  INFO 5780 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'environmentManager' has been autodetected for JMX exposure
2019-06-13 10:47:35.946  INFO 5780 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'refreshScope' has been autodetected for JMX exposure
2019-06-13 10:47:35.947  INFO 5780 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2019-06-13 10:47:35.951  INFO 5780 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2019-06-13 10:47:35.963  INFO 5780 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2019-06-13 10:47:35.979  INFO 5780 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=8ad6665,type=ConfigurationPropertiesRebinder]
2019-06-13 10:47:35.989  INFO 5780 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-06-13 10:47:36.000  INFO 5780 --- [main] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase 0
2019-06-13 10:47:36.019  INFO 5780 --- [main] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2019-06-13 10:47:36.053  INFO 5780 --- [main] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2019-06-13 10:47:36.462  INFO 5780 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using JSON encoding codec LegacyJacksonJson
2019-06-13 10:47:36.462  INFO 5780 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using JSON decoding codec LegacyJacksonJson
2019-06-13 10:47:36.575  INFO 5780 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using XML encoding codec XStreamXml
2019-06-13 10:47:36.575  INFO 5780 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using XML decoding codec XStreamXml
2019-06-13 10:47:36.761  INFO 5780 --- [main] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 10:47:36.974  INFO 5780 --- [main] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2019-06-13 10:47:36.974  INFO 5780 --- [main] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2019-06-13 10:47:36.974  INFO 5780 --- [main] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2019-06-13 10:47:36.974  INFO 5780 --- [main] com.netflix.discovery.DiscoveryClient    : Application is null : false
2019-06-13 10:47:36.974  INFO 5780 --- [main] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2019-06-13 10:47:36.974  INFO 5780 --- [main] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2019-06-13 10:47:36.975  INFO 5780 --- [main] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2019-06-13 10:47:37.201  INFO 5780 --- [main] com.netflix.discovery.DiscoveryClient    : The response status is 200
2019-06-13 10:47:37.204  INFO 5780 --- [main] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2019-06-13 10:47:37.207  INFO 5780 --- [main] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2019-06-13 10:47:37.211  INFO 5780 --- [main] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1560394057209 with initial instances count: 2
2019-06-13 10:47:37.228  INFO 5780 --- [main] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application api-admin with eureka with status UP
2019-06-13 10:47:37.228  INFO 5780 --- [main] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1560394057228, current=UP, previous=STARTING]
2019-06-13 10:47:37.230  INFO 5780 --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_API-ADMIN/Lenovo-PC:api-admin:8005: registering service...
2019-06-13 10:47:37.235  INFO 5780 --- [main] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase 2147483647
2019-06-13 10:47:37.235  INFO 5780 --- [main] d.s.w.p.DocumentationPluginsBootstrapper : Context refreshed
2019-06-13 10:47:37.267  INFO 5780 --- [main] d.s.w.p.DocumentationPluginsBootstrapper : Found 1 custom documentation plugin(s)
2019-06-13 10:47:37.333  INFO 5780 --- [main] s.d.s.w.s.ApiListingReferenceScanner     : Scanning for api listing references
2019-06-13 10:47:37.476  INFO 5780 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: removeUsingPOST_1
2019-06-13 10:47:37.565  INFO 5780 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: listUsingGET_1
2019-06-13 10:47:37.571  INFO 5780 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: listUsingGET_2
2019-06-13 10:47:37.577  INFO 5780 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: saveUsingPOST_1
2019-06-13 10:47:37.579  INFO 5780 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: treeUsingGET_1
2019-06-13 10:47:37.580  INFO 5780 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: updateUsingPUT_1
2019-06-13 10:47:37.586  INFO 5780 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: listUsingGET_3
2019-06-13 10:47:37.599  INFO 5780 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: saveUsingPOST_2
2019-06-13 10:47:37.601  INFO 5780 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: updateUsingPUT_2
2019-06-13 10:47:37.614  INFO 5780 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: getUsingGET_1
2019-06-13 10:47:37.617  INFO 5780 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: removeUsingDELETE_1
2019-06-13 10:47:37.622  INFO 5780 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: saveUsingPOST_3
2019-06-13 10:47:37.630  INFO 5780 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: updateUsingPUT_3
2019-06-13 10:47:37.645  INFO 5780 --- [main] o.s.m.s.b.SimpleBrokerMessageHandler     : Starting...
2019-06-13 10:47:37.646  INFO 5780 --- [main] o.s.m.s.b.SimpleBrokerMessageHandler     : BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-06-13 10:47:37.647  INFO 5780 --- [main] o.s.m.s.b.SimpleBrokerMessageHandler     : Started.
2019-06-13 10:47:37.701  INFO 5780 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8005 (http) with context path ''
2019-06-13 10:47:37.703  INFO 5780 --- [main] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 8005
2019-06-13 10:47:37.705  INFO 5780 --- [main] c.b.c.ClouddoAdminApplication            : Started ClouddoAdminApplication in 18.301 seconds (JVM running for 19.792)
2019-06-13 10:47:37.885  INFO 5780 --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_API-ADMIN/Lenovo-PC:api-admin:8005 - registration status: 204
2019-06-13 10:47:38.213  INFO 5780 --- [RMI TCP Connection(4)-10.255.47.10] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-06-13 10:47:38.214  INFO 5780 --- [RMI TCP Connection(4)-10.255.47.10] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2019-06-13 10:47:38.288  INFO 5780 --- [RMI TCP Connection(4)-10.255.47.10] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 74 ms
2019-06-13 10:47:38.588  INFO 5780 --- [RMI TCP Connection(3)-10.255.47.10] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2019-06-13 10:47:38.985  INFO 5780 --- [RMI TCP Connection(3)-10.255.47.10] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2019-06-13 10:47:38.989  INFO 5780 --- [RMI TCP Connection(3)-10.255.47.10] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2019-06-13 10:48:24.411  INFO 5780 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/currentUser
2019-06-13 10:48:24.411  INFO 5780 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 10:48:24.414  INFO 5780 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.currentUser
2019-06-13 10:48:24.414  INFO 5780 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 10:48:24.443  INFO 5780 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 32
2019-06-13 10:48:24.450  INFO 5780 --- [http-nio-8005-exec-2] .s.a.AnnotationAsyncExecutionInterceptor : More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-06-13 10:48:24.466  INFO 5780 --- [SimpleAsyncTaskExecutor-1] feign.RequestInterceptor                 : ------feign设置token109
2019-06-13 10:48:24.469  INFO 5780 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/router
2019-06-13 10:48:24.469  INFO 5780 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 10:48:24.470  INFO 5780 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.LoginController.router
2019-06-13 10:48:24.470  INFO 5780 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 10:48:24.473  INFO 5780 --- [SimpleAsyncTaskExecutor-1] s.c.a.AnnotationConfigApplicationContext : Refreshing SpringClientFactory-api-base: startup date [Thu Jun 13 10:48:24 CST 2019]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@8ad6665
2019-06-13 10:48:24.480  INFO 5780 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 11
2019-06-13 10:48:24.483  INFO 5780 --- [SimpleAsyncTaskExecutor-2] feign.RequestInterceptor                 : ------feign设置token110
2019-06-13 10:48:24.613  INFO 5780 --- [SimpleAsyncTaskExecutor-1] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-06-13 10:48:24.934  INFO 5780 --- [SimpleAsyncTaskExecutor-1] c.netflix.config.ChainedDynamicProperty  : Flipping property: api-base.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-06-13 10:48:24.975  INFO 5780 --- [SimpleAsyncTaskExecutor-1] c.n.u.concurrent.ShutdownEnabledTimer    : Shutdown hook installed for: NFLoadBalancer-PingTimer-api-base
2019-06-13 10:48:24.981  INFO 5780 --- [SimpleAsyncTaskExecutor-1] c.netflix.loadbalancer.BaseLoadBalancer  : Client: api-base instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=api-base,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2019-06-13 10:48:24.991  INFO 5780 --- [SimpleAsyncTaskExecutor-1] c.n.l.DynamicServerListLoadBalancer      : Using serverListUpdater PollingServerListUpdater
2019-06-13 10:48:24.995  INFO 5780 --- [SimpleAsyncTaskExecutor-1] c.n.l.DynamicServerListLoadBalancer      : DynamicServerListLoadBalancer for client api-base initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=api-base,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@874eb19
2019-06-13 10:48:25.114 ERROR 5780 --- [SimpleAsyncTaskExecutor-2] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 10:48:25.114 ERROR 5780 --- [SimpleAsyncTaskExecutor-1] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 10:48:33.232  INFO 5780 --- [MessageBroker-1] o.s.w.s.c.WebSocketMessageBrokerStats    : WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-06-13 10:51:54.104  INFO 8356 --- [main] c.b.c.ClouddoAdminApplication            : No active profile set, falling back to default profiles: default
2019-06-13 10:51:54.125  INFO 8356 --- [main] ConfigServletWebServerApplicationContext : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6f95cd51: startup date [Thu Jun 13 10:51:54 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@ab7395e
2019-06-13 10:51:55.794  INFO 8356 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-13 10:51:56.421  INFO 8356 --- [main] o.s.cloud.context.scope.GenericScope     : BeanFactory id=1c774fab-2f18-3dff-8fab-5ac3d64963da
2019-06-13 10:51:56.458  INFO 8356 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-06-13 10:51:56.726  INFO 8356 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$734fbb5f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 10:51:57.101  INFO 8356 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.bootdo.clouddoadmin.config.RedisConfig$$EnhancerBySpringCGLIB$$95fd04b0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 10:51:57.117  INFO 8356 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.bootdo.clouddoadmin.config.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 10:51:57.203  INFO 8356 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$8f69be5c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 10:51:57.870  INFO 8356 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8005 (http)
2019-06-13 10:51:57.905  INFO 8356 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2019-06-13 10:51:57.906  INFO 8356 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.32
2019-06-13 10:51:57.913  INFO 8356 --- [localhost-startStop-1] o.a.catalina.core.AprLifecycleListener   : The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_181\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;C:;C:\Program Files\Java\jdk1.8.0_181\bin;D:\myApps\apache-maven-3.6.0\bin;C:\Program Files\Java\jdk1.8.0_181\jre\bin;C:\Program Files\Java\jdk1.8.0_181\bin ;C:\Program Files\TortoiseGit\bin;C:\windows\system32;C:\windows;C:\windows\system32\wbem;D:\StudyTools\XAMPP\mysql\bin;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;D:\系统工具\Git\cmd;D:\StudyTools\NodeJs\;D:\StudyTools\Elang\erl10.0.1\bin;D:\StudyTools\RabbitMQ Server\rabbitmq_server-3.7.7\sbin;;D:\StudyTools\DockerToolbox;D:\StudyTools\NodeJs\node_global;D:\StudyTools\WebStorm 2019.1.2\bin;;.]
2019-06-13 10:51:58.116  INFO 8356 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2019-06-13 10:51:58.116  INFO 8356 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 3991 ms
2019-06-13 10:51:58.140  INFO 8356 --- [localhost-startStop-1] c.b.c.config.DruidConfiguration          : init Druid Servlet Configuration 
2019-06-13 10:51:58.515  WARN 8356 --- [localhost-startStop-1] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2019-06-13 10:51:58.516  INFO 8356 --- [localhost-startStop-1] c.n.c.sources.URLConfigurationSource     : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-06-13 10:51:58.536  INFO 8356 --- [localhost-startStop-1] c.netflix.config.DynamicPropertyFactory  : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@573605d8
2019-06-13 10:52:01.251  INFO 8356 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2019-06-13 10:52:01.252  INFO 8356 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'webMvcMetricsFilter' to: [/*]
2019-06-13 10:52:01.252  INFO 8356 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-06-13 10:52:01.252  INFO 8356 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-06-13 10:52:01.252  INFO 8356 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2019-06-13 10:52:01.253  INFO 8356 --- [localhost-startStop-1] .s.DelegatingFilterProxyRegistrationBean : Mapping filter: 'springSecurityFilterChain' to: [/*]
2019-06-13 10:52:01.253  INFO 8356 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpTraceFilter' to: [/*]
2019-06-13 10:52:01.254  INFO 8356 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'webStatFilter' to urls: [/*]
2019-06-13 10:52:01.254  INFO 8356 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Servlet statViewServlet mapped to [/druid/*]
2019-06-13 10:52:01.255  INFO 8356 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Servlet dispatcherServlet mapped to [/]
2019-06-13 10:52:02.974  INFO 8356 --- [main] s.c.a.AnnotationConfigApplicationContext : Refreshing FeignContext-course: startup date [Thu Jun 13 10:52:02 CST 2019]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6f95cd51
2019-06-13 10:52:02.997  INFO 8356 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-06-13 10:52:03.251  INFO 8356 --- [main] s.c.a.AnnotationConfigApplicationContext : Refreshing FeignContext-api-base: startup date [Thu Jun 13 10:52:03 CST 2019]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6f95cd51
2019-06-13 10:52:03.269  INFO 8356 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-06-13 10:52:03.889  INFO 8356 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/authorize],methods=[POST],params=[user_oauth_approval]}" onto public org.springframework.web.servlet.View org.springframework.security.oauth2.provider.endpoint.AuthorizationEndpoint.approveOrDeny(java.util.Map<java.lang.String, java.lang.String>,java.util.Map<java.lang.String, ?>,org.springframework.web.bind.support.SessionStatus,java.security.Principal)
2019-06-13 10:52:03.891  INFO 8356 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/authorize]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.security.oauth2.provider.endpoint.AuthorizationEndpoint.authorize(java.util.Map<java.lang.String, java.lang.Object>,java.util.Map<java.lang.String, java.lang.String>,org.springframework.web.bind.support.SessionStatus,java.security.Principal)
2019-06-13 10:52:03.892  INFO 8356 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/token],methods=[GET]}" onto public org.springframework.http.ResponseEntity<org.springframework.security.oauth2.common.OAuth2AccessToken> org.springframework.security.oauth2.provider.endpoint.TokenEndpoint.getAccessToken(java.security.Principal,java.util.Map<java.lang.String, java.lang.String>) throws org.springframework.web.HttpRequestMethodNotSupportedException
2019-06-13 10:52:03.893  INFO 8356 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/token],methods=[POST]}" onto public org.springframework.http.ResponseEntity<org.springframework.security.oauth2.common.OAuth2AccessToken> org.springframework.security.oauth2.provider.endpoint.TokenEndpoint.postAccessToken(java.security.Principal,java.util.Map<java.lang.String, java.lang.String>) throws org.springframework.web.HttpRequestMethodNotSupportedException
2019-06-13 10:52:03.894  INFO 8356 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/check_token]}" onto public java.util.Map<java.lang.String, ?> org.springframework.security.oauth2.provider.endpoint.CheckTokenEndpoint.checkToken(java.lang.String)
2019-06-13 10:52:03.894  INFO 8356 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/confirm_access]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.security.oauth2.provider.endpoint.WhitelabelApprovalEndpoint.getAccessConfirmation(java.util.Map<java.lang.String, java.lang.Object>,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-06-13 10:52:03.895  INFO 8356 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/error]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.security.oauth2.provider.endpoint.WhitelabelErrorEndpoint.handleError(javax.servlet.http.HttpServletRequest)
2019-06-13 10:52:04.021  INFO 8356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-06-13 10:52:04.021  INFO 8356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/remove],methods=[POST]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.DeptController.remove(java.lang.Long)
2019-06-13 10:52:04.021  INFO 8356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/batchRemove],methods=[POST]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.DeptController.remove(java.lang.Long[])
2019-06-13 10:52:04.022  INFO 8356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/update]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.DeptController.update(com.bootdo.clouddoadmin.domain.DeptDO)
2019-06-13 10:52:04.022  INFO 8356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/list],methods=[GET]}" onto public java.util.List<com.bootdo.clouddoadmin.domain.DeptDO> com.bootdo.clouddoadmin.controller.DeptController.list()
2019-06-13 10:52:04.022  INFO 8356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/save],methods=[POST]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.DeptController.save(com.bootdo.clouddoadmin.domain.DeptDO)
2019-06-13 10:52:04.023  INFO 8356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/tree],methods=[GET]}" onto public com.bootdo.clouddoadmin.domain.Tree<com.bootdo.clouddoadmin.domain.DeptDO> com.bootdo.clouddoadmin.controller.DeptController.tree()
2019-06-13 10:52:04.023  INFO 8356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.DeptController.treeView()
2019-06-13 10:52:04.023  INFO 8356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.DeptController.dept()
2019-06-13 10:52:04.024  INFO 8356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/logout]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.LoginController.logout(java.lang.String)
2019-06-13 10:52:04.024  INFO 8356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/router],methods=[GET]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.LoginController.router()
2019-06-13 10:52:04.034  INFO 8356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu],methods=[DELETE]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.remove(java.lang.Long)
2019-06-13 10:52:04.034  INFO 8356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/{id}],methods=[GET]}" onto com.bootdo.clouddoadmin.domain.MenuDO com.bootdo.clouddoadmin.controller.MenuController.get(java.lang.Long)
2019-06-13 10:52:04.035  INFO 8356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu],methods=[PUT]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.update(com.bootdo.clouddoadmin.domain.MenuDO)
2019-06-13 10:52:04.036  INFO 8356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu],methods=[GET]}" onto java.util.List<com.bootdo.clouddoadmin.domain.Tree<com.bootdo.clouddoadmin.domain.MenuDO>> com.bootdo.clouddoadmin.controller.MenuController.list()
2019-06-13 10:52:04.149  INFO 8356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/list],methods=[GET]}" onto java.util.List<com.bootdo.clouddoadmin.domain.MenuDO> com.bootdo.clouddoadmin.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-13 10:52:04.149  INFO 8356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu],methods=[POST]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.save(com.bootdo.clouddoadmin.domain.MenuDO)
2019-06-13 10:52:04.150  INFO 8356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/tree],methods=[GET]}" onto com.bootdo.clouddoadmin.domain.Tree<com.bootdo.clouddoadmin.domain.MenuDO> com.bootdo.clouddoadmin.controller.MenuController.tree()
2019-06-13 10:52:04.150  INFO 8356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/clearCache],methods=[GET]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.clearCache()
2019-06-13 10:52:04.150  INFO 8356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/roleId],methods=[GET]}" onto java.util.List<java.lang.Long> com.bootdo.clouddoadmin.controller.MenuController.menuIdsByRoleId(java.lang.Long)
2019-06-13 10:52:04.151  INFO 8356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/userMenus],methods=[GET]}" onto java.util.List<com.bootdo.clouddocommon.dto.MenuDTO> com.bootdo.clouddoadmin.controller.MenuController.userMenus()
2019-06-13 10:52:04.153  INFO 8356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/currentUserMenus],methods=[GET]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.currentUserMenus()
2019-06-13 10:52:04.158  INFO 8356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role],methods=[PUT]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.RoleController.update(com.bootdo.clouddoadmin.domain.RoleDO)
2019-06-13 10:52:04.159  INFO 8356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role],methods=[GET]}" onto com.bootdo.clouddocommon.utils.PageUtils com.bootdo.clouddoadmin.controller.RoleController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-13 10:52:04.159  INFO 8356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role],methods=[POST]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.RoleController.save(com.bootdo.clouddoadmin.domain.RoleDO)
2019-06-13 10:52:04.160  INFO 8356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/userId/{userId}],methods=[GET]}" onto java.util.List<java.lang.Long> com.bootdo.clouddoadmin.controller.RoleController.roleIdByUserId(java.lang.Long)
2019-06-13 10:52:04.160  INFO 8356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.TestController.test()
2019-06-13 10:52:04.161  INFO 8356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test1],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.TestController.test1()
2019-06-13 10:52:04.162  INFO 8356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user],methods=[DELETE]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.remove(java.lang.Long)
2019-06-13 10:52:04.163  INFO 8356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.get(java.lang.Long)
2019-06-13 10:52:04.163  INFO 8356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user],methods=[PUT]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.update(com.bootdo.clouddoadmin.dto.UserDTO)
2019-06-13 10:52:04.163  INFO 8356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user],methods=[POST]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.save(com.bootdo.clouddoadmin.domain.UserDO)
2019-06-13 10:52:04.164  INFO 8356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/batchRemove],methods=[POST]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.batchRemove(java.lang.Long[])
2019-06-13 10:52:04.164  INFO 8356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/tokenUser],methods=[GET]}" onto public java.security.Principal com.bootdo.clouddoadmin.controller.UserController.user(java.security.Principal)
2019-06-13 10:52:04.164  INFO 8356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/roleId/{roleId}],methods=[GET]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.getTeacherList(java.lang.Long,java.util.Map<java.lang.String, java.lang.Object>)
2019-06-13 10:52:04.164  INFO 8356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/currentUser],methods=[GET]}" onto public com.bootdo.clouddocommon.dto.LoginUserDTO com.bootdo.clouddoadmin.controller.UserController.currentUser()
2019-06-13 10:52:04.165  INFO 8356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/exits],methods=[POST]}" onto boolean com.bootdo.clouddoadmin.controller.UserController.exits(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-13 10:52:04.169  INFO 8356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-06-13 10:52:04.171  INFO 8356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-06-13 10:52:04.172  INFO 8356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-06-13 10:52:04.177  INFO 8356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-06-13 10:52:04.178  INFO 8356 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-13 10:52:04.391  INFO 8356 --- [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 2 endpoint(s) beneath base path '/actuator'
2019-06-13 10:52:04.417  INFO 8356 --- [main] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-06-13 10:52:04.419  INFO 8356 --- [main] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-06-13 10:52:04.421  INFO 8356 --- [main] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-13 10:52:05.418  INFO 8356 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@558aa1f1, org.springframework.security.web.context.SecurityContextPersistenceFilter@32a074ed, org.springframework.security.web.header.HeaderWriterFilter@68f75a35, org.springframework.security.web.authentication.logout.LogoutFilter@7d563c13, org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter@129aaac1, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@4769537a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@29eaf100, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3539cf45, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@361d8567, org.springframework.security.web.session.SessionManagementFilter@45017263, org.springframework.security.web.access.ExceptionTranslationFilter@197180a5, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7741507c]
2019-06-13 10:52:05.444  INFO 8356 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: org.springframework.security.oauth2.config.annotation.web.configuration.ResourceServerConfiguration$NotOAuthRequestMatcher@3f142e87, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@22dc9d46, org.springframework.security.web.context.SecurityContextPersistenceFilter@6f87a7c7, org.springframework.security.web.header.HeaderWriterFilter@7792e14f, org.springframework.security.web.authentication.logout.LogoutFilter@418bdde9, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@3fecb076, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@6afced93, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@857f1a7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@682fe17b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@63c6c5e5, org.springframework.security.web.session.SessionManagementFilter@4eace42b, org.springframework.security.web.access.ExceptionTranslationFilter@43549c6c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@46a0ef6f]
2019-06-13 10:52:05.496  INFO 8356 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7fd4b9ec, org.springframework.security.web.context.SecurityContextPersistenceFilter@17f8cad6, org.springframework.security.web.header.HeaderWriterFilter@460aa24e, org.springframework.security.web.csrf.CsrfFilter@720c0996, org.springframework.security.web.authentication.logout.LogoutFilter@7f9e6167, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@4f5c757c, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@2ee1b017, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@52fec840, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@698e1bf5, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7a85dc58, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@10553a61, org.springframework.security.web.session.SessionManagementFilter@5aa334c, org.springframework.security.web.access.ExceptionTranslationFilter@7910e307, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1d3e5a05]
2019-06-13 10:52:05.597  INFO 8356 --- [main] pertySourcedRequestMappingHandlerMapping : Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2019-06-13 10:52:05.880  INFO 8356 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService  'clientInboundChannelExecutor'
2019-06-13 10:52:05.905  INFO 8356 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-06-13 10:52:05.934  INFO 8356 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-06-13 10:52:05.996  INFO 8356 --- [main] o.s.w.s.s.s.WebSocketHandlerMapping      : Mapped URL path [/endpoint/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-06-13 10:52:06.025  INFO 8356 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService  'brokerChannelExecutor'
2019-06-13 10:52:06.302  WARN 8356 --- [main] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2019-06-13 10:52:06.302  INFO 8356 --- [main] c.n.c.sources.URLConfigurationSource     : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-06-13 10:52:06.455  INFO 8356 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-13 10:52:06.980  INFO 8356 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6f95cd51: startup date [Thu Jun 13 10:51:54 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@ab7395e
2019-06-13 10:52:07.085  INFO 8356 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-13 10:52:07.085  INFO 8356 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-13 10:52:07.120  INFO 8356 --- [main] .m.m.a.ExceptionHandlerExceptionResolver : Detected @ExceptionHandler methods in exceptionAdviceHandler
2019-06-13 10:52:08.081  INFO 8356 --- [main] o.s.ui.freemarker.SpringTemplateLoader   : SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6f95cd51: startup date [Thu Jun 13 10:51:54 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@ab7395e] and template loader path [classpath:/templates/]
2019-06-13 10:52:08.082  INFO 8356 --- [main] o.s.w.s.v.f.FreeMarkerConfigurer         : ClassTemplateLoader for Spring macros added to FreeMarker configuration
2019-06-13 10:52:08.726  INFO 8356 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2019-06-13 10:52:08.728  INFO 8356 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2019-06-13 10:52:08.743  INFO 8356 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'environmentManager' has been autodetected for JMX exposure
2019-06-13 10:52:08.746  INFO 8356 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'refreshScope' has been autodetected for JMX exposure
2019-06-13 10:52:08.747  INFO 8356 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2019-06-13 10:52:08.752  INFO 8356 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2019-06-13 10:52:08.766  INFO 8356 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2019-06-13 10:52:08.784  INFO 8356 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=6f95cd51,type=ConfigurationPropertiesRebinder]
2019-06-13 10:52:08.795  INFO 8356 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-06-13 10:52:08.806  INFO 8356 --- [main] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase 0
2019-06-13 10:52:08.828  INFO 8356 --- [main] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2019-06-13 10:52:08.873  INFO 8356 --- [main] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2019-06-13 10:52:09.452  INFO 8356 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using JSON encoding codec LegacyJacksonJson
2019-06-13 10:52:09.453  INFO 8356 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using JSON decoding codec LegacyJacksonJson
2019-06-13 10:52:09.662  INFO 8356 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using XML encoding codec XStreamXml
2019-06-13 10:52:09.662  INFO 8356 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using XML decoding codec XStreamXml
2019-06-13 10:52:09.976  INFO 8356 --- [main] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 10:52:10.212  INFO 8356 --- [main] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2019-06-13 10:52:10.212  INFO 8356 --- [main] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2019-06-13 10:52:10.212  INFO 8356 --- [main] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2019-06-13 10:52:10.212  INFO 8356 --- [main] com.netflix.discovery.DiscoveryClient    : Application is null : false
2019-06-13 10:52:10.212  INFO 8356 --- [main] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2019-06-13 10:52:10.212  INFO 8356 --- [main] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2019-06-13 10:52:10.212  INFO 8356 --- [main] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2019-06-13 10:52:10.564  INFO 8356 --- [main] com.netflix.discovery.DiscoveryClient    : The response status is 200
2019-06-13 10:52:10.568  INFO 8356 --- [main] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2019-06-13 10:52:10.572  INFO 8356 --- [main] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2019-06-13 10:52:10.576  INFO 8356 --- [main] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1560394330575 with initial instances count: 2
2019-06-13 10:52:10.595  INFO 8356 --- [main] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application api-admin with eureka with status UP
2019-06-13 10:52:10.595  INFO 8356 --- [main] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1560394330595, current=UP, previous=STARTING]
2019-06-13 10:52:10.597  INFO 8356 --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_API-ADMIN/Lenovo-PC:api-admin:8005: registering service...
2019-06-13 10:52:10.602  INFO 8356 --- [main] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase 2147483647
2019-06-13 10:52:10.603  INFO 8356 --- [main] d.s.w.p.DocumentationPluginsBootstrapper : Context refreshed
2019-06-13 10:52:10.640  INFO 8356 --- [main] d.s.w.p.DocumentationPluginsBootstrapper : Found 1 custom documentation plugin(s)
2019-06-13 10:52:10.658  INFO 8356 --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_API-ADMIN/Lenovo-PC:api-admin:8005 - registration status: 204
2019-06-13 10:52:10.715  INFO 8356 --- [main] s.d.s.w.s.ApiListingReferenceScanner     : Scanning for api listing references
2019-06-13 10:52:10.903  INFO 8356 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: removeUsingPOST_1
2019-06-13 10:52:10.989  INFO 8356 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: listUsingGET_1
2019-06-13 10:52:10.995  INFO 8356 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: listUsingGET_2
2019-06-13 10:52:11.002  INFO 8356 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: saveUsingPOST_1
2019-06-13 10:52:11.004  INFO 8356 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: treeUsingGET_1
2019-06-13 10:52:11.005  INFO 8356 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: updateUsingPUT_1
2019-06-13 10:52:11.012  INFO 8356 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: listUsingGET_3
2019-06-13 10:52:11.025  INFO 8356 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: saveUsingPOST_2
2019-06-13 10:52:11.026  INFO 8356 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: updateUsingPUT_2
2019-06-13 10:52:11.038  INFO 8356 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: getUsingGET_1
2019-06-13 10:52:11.041  INFO 8356 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: removeUsingDELETE_1
2019-06-13 10:52:11.047  INFO 8356 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: saveUsingPOST_3
2019-06-13 10:52:11.055  INFO 8356 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: updateUsingPUT_3
2019-06-13 10:52:11.074  INFO 8356 --- [main] o.s.m.s.b.SimpleBrokerMessageHandler     : Starting...
2019-06-13 10:52:11.075  INFO 8356 --- [main] o.s.m.s.b.SimpleBrokerMessageHandler     : BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-06-13 10:52:11.077  INFO 8356 --- [main] o.s.m.s.b.SimpleBrokerMessageHandler     : Started.
2019-06-13 10:52:11.158  INFO 8356 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8005 (http) with context path ''
2019-06-13 10:52:11.160  INFO 8356 --- [main] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 8005
2019-06-13 10:52:11.162  INFO 8356 --- [main] c.b.c.ClouddoAdminApplication            : Started ClouddoAdminApplication in 19.152 seconds (JVM running for 25.897)
2019-06-13 10:52:11.959  INFO 8356 --- [RMI TCP Connection(1)-10.255.47.10] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-06-13 10:52:11.978  INFO 8356 --- [RMI TCP Connection(1)-10.255.47.10] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2019-06-13 10:52:12.380  INFO 8356 --- [RMI TCP Connection(1)-10.255.47.10] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 400 ms
2019-06-13 10:52:12.896  INFO 8356 --- [RMI TCP Connection(3)-10.255.47.10] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2019-06-13 10:52:14.430  INFO 8356 --- [RMI TCP Connection(3)-10.255.47.10] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2019-06-13 10:52:14.438  INFO 8356 --- [RMI TCP Connection(3)-10.255.47.10] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2019-06-13 10:52:21.015  INFO 8356 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/router
2019-06-13 10:52:21.015  INFO 8356 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/currentUser
2019-06-13 10:52:21.016  INFO 8356 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 10:52:21.016  INFO 8356 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 10:52:21.020  INFO 8356 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.LoginController.router
2019-06-13 10:52:21.020  INFO 8356 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.currentUser
2019-06-13 10:52:21.020  INFO 8356 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 10:52:21.020  INFO 8356 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 10:52:21.048  INFO 8356 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 33
2019-06-13 10:52:21.057  INFO 8356 --- [http-nio-8005-exec-4] .s.a.AnnotationAsyncExecutionInterceptor : More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-06-13 10:52:21.073  INFO 8356 --- [SimpleAsyncTaskExecutor-1] feign.RequestInterceptor                 : ------feign设置token111
2019-06-13 10:52:21.082  INFO 8356 --- [SimpleAsyncTaskExecutor-1] s.c.a.AnnotationConfigApplicationContext : Refreshing SpringClientFactory-api-base: startup date [Thu Jun 13 10:52:21 CST 2019]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6f95cd51
2019-06-13 10:52:21.097  INFO 8356 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 82
2019-06-13 10:52:21.098  INFO 8356 --- [SimpleAsyncTaskExecutor-2] feign.RequestInterceptor                 : ------feign设置token112
2019-06-13 10:52:21.198  INFO 8356 --- [SimpleAsyncTaskExecutor-1] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-06-13 10:52:21.587  INFO 8356 --- [SimpleAsyncTaskExecutor-1] c.netflix.config.ChainedDynamicProperty  : Flipping property: api-base.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-06-13 10:52:21.619  INFO 8356 --- [SimpleAsyncTaskExecutor-1] c.n.u.concurrent.ShutdownEnabledTimer    : Shutdown hook installed for: NFLoadBalancer-PingTimer-api-base
2019-06-13 10:52:21.625  INFO 8356 --- [SimpleAsyncTaskExecutor-1] c.netflix.loadbalancer.BaseLoadBalancer  : Client: api-base instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=api-base,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2019-06-13 10:52:21.632  INFO 8356 --- [SimpleAsyncTaskExecutor-1] c.n.l.DynamicServerListLoadBalancer      : Using serverListUpdater PollingServerListUpdater
2019-06-13 10:52:21.636  INFO 8356 --- [SimpleAsyncTaskExecutor-1] c.n.l.DynamicServerListLoadBalancer      : DynamicServerListLoadBalancer for client api-base initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=api-base,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@3de40c4b
2019-06-13 10:52:21.764 ERROR 8356 --- [SimpleAsyncTaskExecutor-2] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266) ~[na:1.8.0_181]
	at java.util.concurrent.FutureTask.run(FutureTask.java) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 15 common frames omitted

2019-06-13 10:52:21.764 ERROR 8356 --- [SimpleAsyncTaskExecutor-1] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266) ~[na:1.8.0_181]
	at java.util.concurrent.FutureTask.run(FutureTask.java) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 15 common frames omitted

2019-06-13 10:52:24.876  INFO 8356 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/roleId/2
2019-06-13 10:52:24.877  INFO 8356 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 10:52:24.877  INFO 8356 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.getTeacherList
2019-06-13 10:52:24.877  INFO 8356 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : [2, {page=1, limit=10, name=}]
2019-06-13 10:52:24.916  INFO 8356 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 40
2019-06-13 10:52:24.924  INFO 8356 --- [SimpleAsyncTaskExecutor-3] feign.RequestInterceptor                 : ------feign设置token119
2019-06-13 10:52:24.926 ERROR 8356 --- [SimpleAsyncTaskExecutor-3] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266) ~[na:1.8.0_181]
	at java.util.concurrent.FutureTask.run(FutureTask.java) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 15 common frames omitted

2019-06-13 10:52:26.291  INFO 8356 --- [http-nio-8005-exec-5] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/role
2019-06-13 10:52:26.292  INFO 8356 --- [http-nio-8005-exec-5] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 10:52:26.292  INFO 8356 --- [http-nio-8005-exec-5] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.RoleController.list
2019-06-13 10:52:26.292  INFO 8356 --- [http-nio-8005-exec-5] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : [{}]
2019-06-13 10:52:26.308  INFO 8356 --- [http-nio-8005-exec-5] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 17
2019-06-13 10:52:26.315  INFO 8356 --- [SimpleAsyncTaskExecutor-4] feign.RequestInterceptor                 : ------feign设置token120
2019-06-13 10:52:26.322 ERROR 8356 --- [SimpleAsyncTaskExecutor-4] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266) ~[na:1.8.0_181]
	at java.util.concurrent.FutureTask.run(FutureTask.java) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 15 common frames omitted

2019-06-13 10:52:31.605  INFO 8356 --- [http-nio-8005-exec-8] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user
2019-06-13 10:52:31.606  INFO 8356 --- [http-nio-8005-exec-8] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : PUT
2019-06-13 10:52:31.606  INFO 8356 --- [http-nio-8005-exec-8] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.update
2019-06-13 10:52:31.606  INFO 8356 --- [http-nio-8005-exec-8] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : [UserDTO{, id=2, username=teacher1, name=李四, password=null, email=teacher@example.com, phone=15890932709, status=null, createTime=null, modifyTime=null, sex=男}]
2019-06-13 10:54:07.332  INFO 8356 --- [MessageBroker-1] o.s.w.s.c.WebSocketMessageBrokerStats    : WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-06-13 10:54:07.445  INFO 8356 --- [http-nio-8005-exec-8] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 95840
2019-06-13 10:54:07.628  INFO 8356 --- [Thread-45] ConfigServletWebServerApplicationContext : Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6f95cd51: startup date [Thu Jun 13 10:51:54 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@ab7395e
2019-06-13 10:54:07.628  INFO 8356 --- [Thread-61] c.n.l.PollingServerListUpdater           : Shutting down the Executor Pool for PollingServerListUpdater
2019-06-13 10:54:07.631  INFO 8356 --- [Thread-45] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application api-admin with eureka with status DOWN
2019-06-13 10:54:07.631  WARN 8356 --- [Thread-45] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1560394447631, current=DOWN, previous=UP]
2019-06-13 10:54:07.631  INFO 8356 --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_API-ADMIN/Lenovo-PC:api-admin:8005: registering service...
2019-06-13 10:54:07.636  INFO 8356 --- [Thread-45] o.s.c.support.DefaultLifecycleProcessor  : Stopping beans in phase 2147483647
2019-06-13 10:54:07.637  INFO 8356 --- [Thread-45] o.s.m.s.b.SimpleBrokerMessageHandler     : Stopping...
2019-06-13 10:54:07.637  INFO 8356 --- [Thread-45] o.s.m.s.b.SimpleBrokerMessageHandler     : BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-06-13 10:54:07.637  INFO 8356 --- [Thread-45] o.s.m.s.b.SimpleBrokerMessageHandler     : Stopped.
2019-06-13 10:54:07.638  INFO 8356 --- [Thread-45] o.s.c.support.DefaultLifecycleProcessor  : Stopping beans in phase 0
2019-06-13 10:54:07.641  INFO 8356 --- [Thread-45] o.s.j.e.a.AnnotationMBeanExporter        : Unregistering JMX-exposed beans on shutdown
2019-06-13 10:54:07.652  INFO 8356 --- [Thread-45] o.s.j.e.a.AnnotationMBeanExporter        : Unregistering JMX-exposed beans
2019-06-13 10:54:07.687  INFO 8356 --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_API-ADMIN/Lenovo-PC:api-admin:8005 - registration status: 204
2019-06-13 10:54:07.696  INFO 8356 --- [Thread-45] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'brokerChannelExecutor'
2019-06-13 10:54:07.697  INFO 8356 --- [Thread-45] o.s.s.c.ThreadPoolTaskScheduler          : Shutting down ExecutorService 'messageBrokerTaskScheduler'
2019-06-13 10:54:07.710  INFO 8356 --- [Thread-45] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'clientOutboundChannelExecutor'
2019-06-13 10:54:07.710  INFO 8356 --- [Thread-45] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'clientInboundChannelExecutor'
2019-06-13 10:54:07.713  INFO 8356 --- [Thread-45] s.c.a.AnnotationConfigApplicationContext : Closing SpringClientFactory-api-base: startup date [Thu Jun 13 10:52:21 CST 2019]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6f95cd51
2019-06-13 10:54:07.718  INFO 8356 --- [Thread-45] c.n.u.concurrent.ShutdownEnabledTimer    : Shutdown hook removed for: NFLoadBalancer-PingTimer-api-base
2019-06-13 10:54:07.719  INFO 8356 --- [Thread-45] c.n.u.concurrent.ShutdownEnabledTimer    : Exception caught (might be ok if at shutdown)

java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.remove(ApplicationShutdownHooks.java:82) ~[na:1.8.0_181]
	at java.lang.Runtime.removeShutdownHook(Runtime.java:239) ~[na:1.8.0_181]
	at com.netflix.util.concurrent.ShutdownEnabledTimer.cancel(ShutdownEnabledTimer.java:70) ~[netflix-commons-util-0.3.0.jar:0.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.cancelPingTask(BaseLoadBalancer.java:613) [ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.BaseLoadBalancer.shutdown(BaseLoadBalancer.java:864) [ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.shutdown(DynamicServerListLoadBalancer.java:285) [ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.invokeCustomDestroyMethod(DisposableBeanAdapter.java:337) [spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:271) [spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571) [spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543) [spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954) [spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504) [spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961) [spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041) [spring-context-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017) [spring-context-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.close(AbstractApplicationContext.java:967) [spring-context-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.cloud.context.named.NamedContextFactory.destroy(NamedContextFactory.java:76) [spring-cloud-context-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at org.springframework.beans.factory.support.DisposableBeanAdapter.destroy(DisposableBeanAdapter.java:256) [spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroyBean(DefaultSingletonBeanRegistry.java:571) [spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingleton(DefaultSingletonBeanRegistry.java:543) [spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingleton(DefaultListableBeanFactory.java:954) [spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.destroySingletons(DefaultSingletonBeanRegistry.java:504) [spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.destroySingletons(DefaultListableBeanFactory.java:961) [spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.destroyBeans(AbstractApplicationContext.java:1041) [spring-context-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.doClose(AbstractApplicationContext.java:1017) [spring-context-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext$1.run(AbstractApplicationContext.java:937) [spring-context-5.0.8.RELEASE.jar:5.0.8.RELEASE]

2019-06-13 10:54:07.723  INFO 8356 --- [Thread-45] s.c.a.AnnotationConfigApplicationContext : Closing FeignContext-api-base: startup date [Thu Jun 13 10:52:03 CST 2019]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6f95cd51
2019-06-13 10:54:07.724  INFO 8356 --- [Thread-45] s.c.a.AnnotationConfigApplicationContext : Closing FeignContext-course: startup date [Thu Jun 13 10:52:02 CST 2019]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@6f95cd51
2019-06-13 10:54:08.934  INFO 8356 --- [Thread-45] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed
2019-06-13 10:54:08.936  INFO 8356 --- [Thread-45] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2019-06-13 10:54:08.944  WARN 8356 --- [Thread-45] .s.c.a.CommonAnnotationBeanPostProcessor : Invocation of destroy method failed on bean with name 'scopedTarget.eurekaClient': org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'eurekaInstanceConfigBean': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
2019-06-13 10:54:20.726  INFO 7080 --- [main] c.b.c.ClouddoAdminApplication            : No active profile set, falling back to default profiles: default
2019-06-13 10:54:20.744  INFO 7080 --- [main] ConfigServletWebServerApplicationContext : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3da30852: startup date [Thu Jun 13 10:54:20 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7bedc48a
2019-06-13 10:54:22.264  INFO 7080 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-13 10:54:22.780  INFO 7080 --- [main] o.s.cloud.context.scope.GenericScope     : BeanFactory id=1c774fab-2f18-3dff-8fab-5ac3d64963da
2019-06-13 10:54:22.813  INFO 7080 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-06-13 10:54:23.029  INFO 7080 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ad53637a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 10:54:23.335  INFO 7080 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.bootdo.clouddoadmin.config.RedisConfig$$EnhancerBySpringCGLIB$$d000accb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 10:54:23.349  INFO 7080 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.bootdo.clouddoadmin.config.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 10:54:23.426  INFO 7080 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$c96d6677] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 10:54:23.938  INFO 7080 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8005 (http)
2019-06-13 10:54:23.963  INFO 7080 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2019-06-13 10:54:23.963  INFO 7080 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.32
2019-06-13 10:54:23.969  INFO 7080 --- [localhost-startStop-1] o.a.catalina.core.AprLifecycleListener   : The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_181\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;C:;C:\Program Files\Java\jdk1.8.0_181\bin;D:\myApps\apache-maven-3.6.0\bin;C:\Program Files\Java\jdk1.8.0_181\jre\bin;C:\Program Files\Java\jdk1.8.0_181\bin ;C:\Program Files\TortoiseGit\bin;C:\windows\system32;C:\windows;C:\windows\system32\wbem;D:\StudyTools\XAMPP\mysql\bin;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;D:\系统工具\Git\cmd;D:\StudyTools\NodeJs\;D:\StudyTools\Elang\erl10.0.1\bin;D:\StudyTools\RabbitMQ Server\rabbitmq_server-3.7.7\sbin;;D:\StudyTools\DockerToolbox;D:\StudyTools\NodeJs\node_global;D:\StudyTools\WebStorm 2019.1.2\bin;;.]
2019-06-13 10:54:24.140  INFO 7080 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2019-06-13 10:54:24.141  INFO 7080 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 3397 ms
2019-06-13 10:54:24.169  INFO 7080 --- [localhost-startStop-1] c.b.c.config.DruidConfiguration          : init Druid Servlet Configuration 
2019-06-13 10:54:24.516  WARN 7080 --- [localhost-startStop-1] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2019-06-13 10:54:24.516  INFO 7080 --- [localhost-startStop-1] c.n.c.sources.URLConfigurationSource     : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-06-13 10:54:24.525  INFO 7080 --- [localhost-startStop-1] c.netflix.config.DynamicPropertyFactory  : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@5455c3d4
2019-06-13 10:54:26.842  INFO 7080 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2019-06-13 10:54:26.843  INFO 7080 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'webMvcMetricsFilter' to: [/*]
2019-06-13 10:54:26.843  INFO 7080 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-06-13 10:54:26.843  INFO 7080 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-06-13 10:54:26.843  INFO 7080 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2019-06-13 10:54:26.844  INFO 7080 --- [localhost-startStop-1] .s.DelegatingFilterProxyRegistrationBean : Mapping filter: 'springSecurityFilterChain' to: [/*]
2019-06-13 10:54:26.845  INFO 7080 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpTraceFilter' to: [/*]
2019-06-13 10:54:26.845  INFO 7080 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'webStatFilter' to urls: [/*]
2019-06-13 10:54:26.845  INFO 7080 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Servlet statViewServlet mapped to [/druid/*]
2019-06-13 10:54:26.846  INFO 7080 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Servlet dispatcherServlet mapped to [/]
2019-06-13 10:54:27.987  INFO 7080 --- [main] s.c.a.AnnotationConfigApplicationContext : Refreshing FeignContext-course: startup date [Thu Jun 13 10:54:27 CST 2019]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3da30852
2019-06-13 10:54:28.008  INFO 7080 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-06-13 10:54:28.221  INFO 7080 --- [main] s.c.a.AnnotationConfigApplicationContext : Refreshing FeignContext-api-base: startup date [Thu Jun 13 10:54:28 CST 2019]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3da30852
2019-06-13 10:54:28.237  INFO 7080 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-06-13 10:54:28.767  INFO 7080 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/authorize]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.security.oauth2.provider.endpoint.AuthorizationEndpoint.authorize(java.util.Map<java.lang.String, java.lang.Object>,java.util.Map<java.lang.String, java.lang.String>,org.springframework.web.bind.support.SessionStatus,java.security.Principal)
2019-06-13 10:54:28.769  INFO 7080 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/authorize],methods=[POST],params=[user_oauth_approval]}" onto public org.springframework.web.servlet.View org.springframework.security.oauth2.provider.endpoint.AuthorizationEndpoint.approveOrDeny(java.util.Map<java.lang.String, java.lang.String>,java.util.Map<java.lang.String, ?>,org.springframework.web.bind.support.SessionStatus,java.security.Principal)
2019-06-13 10:54:28.770  INFO 7080 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/token],methods=[GET]}" onto public org.springframework.http.ResponseEntity<org.springframework.security.oauth2.common.OAuth2AccessToken> org.springframework.security.oauth2.provider.endpoint.TokenEndpoint.getAccessToken(java.security.Principal,java.util.Map<java.lang.String, java.lang.String>) throws org.springframework.web.HttpRequestMethodNotSupportedException
2019-06-13 10:54:28.770  INFO 7080 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/token],methods=[POST]}" onto public org.springframework.http.ResponseEntity<org.springframework.security.oauth2.common.OAuth2AccessToken> org.springframework.security.oauth2.provider.endpoint.TokenEndpoint.postAccessToken(java.security.Principal,java.util.Map<java.lang.String, java.lang.String>) throws org.springframework.web.HttpRequestMethodNotSupportedException
2019-06-13 10:54:28.771  INFO 7080 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/check_token]}" onto public java.util.Map<java.lang.String, ?> org.springframework.security.oauth2.provider.endpoint.CheckTokenEndpoint.checkToken(java.lang.String)
2019-06-13 10:54:28.772  INFO 7080 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/confirm_access]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.security.oauth2.provider.endpoint.WhitelabelApprovalEndpoint.getAccessConfirmation(java.util.Map<java.lang.String, java.lang.Object>,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-06-13 10:54:28.772  INFO 7080 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/error]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.security.oauth2.provider.endpoint.WhitelabelErrorEndpoint.handleError(javax.servlet.http.HttpServletRequest)
2019-06-13 10:54:28.858  INFO 7080 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-06-13 10:54:28.858  INFO 7080 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/remove],methods=[POST]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.DeptController.remove(java.lang.Long)
2019-06-13 10:54:28.859  INFO 7080 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/batchRemove],methods=[POST]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.DeptController.remove(java.lang.Long[])
2019-06-13 10:54:28.859  INFO 7080 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/update]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.DeptController.update(com.bootdo.clouddoadmin.domain.DeptDO)
2019-06-13 10:54:28.860  INFO 7080 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/list],methods=[GET]}" onto public java.util.List<com.bootdo.clouddoadmin.domain.DeptDO> com.bootdo.clouddoadmin.controller.DeptController.list()
2019-06-13 10:54:28.860  INFO 7080 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/save],methods=[POST]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.DeptController.save(com.bootdo.clouddoadmin.domain.DeptDO)
2019-06-13 10:54:28.861  INFO 7080 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/tree],methods=[GET]}" onto public com.bootdo.clouddoadmin.domain.Tree<com.bootdo.clouddoadmin.domain.DeptDO> com.bootdo.clouddoadmin.controller.DeptController.tree()
2019-06-13 10:54:28.861  INFO 7080 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.DeptController.treeView()
2019-06-13 10:54:28.862  INFO 7080 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.DeptController.dept()
2019-06-13 10:54:28.863  INFO 7080 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/router],methods=[GET]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.LoginController.router()
2019-06-13 10:54:28.863  INFO 7080 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/logout]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.LoginController.logout(java.lang.String)
2019-06-13 10:54:28.868  INFO 7080 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu],methods=[DELETE]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.remove(java.lang.Long)
2019-06-13 10:54:28.868  INFO 7080 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/{id}],methods=[GET]}" onto com.bootdo.clouddoadmin.domain.MenuDO com.bootdo.clouddoadmin.controller.MenuController.get(java.lang.Long)
2019-06-13 10:54:28.869  INFO 7080 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu],methods=[PUT]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.update(com.bootdo.clouddoadmin.domain.MenuDO)
2019-06-13 10:54:28.869  INFO 7080 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu],methods=[GET]}" onto java.util.List<com.bootdo.clouddoadmin.domain.Tree<com.bootdo.clouddoadmin.domain.MenuDO>> com.bootdo.clouddoadmin.controller.MenuController.list()
2019-06-13 10:54:28.869  INFO 7080 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/list],methods=[GET]}" onto java.util.List<com.bootdo.clouddoadmin.domain.MenuDO> com.bootdo.clouddoadmin.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-13 10:54:28.870  INFO 7080 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu],methods=[POST]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.save(com.bootdo.clouddoadmin.domain.MenuDO)
2019-06-13 10:54:28.870  INFO 7080 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/tree],methods=[GET]}" onto com.bootdo.clouddoadmin.domain.Tree<com.bootdo.clouddoadmin.domain.MenuDO> com.bootdo.clouddoadmin.controller.MenuController.tree()
2019-06-13 10:54:28.870  INFO 7080 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/clearCache],methods=[GET]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.clearCache()
2019-06-13 10:54:28.871  INFO 7080 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/userMenus],methods=[GET]}" onto java.util.List<com.bootdo.clouddocommon.dto.MenuDTO> com.bootdo.clouddoadmin.controller.MenuController.userMenus()
2019-06-13 10:54:28.872  INFO 7080 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/roleId],methods=[GET]}" onto java.util.List<java.lang.Long> com.bootdo.clouddoadmin.controller.MenuController.menuIdsByRoleId(java.lang.Long)
2019-06-13 10:54:28.872  INFO 7080 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/currentUserMenus],methods=[GET]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.currentUserMenus()
2019-06-13 10:54:28.875  INFO 7080 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role],methods=[PUT]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.RoleController.update(com.bootdo.clouddoadmin.domain.RoleDO)
2019-06-13 10:54:28.876  INFO 7080 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role],methods=[GET]}" onto com.bootdo.clouddocommon.utils.PageUtils com.bootdo.clouddoadmin.controller.RoleController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-13 10:54:28.876  INFO 7080 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role],methods=[POST]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.RoleController.save(com.bootdo.clouddoadmin.domain.RoleDO)
2019-06-13 10:54:28.876  INFO 7080 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/userId/{userId}],methods=[GET]}" onto java.util.List<java.lang.Long> com.bootdo.clouddoadmin.controller.RoleController.roleIdByUserId(java.lang.Long)
2019-06-13 10:54:28.877  INFO 7080 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.TestController.test()
2019-06-13 10:54:28.877  INFO 7080 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test1],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.TestController.test1()
2019-06-13 10:54:28.879  INFO 7080 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user],methods=[DELETE]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.remove(java.lang.Long)
2019-06-13 10:54:28.879  INFO 7080 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.get(java.lang.Long)
2019-06-13 10:54:28.885  INFO 7080 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user],methods=[PUT]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.update(com.bootdo.clouddoadmin.dto.UserDTO)
2019-06-13 10:54:28.886  INFO 7080 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user],methods=[POST]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.save(com.bootdo.clouddoadmin.domain.UserDO)
2019-06-13 10:54:28.886  INFO 7080 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/batchRemove],methods=[POST]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.batchRemove(java.lang.Long[])
2019-06-13 10:54:28.886  INFO 7080 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/tokenUser],methods=[GET]}" onto public java.security.Principal com.bootdo.clouddoadmin.controller.UserController.user(java.security.Principal)
2019-06-13 10:54:28.886  INFO 7080 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/currentUser],methods=[GET]}" onto public com.bootdo.clouddocommon.dto.LoginUserDTO com.bootdo.clouddoadmin.controller.UserController.currentUser()
2019-06-13 10:54:28.887  INFO 7080 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/exits],methods=[POST]}" onto boolean com.bootdo.clouddoadmin.controller.UserController.exits(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-13 10:54:28.887  INFO 7080 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/roleId/{roleId}],methods=[GET]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.getTeacherList(java.lang.Long,java.util.Map<java.lang.String, java.lang.Object>)
2019-06-13 10:54:28.890  INFO 7080 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-06-13 10:54:28.891  INFO 7080 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-06-13 10:54:28.892  INFO 7080 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-06-13 10:54:28.896  INFO 7080 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-06-13 10:54:28.897  INFO 7080 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-13 10:54:29.059  INFO 7080 --- [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 2 endpoint(s) beneath base path '/actuator'
2019-06-13 10:54:29.081  INFO 7080 --- [main] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-06-13 10:54:29.083  INFO 7080 --- [main] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-06-13 10:54:29.084  INFO 7080 --- [main] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-13 10:54:29.916  INFO 7080 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4a453f8d, org.springframework.security.web.context.SecurityContextPersistenceFilter@226e07e7, org.springframework.security.web.header.HeaderWriterFilter@6dbbdf92, org.springframework.security.web.authentication.logout.LogoutFilter@1f48fa72, org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter@246df37b, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@78e387d6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@9880a15, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2c1ea7be, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@60a6840c, org.springframework.security.web.session.SessionManagementFilter@62b786dc, org.springframework.security.web.access.ExceptionTranslationFilter@4d065e1a, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7827d7b]
2019-06-13 10:54:29.940  INFO 7080 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: org.springframework.security.oauth2.config.annotation.web.configuration.ResourceServerConfiguration$NotOAuthRequestMatcher@4152bd0f, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@10d905c1, org.springframework.security.web.context.SecurityContextPersistenceFilter@4fedf908, org.springframework.security.web.header.HeaderWriterFilter@75805562, org.springframework.security.web.authentication.logout.LogoutFilter@7b3c0ecb, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@40c28b0d, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@4345fd45, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5341641d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@241d1052, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@e4b54d3, org.springframework.security.web.session.SessionManagementFilter@13d984ee, org.springframework.security.web.access.ExceptionTranslationFilter@2a16d4dc, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2976ef56]
2019-06-13 10:54:29.986  INFO 7080 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5f3ddc86, org.springframework.security.web.context.SecurityContextPersistenceFilter@52d63b7e, org.springframework.security.web.header.HeaderWriterFilter@6bf0f70a, org.springframework.security.web.csrf.CsrfFilter@62ab5e63, org.springframework.security.web.authentication.logout.LogoutFilter@43ab0659, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@4491eaeb, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@4c41a177, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@71262020, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@74830d73, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1827fc4e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@78e043e4, org.springframework.security.web.session.SessionManagementFilter@5310e451, org.springframework.security.web.access.ExceptionTranslationFilter@5e8f0f98, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6ac9b66b]
2019-06-13 10:54:30.059  INFO 7080 --- [main] pertySourcedRequestMappingHandlerMapping : Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2019-06-13 10:54:30.331  INFO 7080 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService  'clientInboundChannelExecutor'
2019-06-13 10:54:30.353  INFO 7080 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-06-13 10:54:30.380  INFO 7080 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-06-13 10:54:30.431  INFO 7080 --- [main] o.s.w.s.s.s.WebSocketHandlerMapping      : Mapped URL path [/endpoint/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-06-13 10:54:30.457  INFO 7080 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService  'brokerChannelExecutor'
2019-06-13 10:54:30.684  WARN 7080 --- [main] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2019-06-13 10:54:30.684  INFO 7080 --- [main] c.n.c.sources.URLConfigurationSource     : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-06-13 10:54:30.815  INFO 7080 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-13 10:54:30.970  INFO 7080 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3da30852: startup date [Thu Jun 13 10:54:20 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7bedc48a
2019-06-13 10:54:31.056  INFO 7080 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-13 10:54:31.057  INFO 7080 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-13 10:54:31.085  INFO 7080 --- [main] .m.m.a.ExceptionHandlerExceptionResolver : Detected @ExceptionHandler methods in exceptionAdviceHandler
2019-06-13 10:54:32.173  INFO 7080 --- [main] o.s.ui.freemarker.SpringTemplateLoader   : SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3da30852: startup date [Thu Jun 13 10:54:20 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7bedc48a] and template loader path [classpath:/templates/]
2019-06-13 10:54:32.174  INFO 7080 --- [main] o.s.w.s.v.f.FreeMarkerConfigurer         : ClassTemplateLoader for Spring macros added to FreeMarker configuration
2019-06-13 10:54:32.717  INFO 7080 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2019-06-13 10:54:32.719  INFO 7080 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2019-06-13 10:54:32.731  INFO 7080 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'environmentManager' has been autodetected for JMX exposure
2019-06-13 10:54:32.734  INFO 7080 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'refreshScope' has been autodetected for JMX exposure
2019-06-13 10:54:32.735  INFO 7080 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2019-06-13 10:54:32.739  INFO 7080 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2019-06-13 10:54:32.750  INFO 7080 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2019-06-13 10:54:32.765  INFO 7080 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=3da30852,type=ConfigurationPropertiesRebinder]
2019-06-13 10:54:32.775  INFO 7080 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-06-13 10:54:32.786  INFO 7080 --- [main] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase 0
2019-06-13 10:54:32.805  INFO 7080 --- [main] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2019-06-13 10:54:32.838  INFO 7080 --- [main] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2019-06-13 10:54:33.231  INFO 7080 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using JSON encoding codec LegacyJacksonJson
2019-06-13 10:54:33.232  INFO 7080 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using JSON decoding codec LegacyJacksonJson
2019-06-13 10:54:33.338  INFO 7080 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using XML encoding codec XStreamXml
2019-06-13 10:54:33.338  INFO 7080 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using XML decoding codec XStreamXml
2019-06-13 10:54:33.534  INFO 7080 --- [main] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 10:54:33.748  INFO 7080 --- [main] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2019-06-13 10:54:33.748  INFO 7080 --- [main] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2019-06-13 10:54:33.748  INFO 7080 --- [main] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2019-06-13 10:54:33.749  INFO 7080 --- [main] com.netflix.discovery.DiscoveryClient    : Application is null : false
2019-06-13 10:54:33.749  INFO 7080 --- [main] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2019-06-13 10:54:33.749  INFO 7080 --- [main] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2019-06-13 10:54:33.749  INFO 7080 --- [main] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2019-06-13 10:54:33.965  INFO 7080 --- [main] com.netflix.discovery.DiscoveryClient    : The response status is 200
2019-06-13 10:54:33.967  INFO 7080 --- [main] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2019-06-13 10:54:33.970  INFO 7080 --- [main] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2019-06-13 10:54:33.973  INFO 7080 --- [main] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1560394473972 with initial instances count: 2
2019-06-13 10:54:33.992  INFO 7080 --- [main] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application api-admin with eureka with status UP
2019-06-13 10:54:33.992  INFO 7080 --- [main] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1560394473992, current=UP, previous=STARTING]
2019-06-13 10:54:34.024  INFO 7080 --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_API-ADMIN/Lenovo-PC:api-admin:8005: registering service...
2019-06-13 10:54:34.028  INFO 7080 --- [main] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase 2147483647
2019-06-13 10:54:34.029  INFO 7080 --- [main] d.s.w.p.DocumentationPluginsBootstrapper : Context refreshed
2019-06-13 10:54:34.057  INFO 7080 --- [main] d.s.w.p.DocumentationPluginsBootstrapper : Found 1 custom documentation plugin(s)
2019-06-13 10:54:34.068  INFO 7080 --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_API-ADMIN/Lenovo-PC:api-admin:8005 - registration status: 204
2019-06-13 10:54:34.125  INFO 7080 --- [main] s.d.s.w.s.ApiListingReferenceScanner     : Scanning for api listing references
2019-06-13 10:54:34.267  INFO 7080 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: removeUsingPOST_1
2019-06-13 10:54:34.343  INFO 7080 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: listUsingGET_1
2019-06-13 10:54:34.348  INFO 7080 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: listUsingGET_2
2019-06-13 10:54:34.355  INFO 7080 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: saveUsingPOST_1
2019-06-13 10:54:34.358  INFO 7080 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: treeUsingGET_1
2019-06-13 10:54:34.361  INFO 7080 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: updateUsingPUT_1
2019-06-13 10:54:34.367  INFO 7080 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: listUsingGET_3
2019-06-13 10:54:34.378  INFO 7080 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: saveUsingPOST_2
2019-06-13 10:54:34.380  INFO 7080 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: updateUsingPUT_2
2019-06-13 10:54:34.392  INFO 7080 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: getUsingGET_1
2019-06-13 10:54:34.395  INFO 7080 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: removeUsingDELETE_1
2019-06-13 10:54:34.400  INFO 7080 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: saveUsingPOST_3
2019-06-13 10:54:34.407  INFO 7080 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: updateUsingPUT_3
2019-06-13 10:54:34.424  INFO 7080 --- [main] o.s.m.s.b.SimpleBrokerMessageHandler     : Starting...
2019-06-13 10:54:34.424  INFO 7080 --- [main] o.s.m.s.b.SimpleBrokerMessageHandler     : BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-06-13 10:54:34.425  INFO 7080 --- [main] o.s.m.s.b.SimpleBrokerMessageHandler     : Started.
2019-06-13 10:54:34.476  INFO 7080 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8005 (http) with context path ''
2019-06-13 10:54:34.479  INFO 7080 --- [main] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 8005
2019-06-13 10:54:34.482  INFO 7080 --- [main] c.b.c.ClouddoAdminApplication            : Started ClouddoAdminApplication in 16.514 seconds (JVM running for 17.905)
2019-06-13 10:54:34.991  INFO 7080 --- [RMI TCP Connection(2)-10.255.47.10] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-06-13 10:54:34.991  INFO 7080 --- [RMI TCP Connection(2)-10.255.47.10] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2019-06-13 10:54:35.028  INFO 7080 --- [RMI TCP Connection(2)-10.255.47.10] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 36 ms
2019-06-13 10:54:35.253  INFO 7080 --- [RMI TCP Connection(1)-10.255.47.10] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2019-06-13 10:54:35.774  INFO 7080 --- [RMI TCP Connection(1)-10.255.47.10] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2019-06-13 10:54:35.777  INFO 7080 --- [RMI TCP Connection(1)-10.255.47.10] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2019-06-13 10:54:49.179  INFO 7080 --- [http-nio-8005-exec-1] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/router
2019-06-13 10:54:49.179  INFO 7080 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/roleId/2
2019-06-13 10:54:49.180  INFO 7080 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 10:54:49.179  INFO 7080 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/currentUser
2019-06-13 10:54:49.180  INFO 7080 --- [http-nio-8005-exec-1] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 10:54:49.181  INFO 7080 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 10:54:49.183  INFO 7080 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.currentUser
2019-06-13 10:54:49.183  INFO 7080 --- [http-nio-8005-exec-1] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.LoginController.router
2019-06-13 10:54:49.183  INFO 7080 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.getTeacherList
2019-06-13 10:54:49.184  INFO 7080 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 10:54:49.184  INFO 7080 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : [2, {page=1, limit=10, name=}]
2019-06-13 10:54:49.184  INFO 7080 --- [http-nio-8005-exec-1] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 10:54:49.217  INFO 7080 --- [http-nio-8005-exec-1] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 38
2019-06-13 10:54:49.224  INFO 7080 --- [http-nio-8005-exec-1] .s.a.AnnotationAsyncExecutionInterceptor : More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-06-13 10:54:49.243  INFO 7080 --- [SimpleAsyncTaskExecutor-1] feign.RequestInterceptor                 : ------feign设置token104
2019-06-13 10:54:49.250  INFO 7080 --- [SimpleAsyncTaskExecutor-1] s.c.a.AnnotationConfigApplicationContext : Refreshing SpringClientFactory-api-base: startup date [Thu Jun 13 10:54:49 CST 2019]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@3da30852
2019-06-13 10:54:49.322  INFO 7080 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 144
2019-06-13 10:54:49.324  INFO 7080 --- [SimpleAsyncTaskExecutor-2] feign.RequestInterceptor                 : ------feign设置token105
2019-06-13 10:54:49.375  INFO 7080 --- [SimpleAsyncTaskExecutor-1] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-06-13 10:54:49.450  INFO 7080 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 271
2019-06-13 10:54:49.454  INFO 7080 --- [SimpleAsyncTaskExecutor-3] feign.RequestInterceptor                 : ------feign设置token106
2019-06-13 10:54:49.751  INFO 7080 --- [SimpleAsyncTaskExecutor-1] c.netflix.config.ChainedDynamicProperty  : Flipping property: api-base.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-06-13 10:54:49.779  INFO 7080 --- [SimpleAsyncTaskExecutor-1] c.n.u.concurrent.ShutdownEnabledTimer    : Shutdown hook installed for: NFLoadBalancer-PingTimer-api-base
2019-06-13 10:54:49.784  INFO 7080 --- [SimpleAsyncTaskExecutor-1] c.netflix.loadbalancer.BaseLoadBalancer  : Client: api-base instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=api-base,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2019-06-13 10:54:49.789  INFO 7080 --- [SimpleAsyncTaskExecutor-1] c.n.l.DynamicServerListLoadBalancer      : Using serverListUpdater PollingServerListUpdater
2019-06-13 10:54:49.794  INFO 7080 --- [SimpleAsyncTaskExecutor-1] c.n.l.DynamicServerListLoadBalancer      : DynamicServerListLoadBalancer for client api-base initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=api-base,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@28cabea8
2019-06-13 10:54:49.897 ERROR 7080 --- [SimpleAsyncTaskExecutor-2] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 10:54:49.897 ERROR 7080 --- [SimpleAsyncTaskExecutor-3] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 10:54:49.897 ERROR 7080 --- [SimpleAsyncTaskExecutor-1] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 10:55:10.570  INFO 7080 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/currentUser
2019-06-13 10:55:10.570  INFO 7080 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 10:55:10.570  INFO 7080 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.currentUser
2019-06-13 10:55:10.570  INFO 7080 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 10:55:10.583  INFO 7080 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 13
2019-06-13 10:55:10.588  INFO 7080 --- [SimpleAsyncTaskExecutor-4] feign.RequestInterceptor                 : ------feign设置token115
2019-06-13 10:55:10.596 ERROR 7080 --- [SimpleAsyncTaskExecutor-4] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 10:55:10.606  INFO 7080 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/roleId/2
2019-06-13 10:55:10.606  INFO 7080 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 10:55:10.606  INFO 7080 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.getTeacherList
2019-06-13 10:55:10.607  INFO 7080 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : [2, {page=1, limit=10, name=}]
2019-06-13 10:55:10.618  INFO 7080 --- [http-nio-8005-exec-5] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/router
2019-06-13 10:55:10.618  INFO 7080 --- [http-nio-8005-exec-5] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 10:55:10.619  INFO 7080 --- [http-nio-8005-exec-5] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.LoginController.router
2019-06-13 10:55:10.619  INFO 7080 --- [http-nio-8005-exec-5] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 10:55:10.621  INFO 7080 --- [http-nio-8005-exec-5] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 3
2019-06-13 10:55:10.623  INFO 7080 --- [SimpleAsyncTaskExecutor-5] feign.RequestInterceptor                 : ------feign设置token116
2019-06-13 10:55:10.633 ERROR 7080 --- [SimpleAsyncTaskExecutor-5] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 10:55:10.637  INFO 7080 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 31
2019-06-13 10:55:10.638  INFO 7080 --- [SimpleAsyncTaskExecutor-6] feign.RequestInterceptor                 : ------feign设置token117
2019-06-13 10:55:10.648 ERROR 7080 --- [SimpleAsyncTaskExecutor-6] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 10:55:12.391  INFO 7080 --- [http-nio-8005-exec-8] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/role
2019-06-13 10:55:12.392  INFO 7080 --- [http-nio-8005-exec-8] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 10:55:12.392  INFO 7080 --- [http-nio-8005-exec-8] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.RoleController.list
2019-06-13 10:55:12.392  INFO 7080 --- [http-nio-8005-exec-8] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : [{}]
2019-06-13 10:55:12.433  INFO 7080 --- [http-nio-8005-exec-8] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 42
2019-06-13 10:55:12.438  INFO 7080 --- [SimpleAsyncTaskExecutor-7] feign.RequestInterceptor                 : ------feign设置token118
2019-06-13 10:55:12.450 ERROR 7080 --- [SimpleAsyncTaskExecutor-7] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 10:55:16.656  INFO 7080 --- [http-nio-8005-exec-10] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user
2019-06-13 10:55:16.657  INFO 7080 --- [http-nio-8005-exec-10] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : PUT
2019-06-13 10:55:16.657  INFO 7080 --- [http-nio-8005-exec-10] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.update
2019-06-13 10:55:16.657  INFO 7080 --- [http-nio-8005-exec-10] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : [UserDTO{, id=2, username=teacher1, name=王五, password=null, email=teacher@example.com, phone=15890932709, status=null, createTime=null, modifyTime=null, sex=男}]
2019-06-13 10:55:16.740  INFO 7080 --- [http-nio-8005-exec-10] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 84
2019-06-13 10:55:16.852  INFO 7080 --- [http-nio-8005-exec-9] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/roleId/2
2019-06-13 10:55:16.853  INFO 7080 --- [http-nio-8005-exec-9] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 10:55:16.853  INFO 7080 --- [http-nio-8005-exec-9] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.getTeacherList
2019-06-13 10:55:16.853  INFO 7080 --- [http-nio-8005-exec-9] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : [2, {page=1, limit=10, name=}]
2019-06-13 10:55:16.871  INFO 7080 --- [http-nio-8005-exec-9] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 19
2019-06-13 10:55:16.881  INFO 7080 --- [SimpleAsyncTaskExecutor-8] feign.RequestInterceptor                 : ------feign设置token119
2019-06-13 10:55:16.884 ERROR 7080 --- [SimpleAsyncTaskExecutor-8] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 10:55:30.455  INFO 7080 --- [MessageBroker-1] o.s.w.s.c.WebSocketMessageBrokerStats    : WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-06-13 10:58:01.419  INFO 7080 --- [http-nio-8005-exec-5] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/currentUser
2019-06-13 10:58:01.419  INFO 7080 --- [http-nio-8005-exec-5] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 10:58:01.419  INFO 7080 --- [http-nio-8005-exec-5] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.currentUser
2019-06-13 10:58:01.419  INFO 7080 --- [http-nio-8005-exec-5] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 10:58:01.426  INFO 7080 --- [http-nio-8005-exec-5] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 7
2019-06-13 10:58:01.427  INFO 7080 --- [SimpleAsyncTaskExecutor-9] feign.RequestInterceptor                 : ------feign设置token121
2019-06-13 10:58:01.431 ERROR 7080 --- [SimpleAsyncTaskExecutor-9] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 10:58:01.442  INFO 7080 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/router
2019-06-13 10:58:01.443  INFO 7080 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 10:58:01.443  INFO 7080 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.LoginController.router
2019-06-13 10:58:01.443  INFO 7080 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 10:58:01.444  INFO 7080 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 2
2019-06-13 10:58:01.446  INFO 7080 --- [SimpleAsyncTaskExecutor-10] feign.RequestInterceptor                 : ------feign设置token122
2019-06-13 10:58:01.450 ERROR 7080 --- [SimpleAsyncTaskExecutor-10] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 10:58:03.486  INFO 7080 --- [http-nio-8005-exec-7] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/roleId/2
2019-06-13 10:58:03.487  INFO 7080 --- [http-nio-8005-exec-7] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 10:58:03.487  INFO 7080 --- [http-nio-8005-exec-7] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.getTeacherList
2019-06-13 10:58:03.487  INFO 7080 --- [http-nio-8005-exec-7] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : [2, {page=1, limit=10, name=}]
2019-06-13 10:58:03.492  INFO 7080 --- [http-nio-8005-exec-7] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 6
2019-06-13 10:58:03.494  INFO 7080 --- [SimpleAsyncTaskExecutor-11] feign.RequestInterceptor                 : ------feign设置token123
2019-06-13 10:58:03.497 ERROR 7080 --- [SimpleAsyncTaskExecutor-11] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 10:59:33.751  INFO 7080 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 11:04:33.753  INFO 7080 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 11:09:33.757  INFO 7080 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 11:14:33.759  INFO 7080 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 11:19:33.761  INFO 7080 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 11:24:33.762  INFO 7080 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 11:25:30.455  INFO 7080 --- [MessageBroker-1] o.s.w.s.c.WebSocketMessageBrokerStats    : WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 2, active threads = 1, queued tasks = 0, completed tasks = 1]
2019-06-13 11:29:33.763  INFO 7080 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 11:34:33.765  INFO 7080 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 11:39:33.766  INFO 7080 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 11:44:33.766  INFO 7080 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 11:49:33.768  INFO 7080 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 11:54:33.770  INFO 7080 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 11:55:30.455  INFO 7080 --- [MessageBroker-2] o.s.w.s.c.WebSocketMessageBrokerStats    : WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 3, active threads = 1, queued tasks = 0, completed tasks = 2]
2019-06-13 11:59:33.770  INFO 7080 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 12:04:33.771  INFO 7080 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 12:09:33.773  INFO 7080 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 12:14:33.773  INFO 7080 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 12:19:33.774  INFO 7080 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 12:24:33.344  INFO 7080 --- [http-nio-8005-exec-10] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/router
2019-06-13 12:24:33.383  INFO 7080 --- [http-nio-8005-exec-10] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 12:24:33.383  INFO 7080 --- [http-nio-8005-exec-10] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.LoginController.router
2019-06-13 12:24:33.384  INFO 7080 --- [http-nio-8005-exec-10] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 12:24:33.421  INFO 7080 --- [http-nio-8005-exec-9] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/roleId/2
2019-06-13 12:24:33.442  INFO 7080 --- [http-nio-8005-exec-9] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 12:24:33.443  INFO 7080 --- [http-nio-8005-exec-9] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.getTeacherList
2019-06-13 12:24:33.443  INFO 7080 --- [http-nio-8005-exec-9] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : [2, {page=1, limit=10, name=}]
2019-06-13 12:24:33.421  INFO 7080 --- [http-nio-8005-exec-1] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/currentUser
2019-06-13 12:24:33.454  INFO 7080 --- [http-nio-8005-exec-1] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 12:24:33.454  INFO 7080 --- [http-nio-8005-exec-1] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.currentUser
2019-06-13 12:24:33.454  INFO 7080 --- [http-nio-8005-exec-1] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 12:24:33.775  INFO 7080 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 12:24:37.176  INFO 7080 --- [http-nio-8005-exec-10] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 3866
2019-06-13 12:24:38.636  INFO 7080 --- [SimpleAsyncTaskExecutor-12] feign.RequestInterceptor                 : ------feign设置token129
2019-06-13 12:24:40.566 ERROR 7080 --- [SimpleAsyncTaskExecutor-12] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 12:24:48.073  INFO 7080 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/currentUser
2019-06-13 12:24:48.074  INFO 7080 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 12:24:48.074  INFO 7080 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.currentUser
2019-06-13 12:24:48.075  INFO 7080 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 12:24:48.896  INFO 7080 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 823
2019-06-13 12:24:48.898  INFO 7080 --- [SimpleAsyncTaskExecutor-13] feign.RequestInterceptor                 : ------feign设置token130
2019-06-13 12:24:48.899 ERROR 7080 --- [SimpleAsyncTaskExecutor-13] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 12:24:49.045  INFO 7080 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/router
2019-06-13 12:24:49.045  INFO 7080 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 12:24:49.137  INFO 7080 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.LoginController.router
2019-06-13 12:24:49.137  INFO 7080 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 12:24:49.210  INFO 7080 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 166
2019-06-13 12:24:49.224  INFO 7080 --- [SimpleAsyncTaskExecutor-14] feign.RequestInterceptor                 : ------feign设置token131
2019-06-13 12:24:49.226 ERROR 7080 --- [SimpleAsyncTaskExecutor-14] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 12:25:00.123  INFO 7080 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/currentUser
2019-06-13 12:25:00.123  INFO 7080 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 12:25:00.124  INFO 7080 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.currentUser
2019-06-13 12:25:00.124  INFO 7080 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 12:25:00.145  INFO 7080 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 23
2019-06-13 12:25:00.147  INFO 7080 --- [http-nio-8005-exec-5] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/router
2019-06-13 12:25:00.147  INFO 7080 --- [http-nio-8005-exec-5] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 12:25:00.148  INFO 7080 --- [http-nio-8005-exec-5] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.LoginController.router
2019-06-13 12:25:00.148  INFO 7080 --- [http-nio-8005-exec-5] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 12:25:00.196  INFO 7080 --- [SimpleAsyncTaskExecutor-15] feign.RequestInterceptor                 : ------feign设置token132
2019-06-13 12:25:00.199 ERROR 7080 --- [SimpleAsyncTaskExecutor-15] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 12:25:00.392  INFO 7080 --- [http-nio-8005-exec-5] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 245
2019-06-13 12:25:00.483  INFO 7080 --- [SimpleAsyncTaskExecutor-16] feign.RequestInterceptor                 : ------feign设置token133
2019-06-13 12:25:00.486 ERROR 7080 --- [SimpleAsyncTaskExecutor-16] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 12:25:02.929  INFO 7080 --- [http-nio-8005-exec-7] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/roleId/2
2019-06-13 12:25:02.929  INFO 7080 --- [http-nio-8005-exec-7] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 12:25:02.929  INFO 7080 --- [http-nio-8005-exec-7] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.getTeacherList
2019-06-13 12:25:02.930  INFO 7080 --- [http-nio-8005-exec-7] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : [2, {page=1, limit=10, name=}]
2019-06-13 12:25:03.089  INFO 7080 --- [http-nio-8005-exec-7] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 160
2019-06-13 12:25:03.159  INFO 7080 --- [SimpleAsyncTaskExecutor-17] feign.RequestInterceptor                 : ------feign设置token134
2019-06-13 12:25:03.280 ERROR 7080 --- [SimpleAsyncTaskExecutor-17] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.GeneratedMethodAccessor200.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 13 common frames omitted

2019-06-13 12:25:30.455  INFO 7080 --- [MessageBroker-1] o.s.w.s.c.WebSocketMessageBrokerStats    : WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 0, completed tasks = 3]
2019-06-13 12:25:39.496  INFO 7080 --- [http-nio-8005-exec-8] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/router
2019-06-13 12:25:39.497  INFO 7080 --- [http-nio-8005-exec-8] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 12:25:39.497  INFO 7080 --- [http-nio-8005-exec-8] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.LoginController.router
2019-06-13 12:25:39.497  INFO 7080 --- [http-nio-8005-exec-8] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 12:25:39.504  INFO 7080 --- [http-nio-8005-exec-10] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/roleId/2
2019-06-13 12:25:39.504  INFO 7080 --- [http-nio-8005-exec-10] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 12:25:39.504  INFO 7080 --- [http-nio-8005-exec-10] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.getTeacherList
2019-06-13 12:25:39.504  INFO 7080 --- [http-nio-8005-exec-10] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : [2, {page=1, limit=10, name=}]
2019-06-13 12:25:39.532  INFO 7080 --- [http-nio-8005-exec-8] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 36
2019-06-13 12:25:39.533  INFO 7080 --- [SimpleAsyncTaskExecutor-18] feign.RequestInterceptor                 : ------feign设置token135
2019-06-13 12:25:39.533  INFO 7080 --- [http-nio-8005-exec-1] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/currentUser
2019-06-13 12:25:39.533  INFO 7080 --- [http-nio-8005-exec-1] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 12:25:39.533  INFO 7080 --- [http-nio-8005-exec-1] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.currentUser
2019-06-13 12:25:39.533  INFO 7080 --- [http-nio-8005-exec-1] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 12:25:39.535 ERROR 7080 --- [SimpleAsyncTaskExecutor-18] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.GeneratedMethodAccessor200.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 13 common frames omitted

2019-06-13 12:25:39.582  INFO 7080 --- [http-nio-8005-exec-10] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 78
2019-06-13 12:25:39.583  INFO 7080 --- [SimpleAsyncTaskExecutor-19] feign.RequestInterceptor                 : ------feign设置token136
2019-06-13 12:25:39.673 ERROR 7080 --- [SimpleAsyncTaskExecutor-19] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.GeneratedMethodAccessor200.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 13 common frames omitted

2019-06-13 12:25:40.013  INFO 7080 --- [http-nio-8005-exec-1] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 480
2019-06-13 12:25:40.014  INFO 7080 --- [SimpleAsyncTaskExecutor-20] feign.RequestInterceptor                 : ------feign设置token137
2019-06-13 12:25:40.016 ERROR 7080 --- [SimpleAsyncTaskExecutor-20] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.GeneratedMethodAccessor200.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 13 common frames omitted

2019-06-13 12:25:41.333  INFO 7080 --- [http-nio-8005-exec-9] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/roleId/3
2019-06-13 12:25:41.334  INFO 7080 --- [http-nio-8005-exec-9] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 12:25:41.334  INFO 7080 --- [http-nio-8005-exec-9] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.getTeacherList
2019-06-13 12:25:41.334  INFO 7080 --- [http-nio-8005-exec-9] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : [3, {page=1, limit=10, name=}]
2019-06-13 12:25:41.385  INFO 7080 --- [http-nio-8005-exec-9] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 52
2019-06-13 12:25:41.387  INFO 7080 --- [SimpleAsyncTaskExecutor-21] feign.RequestInterceptor                 : ------feign设置token138
2019-06-13 12:25:41.388 ERROR 7080 --- [SimpleAsyncTaskExecutor-21] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.GeneratedMethodAccessor200.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 13 common frames omitted

2019-06-13 12:29:33.776  INFO 7080 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 12:34:33.778  INFO 7080 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 12:39:33.779  INFO 7080 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 12:44:33.780  INFO 7080 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 12:49:33.783  INFO 7080 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 12:54:33.786  INFO 7080 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 12:55:30.460  INFO 7080 --- [MessageBroker-1] o.s.w.s.c.WebSocketMessageBrokerStats    : WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 0, completed tasks = 4]
2019-06-13 12:59:33.803  INFO 7080 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 13:04:33.902  INFO 7080 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 13:06:35.554  INFO 7080 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/roleId/2
2019-06-13 13:06:35.555  INFO 7080 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 13:06:35.555  INFO 7080 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.getTeacherList
2019-06-13 13:06:35.571  INFO 7080 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : [2, {page=1, limit=10, name=}]
2019-06-13 13:06:35.596  INFO 7080 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 42
2019-06-13 13:06:35.649  INFO 7080 --- [SimpleAsyncTaskExecutor-22] feign.RequestInterceptor                 : ------feign设置token139
2019-06-13 13:06:35.675 ERROR 7080 --- [SimpleAsyncTaskExecutor-22] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.GeneratedMethodAccessor200.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 13 common frames omitted

2019-06-13 13:06:45.720  INFO 7080 --- [http-nio-8005-exec-7] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/router
2019-06-13 13:06:45.720  INFO 7080 --- [http-nio-8005-exec-7] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 13:06:45.720  INFO 7080 --- [http-nio-8005-exec-7] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.LoginController.router
2019-06-13 13:06:45.721  INFO 7080 --- [http-nio-8005-exec-7] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 13:06:45.813  INFO 7080 --- [http-nio-8005-exec-7] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 93
2019-06-13 13:06:45.815  INFO 7080 --- [SimpleAsyncTaskExecutor-23] feign.RequestInterceptor                 : ------feign设置token140
2019-06-13 13:06:45.817 ERROR 7080 --- [SimpleAsyncTaskExecutor-23] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.GeneratedMethodAccessor200.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 13 common frames omitted

2019-06-13 13:06:45.917  INFO 7080 --- [http-nio-8005-exec-8] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/currentUser
2019-06-13 13:06:45.918  INFO 7080 --- [http-nio-8005-exec-8] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 13:06:45.918  INFO 7080 --- [http-nio-8005-exec-8] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.currentUser
2019-06-13 13:06:45.919  INFO 7080 --- [http-nio-8005-exec-8] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 13:06:45.945  INFO 7080 --- [http-nio-8005-exec-8] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 28
2019-06-13 13:06:45.949  INFO 7080 --- [http-nio-8005-exec-5] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/roleId/2
2019-06-13 13:06:45.950  INFO 7080 --- [http-nio-8005-exec-5] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 13:06:45.950  INFO 7080 --- [http-nio-8005-exec-5] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.getTeacherList
2019-06-13 13:06:45.951  INFO 7080 --- [http-nio-8005-exec-5] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : [2, {page=1, limit=10, name=}]
2019-06-13 13:06:45.975  INFO 7080 --- [SimpleAsyncTaskExecutor-24] feign.RequestInterceptor                 : ------feign设置token141
2019-06-13 13:06:45.977 ERROR 7080 --- [SimpleAsyncTaskExecutor-24] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.GeneratedMethodAccessor200.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 13 common frames omitted

2019-06-13 13:06:46.030  INFO 7080 --- [http-nio-8005-exec-5] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 81
2019-06-13 13:06:46.061  INFO 7080 --- [SimpleAsyncTaskExecutor-25] feign.RequestInterceptor                 : ------feign设置token142
2019-06-13 13:06:46.076 ERROR 7080 --- [SimpleAsyncTaskExecutor-25] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy196.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy196.save(Unknown Source) ~[na:na]
	at sun.reflect.GeneratedMethodAccessor200.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 13 common frames omitted

2019-06-13 13:09:33.912  INFO 7080 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 13:14:34.018  INFO 7080 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 13:19:34.071  INFO 7080 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 13:24:34.206  INFO 7080 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 13:25:30.468  INFO 7080 --- [MessageBroker-1] o.s.w.s.c.WebSocketMessageBrokerStats    : WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 0, completed tasks = 5]
2019-06-13 13:29:34.216  INFO 7080 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 13:34:34.226  INFO 7080 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 17:34:57.423  INFO 5928 --- [main] c.b.c.ClouddoAdminApplication            : No active profile set, falling back to default profiles: default
2019-06-13 17:34:57.449  INFO 5928 --- [main] ConfigServletWebServerApplicationContext : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5e4bd84a: startup date [Thu Jun 13 17:34:57 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4e08711f
2019-06-13 17:35:04.306  INFO 5928 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-13 17:35:06.643  INFO 5928 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-13 17:35:11.815  INFO 5928 --- [main] o.s.cloud.context.scope.GenericScope     : BeanFactory id=2674efb7-63bc-3c89-b0b6-f3b92c3b428e
2019-06-13 17:35:12.472 ERROR 5928 --- [main] o.s.boot.SpringApplication               : Application run failed

java.lang.NoClassDefFoundError: javax/persistence/EntityManagerFactory
	at org.springframework.data.jpa.util.BeanDefinitionUtils.<clinit>(BeanDefinitionUtils.java:53) ~[spring-data-jpa-1.11.9.RELEASE.jar:na]
	at org.springframework.data.jpa.repository.support.EntityManagerBeanDefinitionRegistrarPostProcessor.postProcessBeanFactory(EntityManagerBeanDefinitionRegistrarPostProcessor.java:54) ~[spring-data-jpa-1.11.9.RELEASE.jar:na]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:282) ~[spring-context-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:177) ~[spring-context-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:694) ~[spring-context-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:532) ~[spring-context-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140) ~[spring-boot-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:762) [spring-boot-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:398) [spring-boot-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:330) [spring-boot-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1258) [spring-boot-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1246) [spring-boot-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at com.bootdo.clouddoadmin.ClouddoAdminApplication.main(ClouddoAdminApplication.java:19) [classes/:na]
Caused by: java.lang.ClassNotFoundException: javax.persistence.EntityManagerFactory
	at java.net.URLClassLoader.findClass(URLClassLoader.java:381) ~[na:1.8.0_181]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424) ~[na:1.8.0_181]
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349) ~[na:1.8.0_181]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357) ~[na:1.8.0_181]
	... 13 common frames omitted

2019-06-13 17:35:12.474  INFO 5928 --- [main] ConfigServletWebServerApplicationContext : Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@5e4bd84a: startup date [Thu Jun 13 17:34:57 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@4e08711f
2019-06-13 18:16:44.588  INFO 10096 --- [main] c.b.c.ClouddoAdminApplication            : No active profile set, falling back to default profiles: default
2019-06-13 18:16:44.609  INFO 10096 --- [main] ConfigServletWebServerApplicationContext : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@31dadd46: startup date [Thu Jun 13 18:16:44 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@385c9627
2019-06-13 18:16:46.484  INFO 10096 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-13 18:16:46.555  INFO 10096 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-13 18:16:47.118  INFO 10096 --- [main] o.s.cloud.context.scope.GenericScope     : BeanFactory id=2674efb7-63bc-3c89-b0b6-f3b92c3b428e
2019-06-13 18:16:47.166 ERROR 10096 --- [main] o.s.boot.SpringApplication               : Application run failed

java.lang.NoClassDefFoundError: javax/persistence/EntityManagerFactory
	at org.springframework.data.jpa.util.BeanDefinitionUtils.<clinit>(BeanDefinitionUtils.java:53) ~[spring-data-jpa-1.11.9.RELEASE.jar:na]
	at org.springframework.data.jpa.repository.support.EntityManagerBeanDefinitionRegistrarPostProcessor.postProcessBeanFactory(EntityManagerBeanDefinitionRegistrarPostProcessor.java:54) ~[spring-data-jpa-1.11.9.RELEASE.jar:na]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:282) ~[spring-context-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:177) ~[spring-context-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:694) ~[spring-context-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:532) ~[spring-context-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140) ~[spring-boot-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:762) [spring-boot-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:398) [spring-boot-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:330) [spring-boot-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1258) [spring-boot-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1246) [spring-boot-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at com.bootdo.clouddoadmin.ClouddoAdminApplication.main(ClouddoAdminApplication.java:19) [classes/:na]
Caused by: java.lang.ClassNotFoundException: javax.persistence.EntityManagerFactory
	at java.net.URLClassLoader.findClass(URLClassLoader.java:381) ~[na:1.8.0_181]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424) ~[na:1.8.0_181]
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349) ~[na:1.8.0_181]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357) ~[na:1.8.0_181]
	... 13 common frames omitted

2019-06-13 18:16:47.167  INFO 10096 --- [main] ConfigServletWebServerApplicationContext : Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@31dadd46: startup date [Thu Jun 13 18:16:44 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@385c9627
2019-06-13 18:32:31.519  INFO 6688 --- [main] c.b.c.ClouddoAdminApplication            : No active profile set, falling back to default profiles: default
2019-06-13 18:32:31.551  INFO 6688 --- [main] ConfigServletWebServerApplicationContext : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1c481ff2: startup date [Thu Jun 13 18:32:31 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1573f9fc
2019-06-13 18:32:35.770  INFO 6688 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-13 18:32:35.904  INFO 6688 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-13 18:32:36.667  INFO 6688 --- [main] o.s.cloud.context.scope.GenericScope     : BeanFactory id=2674efb7-63bc-3c89-b0b6-f3b92c3b428e
2019-06-13 18:32:36.738 ERROR 6688 --- [main] o.s.boot.SpringApplication               : Application run failed

java.lang.NoClassDefFoundError: javax/persistence/EntityManagerFactory
	at org.springframework.data.jpa.util.BeanDefinitionUtils.<clinit>(BeanDefinitionUtils.java:53) ~[spring-data-jpa-1.11.9.RELEASE.jar:na]
	at org.springframework.data.jpa.repository.support.EntityManagerBeanDefinitionRegistrarPostProcessor.postProcessBeanFactory(EntityManagerBeanDefinitionRegistrarPostProcessor.java:54) ~[spring-data-jpa-1.11.9.RELEASE.jar:na]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:282) ~[spring-context-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.context.support.PostProcessorRegistrationDelegate.invokeBeanFactoryPostProcessors(PostProcessorRegistrationDelegate.java:177) ~[spring-context-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.invokeBeanFactoryPostProcessors(AbstractApplicationContext.java:694) ~[spring-context-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:532) ~[spring-context-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140) ~[spring-boot-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:762) [spring-boot-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:398) [spring-boot-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:330) [spring-boot-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1258) [spring-boot-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1246) [spring-boot-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at com.bootdo.clouddoadmin.ClouddoAdminApplication.main(ClouddoAdminApplication.java:19) [classes/:na]
Caused by: java.lang.ClassNotFoundException: javax.persistence.EntityManagerFactory
	at java.net.URLClassLoader.findClass(URLClassLoader.java:381) ~[na:1.8.0_181]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424) ~[na:1.8.0_181]
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:349) ~[na:1.8.0_181]
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357) ~[na:1.8.0_181]
	... 13 common frames omitted

2019-06-13 18:32:36.740  INFO 6688 --- [main] ConfigServletWebServerApplicationContext : Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1c481ff2: startup date [Thu Jun 13 18:32:31 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1573f9fc
2019-06-13 19:04:15.814  INFO 9412 --- [main] c.b.c.ClouddoAdminApplication            : No active profile set, falling back to default profiles: default
2019-06-13 19:04:15.840  INFO 9412 --- [main] ConfigServletWebServerApplicationContext : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1a6c1270: startup date [Thu Jun 13 19:04:15 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@23348b5d
2019-06-13 19:04:17.629  INFO 9412 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-13 19:04:17.678  INFO 9412 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-13 19:04:18.317  INFO 9412 --- [main] o.s.cloud.context.scope.GenericScope     : BeanFactory id=f1b22a50-ecfd-3af2-8448-fd1993193ca3
2019-06-13 19:04:18.359  INFO 9412 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-06-13 19:04:18.794  INFO 9412 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$54ace434] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 19:04:19.206  INFO 9412 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.bootdo.clouddoadmin.config.RedisConfig$$EnhancerBySpringCGLIB$$775a2d85] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 19:04:19.222  INFO 9412 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.bootdo.clouddoadmin.config.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 19:04:19.371  INFO 9412 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$70c6e731] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 19:04:20.741  INFO 9412 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8005 (http)
2019-06-13 19:04:20.822  INFO 9412 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2019-06-13 19:04:20.823  INFO 9412 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.32
2019-06-13 19:04:20.829  INFO 9412 --- [localhost-startStop-1] o.a.catalina.core.AprLifecycleListener   : The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_181\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;C:;C:\Program Files\Java\jdk1.8.0_181\bin;D:\myApps\apache-maven-3.6.0\bin;C:\Program Files\Java\jdk1.8.0_181\jre\bin;C:\Program Files\Java\jdk1.8.0_181\bin ;C:\Program Files\TortoiseGit\bin;C:\windows\system32;C:\windows;C:\windows\system32\wbem;D:\StudyTools\XAMPP\mysql\bin;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;D:\系统工具\Git\cmd;D:\StudyTools\NodeJs\;D:\StudyTools\Elang\erl10.0.1\bin;D:\StudyTools\RabbitMQ Server\rabbitmq_server-3.7.7\sbin;;D:\StudyTools\DockerToolbox;D:\StudyTools\NodeJs\node_global;D:\StudyTools\WebStorm 2019.1.2\bin;;.]
2019-06-13 19:04:21.185  INFO 9412 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2019-06-13 19:04:21.185  INFO 9412 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 5345 ms
2019-06-13 19:04:21.234  INFO 9412 --- [localhost-startStop-1] c.b.c.config.DruidConfiguration          : init Druid Servlet Configuration 
2019-06-13 19:04:21.814  WARN 9412 --- [localhost-startStop-1] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2019-06-13 19:04:21.814  INFO 9412 --- [localhost-startStop-1] c.n.c.sources.URLConfigurationSource     : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-06-13 19:04:21.904  INFO 9412 --- [localhost-startStop-1] c.netflix.config.DynamicPropertyFactory  : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@3efd60e9
2019-06-13 19:04:42.370  INFO 9412 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2019-06-13 19:04:42.371  INFO 9412 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'webMvcMetricsFilter' to: [/*]
2019-06-13 19:04:42.372  INFO 9412 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-06-13 19:04:42.372  INFO 9412 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-06-13 19:04:42.372  INFO 9412 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2019-06-13 19:04:42.374  INFO 9412 --- [localhost-startStop-1] .s.DelegatingFilterProxyRegistrationBean : Mapping filter: 'springSecurityFilterChain' to: [/*]
2019-06-13 19:04:42.375  INFO 9412 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpTraceFilter' to: [/*]
2019-06-13 19:04:42.376  INFO 9412 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'webStatFilter' to urls: [/*]
2019-06-13 19:04:42.377  INFO 9412 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Servlet statViewServlet mapped to [/druid/*]
2019-06-13 19:04:42.392  INFO 9412 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Servlet dispatcherServlet mapped to [/]
2019-06-13 19:04:47.174  INFO 9412 --- [main] s.c.a.AnnotationConfigApplicationContext : Refreshing FeignContext-course: startup date [Thu Jun 13 19:04:47 CST 2019]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1a6c1270
2019-06-13 19:04:47.297  INFO 9412 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-06-13 19:04:47.819  INFO 9412 --- [main] s.c.a.AnnotationConfigApplicationContext : Refreshing FeignContext-api-base: startup date [Thu Jun 13 19:04:47 CST 2019]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1a6c1270
2019-06-13 19:04:47.841  INFO 9412 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-06-13 19:04:49.056  INFO 9412 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/authorize],methods=[POST],params=[user_oauth_approval]}" onto public org.springframework.web.servlet.View org.springframework.security.oauth2.provider.endpoint.AuthorizationEndpoint.approveOrDeny(java.util.Map<java.lang.String, java.lang.String>,java.util.Map<java.lang.String, ?>,org.springframework.web.bind.support.SessionStatus,java.security.Principal)
2019-06-13 19:04:49.072  INFO 9412 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/authorize]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.security.oauth2.provider.endpoint.AuthorizationEndpoint.authorize(java.util.Map<java.lang.String, java.lang.Object>,java.util.Map<java.lang.String, java.lang.String>,org.springframework.web.bind.support.SessionStatus,java.security.Principal)
2019-06-13 19:04:49.073  INFO 9412 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/token],methods=[POST]}" onto public org.springframework.http.ResponseEntity<org.springframework.security.oauth2.common.OAuth2AccessToken> org.springframework.security.oauth2.provider.endpoint.TokenEndpoint.postAccessToken(java.security.Principal,java.util.Map<java.lang.String, java.lang.String>) throws org.springframework.web.HttpRequestMethodNotSupportedException
2019-06-13 19:04:49.073  INFO 9412 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/token],methods=[GET]}" onto public org.springframework.http.ResponseEntity<org.springframework.security.oauth2.common.OAuth2AccessToken> org.springframework.security.oauth2.provider.endpoint.TokenEndpoint.getAccessToken(java.security.Principal,java.util.Map<java.lang.String, java.lang.String>) throws org.springframework.web.HttpRequestMethodNotSupportedException
2019-06-13 19:04:49.074  INFO 9412 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/check_token]}" onto public java.util.Map<java.lang.String, ?> org.springframework.security.oauth2.provider.endpoint.CheckTokenEndpoint.checkToken(java.lang.String)
2019-06-13 19:04:49.075  INFO 9412 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/confirm_access]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.security.oauth2.provider.endpoint.WhitelabelApprovalEndpoint.getAccessConfirmation(java.util.Map<java.lang.String, java.lang.Object>,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-06-13 19:04:49.076  INFO 9412 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/error]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.security.oauth2.provider.endpoint.WhitelabelErrorEndpoint.handleError(javax.servlet.http.HttpServletRequest)
2019-06-13 19:04:49.349  INFO 9412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-06-13 19:04:49.349  INFO 9412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/remove],methods=[POST]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.DeptController.remove(java.lang.Long)
2019-06-13 19:04:49.350  INFO 9412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/batchRemove],methods=[POST]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.DeptController.remove(java.lang.Long[])
2019-06-13 19:04:49.350  INFO 9412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/update]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.DeptController.update(com.bootdo.clouddoadmin.domain.DeptDO)
2019-06-13 19:04:49.351  INFO 9412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/list],methods=[GET]}" onto public java.util.List<com.bootdo.clouddoadmin.domain.DeptDO> com.bootdo.clouddoadmin.controller.DeptController.list()
2019-06-13 19:04:49.351  INFO 9412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/save],methods=[POST]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.DeptController.save(com.bootdo.clouddoadmin.domain.DeptDO)
2019-06-13 19:04:49.352  INFO 9412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/tree],methods=[GET]}" onto public com.bootdo.clouddoadmin.domain.Tree<com.bootdo.clouddoadmin.domain.DeptDO> com.bootdo.clouddoadmin.controller.DeptController.tree()
2019-06-13 19:04:49.352  INFO 9412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.DeptController.dept()
2019-06-13 19:04:49.352  INFO 9412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.DeptController.treeView()
2019-06-13 19:04:49.353  INFO 9412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/logout]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.LoginController.logout(java.lang.String)
2019-06-13 19:04:49.354  INFO 9412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/router],methods=[GET]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.LoginController.router()
2019-06-13 19:04:49.359  INFO 9412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu],methods=[DELETE]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.remove(java.lang.Long)
2019-06-13 19:04:49.360  INFO 9412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/{id}],methods=[GET]}" onto com.bootdo.clouddoadmin.domain.MenuDO com.bootdo.clouddoadmin.controller.MenuController.get(java.lang.Long)
2019-06-13 19:04:49.360  INFO 9412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu],methods=[PUT]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.update(com.bootdo.clouddoadmin.domain.MenuDO)
2019-06-13 19:04:49.361  INFO 9412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu],methods=[GET]}" onto java.util.List<com.bootdo.clouddoadmin.domain.Tree<com.bootdo.clouddoadmin.domain.MenuDO>> com.bootdo.clouddoadmin.controller.MenuController.list()
2019-06-13 19:04:49.362  INFO 9412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/list],methods=[GET]}" onto java.util.List<com.bootdo.clouddoadmin.domain.MenuDO> com.bootdo.clouddoadmin.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-13 19:04:49.362  INFO 9412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu],methods=[POST]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.save(com.bootdo.clouddoadmin.domain.MenuDO)
2019-06-13 19:04:49.363  INFO 9412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/tree],methods=[GET]}" onto com.bootdo.clouddoadmin.domain.Tree<com.bootdo.clouddoadmin.domain.MenuDO> com.bootdo.clouddoadmin.controller.MenuController.tree()
2019-06-13 19:04:49.363  INFO 9412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/clearCache],methods=[GET]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.clearCache()
2019-06-13 19:04:49.364  INFO 9412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/currentUserMenus],methods=[GET]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.currentUserMenus()
2019-06-13 19:04:49.365  INFO 9412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/userMenus],methods=[GET]}" onto java.util.List<com.bootdo.clouddocommon.dto.MenuDTO> com.bootdo.clouddoadmin.controller.MenuController.userMenus()
2019-06-13 19:04:49.365  INFO 9412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/roleId],methods=[GET]}" onto java.util.List<java.lang.Long> com.bootdo.clouddoadmin.controller.MenuController.menuIdsByRoleId(java.lang.Long)
2019-06-13 19:04:49.370  INFO 9412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role],methods=[PUT]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.RoleController.update(com.bootdo.clouddoadmin.domain.RoleDO)
2019-06-13 19:04:49.370  INFO 9412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role],methods=[GET]}" onto com.bootdo.clouddocommon.utils.PageUtils com.bootdo.clouddoadmin.controller.RoleController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-13 19:04:49.371  INFO 9412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role],methods=[POST]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.RoleController.save(com.bootdo.clouddoadmin.domain.RoleDO)
2019-06-13 19:04:49.372  INFO 9412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/userId/{userId}],methods=[GET]}" onto java.util.List<java.lang.Long> com.bootdo.clouddoadmin.controller.RoleController.roleIdByUserId(java.lang.Long)
2019-06-13 19:04:49.374  INFO 9412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.TestController.test()
2019-06-13 19:04:49.374  INFO 9412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test1],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.TestController.test1()
2019-06-13 19:04:49.378  INFO 9412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user],methods=[DELETE]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.remove(java.lang.Long)
2019-06-13 19:04:49.378  INFO 9412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.get(java.lang.Long)
2019-06-13 19:04:49.379  INFO 9412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user],methods=[PUT]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.update(com.bootdo.clouddoadmin.dto.UserDTO)
2019-06-13 19:04:49.380  INFO 9412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user],methods=[POST]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.save(com.bootdo.clouddoadmin.dto.UserDTO)
2019-06-13 19:04:49.380  INFO 9412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/batchRemove],methods=[POST]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.batchRemove(java.lang.Long[])
2019-06-13 19:04:49.380  INFO 9412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/tokenUser],methods=[GET]}" onto public java.security.Principal com.bootdo.clouddoadmin.controller.UserController.user(java.security.Principal)
2019-06-13 19:04:49.381  INFO 9412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/roleId/{roleId}],methods=[GET]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.getTeacherList(java.lang.Long,java.util.Map<java.lang.String, java.lang.Object>)
2019-06-13 19:04:49.381  INFO 9412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/currentUser],methods=[GET]}" onto public com.bootdo.clouddocommon.dto.LoginUserDTO com.bootdo.clouddoadmin.controller.UserController.currentUser()
2019-06-13 19:04:49.382  INFO 9412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/exits],methods=[POST]}" onto boolean com.bootdo.clouddoadmin.controller.UserController.exits(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-13 19:04:49.388  INFO 9412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-06-13 19:04:49.390  INFO 9412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-06-13 19:04:49.392  INFO 9412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-06-13 19:04:49.397  INFO 9412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-06-13 19:04:49.398  INFO 9412 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-13 19:04:49.636  INFO 9412 --- [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 2 endpoint(s) beneath base path '/actuator'
2019-06-13 19:04:49.656  INFO 9412 --- [main] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-06-13 19:04:49.658  INFO 9412 --- [main] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-06-13 19:04:49.659  INFO 9412 --- [main] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-13 19:04:52.942  INFO 9412 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@71d99732, org.springframework.security.web.context.SecurityContextPersistenceFilter@8debe42, org.springframework.security.web.header.HeaderWriterFilter@17befef0, org.springframework.security.web.authentication.logout.LogoutFilter@67e11bda, org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter@2faf6e4a, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@164dea80, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@40863800, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@50672905, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2328ec73, org.springframework.security.web.session.SessionManagementFilter@3129299f, org.springframework.security.web.access.ExceptionTranslationFilter@43445fc6, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3d764641]
2019-06-13 19:04:53.026  INFO 9412 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: org.springframework.security.oauth2.config.annotation.web.configuration.ResourceServerConfiguration$NotOAuthRequestMatcher@4ef31221, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4e9e0c6, org.springframework.security.web.context.SecurityContextPersistenceFilter@25216999, org.springframework.security.web.header.HeaderWriterFilter@7bda01da, org.springframework.security.web.authentication.logout.LogoutFilter@45bf93bb, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@5788722f, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@6d35ff7b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@77e6761f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5c997de8, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1a819901, org.springframework.security.web.session.SessionManagementFilter@65ef9a0a, org.springframework.security.web.access.ExceptionTranslationFilter@75e4fe3c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7fcc3745]
2019-06-13 19:04:53.082  INFO 9412 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@23d0944b, org.springframework.security.web.context.SecurityContextPersistenceFilter@7e3d168e, org.springframework.security.web.header.HeaderWriterFilter@bfd97fb, org.springframework.security.web.csrf.CsrfFilter@4e85dcb2, org.springframework.security.web.authentication.logout.LogoutFilter@2dc3ece8, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@fbbd90c, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@751686aa, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@559e3f67, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@149b53fa, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@73be4cdd, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@72f24a84, org.springframework.security.web.session.SessionManagementFilter@6bfdaa7a, org.springframework.security.web.access.ExceptionTranslationFilter@73dbe25, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@77f03916]
2019-06-13 19:04:53.328  INFO 9412 --- [main] pertySourcedRequestMappingHandlerMapping : Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2019-06-13 19:04:54.339  INFO 9412 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService  'clientInboundChannelExecutor'
2019-06-13 19:04:54.371  INFO 9412 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-06-13 19:04:54.430  INFO 9412 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-06-13 19:04:54.538  INFO 9412 --- [main] o.s.w.s.s.s.WebSocketHandlerMapping      : Mapped URL path [/endpoint/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-06-13 19:04:54.753  INFO 9412 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService  'brokerChannelExecutor'
2019-06-13 19:04:55.093  WARN 9412 --- [main] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2019-06-13 19:04:55.093  INFO 9412 --- [main] c.n.c.sources.URLConfigurationSource     : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-06-13 19:04:55.426  INFO 9412 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-13 19:04:55.841  INFO 9412 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1a6c1270: startup date [Thu Jun 13 19:04:15 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@23348b5d
2019-06-13 19:04:55.983  INFO 9412 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-13 19:04:55.983  INFO 9412 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-13 19:04:56.029  INFO 9412 --- [main] .m.m.a.ExceptionHandlerExceptionResolver : Detected @ExceptionHandler methods in exceptionAdviceHandler
2019-06-13 19:04:57.277  WARN 9412 --- [main] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jpaMappingContext': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: At least one JPA metamodel must be present!
2019-06-13 19:04:57.279  INFO 9412 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Unregistering JMX-exposed beans on shutdown
2019-06-13 19:04:57.298  INFO 9412 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'brokerChannelExecutor'
2019-06-13 19:04:57.298  INFO 9412 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Shutting down ExecutorService 'messageBrokerTaskScheduler'
2019-06-13 19:04:57.299  INFO 9412 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'clientOutboundChannelExecutor'
2019-06-13 19:04:57.299  INFO 9412 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'clientInboundChannelExecutor'
2019-06-13 19:04:57.302  INFO 9412 --- [main] s.c.a.AnnotationConfigApplicationContext : Closing FeignContext-api-base: startup date [Thu Jun 13 19:04:47 CST 2019]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1a6c1270
2019-06-13 19:04:57.303  INFO 9412 --- [main] s.c.a.AnnotationConfigApplicationContext : Closing FeignContext-course: startup date [Thu Jun 13 19:04:47 CST 2019]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1a6c1270
2019-06-13 19:04:57.420  INFO 9412 --- [main] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2019-06-13 19:04:57.530  INFO 9412 --- [main] ConditionEvaluationReportLoggingListener : 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2019-06-13 19:04:57.542 ERROR 9412 --- [main] o.s.boot.SpringApplication               : Application run failed

org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'jpaMappingContext': Invocation of init method failed; nested exception is java.lang.IllegalArgumentException: At least one JPA metamodel must be present!
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1699) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:573) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:740) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:869) ~[spring-context-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550) ~[spring-context-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:140) ~[spring-boot-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:762) [spring-boot-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:398) [spring-boot-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:330) [spring-boot-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1258) [spring-boot-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1246) [spring-boot-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at com.bootdo.clouddoadmin.ClouddoAdminApplication.main(ClouddoAdminApplication.java:19) [classes/:na]
Caused by: java.lang.IllegalArgumentException: At least one JPA metamodel must be present!
	at org.springframework.util.Assert.notEmpty(Assert.java:450) ~[spring-core-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.data.jpa.mapping.JpaMetamodelMappingContext.<init>(JpaMetamodelMappingContext.java:52) ~[spring-data-jpa-1.11.9.RELEASE.jar:na]
	at org.springframework.data.jpa.repository.config.JpaMetamodelMappingContextFactoryBean.createInstance(JpaMetamodelMappingContextFactoryBean.java:71) ~[spring-data-jpa-1.11.9.RELEASE.jar:na]
	at org.springframework.data.jpa.repository.config.JpaMetamodelMappingContextFactoryBean.createInstance(JpaMetamodelMappingContextFactoryBean.java:26) ~[spring-data-jpa-1.11.9.RELEASE.jar:na]
	at org.springframework.beans.factory.config.AbstractFactoryBean.afterPropertiesSet(AbstractFactoryBean.java:141) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1758) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1695) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	... 16 common frames omitted

2019-06-13 19:11:28.283  INFO 8872 --- [main] c.b.c.ClouddoAdminApplication            : No active profile set, falling back to default profiles: default
2019-06-13 19:11:28.302  INFO 8872 --- [main] ConfigServletWebServerApplicationContext : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7ca20101: startup date [Thu Jun 13 19:11:28 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1a677343
2019-06-13 19:11:30.026  INFO 8872 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-13 19:11:30.660  INFO 8872 --- [main] o.s.cloud.context.scope.GenericScope     : BeanFactory id=d229a6ea-016d-322a-b2d4-3e4463f5e4cd
2019-06-13 19:11:30.695  INFO 8872 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-06-13 19:11:30.986  INFO 8872 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d0e87d11] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 19:11:31.697  INFO 8872 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.bootdo.clouddoadmin.config.RedisConfig$$EnhancerBySpringCGLIB$$f395c662] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 19:11:31.713  INFO 8872 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.bootdo.clouddoadmin.config.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 19:11:31.799  INFO 8872 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$ed02800e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 19:11:32.585  INFO 8872 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8005 (http)
2019-06-13 19:11:32.614  INFO 8872 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2019-06-13 19:11:32.614  INFO 8872 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.32
2019-06-13 19:11:32.620  INFO 8872 --- [localhost-startStop-1] o.a.catalina.core.AprLifecycleListener   : The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_181\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;C:;C:\Program Files\Java\jdk1.8.0_181\bin;D:\myApps\apache-maven-3.6.0\bin;C:\Program Files\Java\jdk1.8.0_181\jre\bin;C:\Program Files\Java\jdk1.8.0_181\bin ;C:\Program Files\TortoiseGit\bin;C:\windows\system32;C:\windows;C:\windows\system32\wbem;D:\StudyTools\XAMPP\mysql\bin;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;D:\系统工具\Git\cmd;D:\StudyTools\NodeJs\;D:\StudyTools\Elang\erl10.0.1\bin;D:\StudyTools\RabbitMQ Server\rabbitmq_server-3.7.7\sbin;;D:\StudyTools\DockerToolbox;D:\StudyTools\NodeJs\node_global;D:\StudyTools\WebStorm 2019.1.2\bin;;.]
2019-06-13 19:11:33.405  INFO 8872 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2019-06-13 19:11:33.406  INFO 8872 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 5104 ms
2019-06-13 19:11:33.429  INFO 8872 --- [localhost-startStop-1] c.b.c.config.DruidConfiguration          : init Druid Servlet Configuration 
2019-06-13 19:11:33.780  WARN 8872 --- [localhost-startStop-1] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2019-06-13 19:11:33.780  INFO 8872 --- [localhost-startStop-1] c.n.c.sources.URLConfigurationSource     : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-06-13 19:11:33.817  INFO 8872 --- [localhost-startStop-1] c.netflix.config.DynamicPropertyFactory  : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@50af2d97
2019-06-13 19:11:36.525  INFO 8872 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2019-06-13 19:11:36.526  INFO 8872 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'webMvcMetricsFilter' to: [/*]
2019-06-13 19:11:36.526  INFO 8872 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-06-13 19:11:36.526  INFO 8872 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-06-13 19:11:36.526  INFO 8872 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2019-06-13 19:11:36.527  INFO 8872 --- [localhost-startStop-1] .s.DelegatingFilterProxyRegistrationBean : Mapping filter: 'springSecurityFilterChain' to: [/*]
2019-06-13 19:11:36.527  INFO 8872 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpTraceFilter' to: [/*]
2019-06-13 19:11:36.528  INFO 8872 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'webStatFilter' to urls: [/*]
2019-06-13 19:11:36.528  INFO 8872 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Servlet statViewServlet mapped to [/druid/*]
2019-06-13 19:11:36.529  INFO 8872 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Servlet dispatcherServlet mapped to [/]
2019-06-13 19:11:37.810  INFO 8872 --- [main] s.c.a.AnnotationConfigApplicationContext : Refreshing FeignContext-course: startup date [Thu Jun 13 19:11:37 CST 2019]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7ca20101
2019-06-13 19:11:37.839  INFO 8872 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-06-13 19:11:38.151  INFO 8872 --- [main] s.c.a.AnnotationConfigApplicationContext : Refreshing FeignContext-api-base: startup date [Thu Jun 13 19:11:38 CST 2019]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7ca20101
2019-06-13 19:11:38.170  INFO 8872 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-06-13 19:11:38.762  INFO 8872 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/authorize],methods=[POST],params=[user_oauth_approval]}" onto public org.springframework.web.servlet.View org.springframework.security.oauth2.provider.endpoint.AuthorizationEndpoint.approveOrDeny(java.util.Map<java.lang.String, java.lang.String>,java.util.Map<java.lang.String, ?>,org.springframework.web.bind.support.SessionStatus,java.security.Principal)
2019-06-13 19:11:38.764  INFO 8872 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/authorize]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.security.oauth2.provider.endpoint.AuthorizationEndpoint.authorize(java.util.Map<java.lang.String, java.lang.Object>,java.util.Map<java.lang.String, java.lang.String>,org.springframework.web.bind.support.SessionStatus,java.security.Principal)
2019-06-13 19:11:38.765  INFO 8872 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/token],methods=[GET]}" onto public org.springframework.http.ResponseEntity<org.springframework.security.oauth2.common.OAuth2AccessToken> org.springframework.security.oauth2.provider.endpoint.TokenEndpoint.getAccessToken(java.security.Principal,java.util.Map<java.lang.String, java.lang.String>) throws org.springframework.web.HttpRequestMethodNotSupportedException
2019-06-13 19:11:38.766  INFO 8872 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/token],methods=[POST]}" onto public org.springframework.http.ResponseEntity<org.springframework.security.oauth2.common.OAuth2AccessToken> org.springframework.security.oauth2.provider.endpoint.TokenEndpoint.postAccessToken(java.security.Principal,java.util.Map<java.lang.String, java.lang.String>) throws org.springframework.web.HttpRequestMethodNotSupportedException
2019-06-13 19:11:38.767  INFO 8872 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/check_token]}" onto public java.util.Map<java.lang.String, ?> org.springframework.security.oauth2.provider.endpoint.CheckTokenEndpoint.checkToken(java.lang.String)
2019-06-13 19:11:38.768  INFO 8872 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/confirm_access]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.security.oauth2.provider.endpoint.WhitelabelApprovalEndpoint.getAccessConfirmation(java.util.Map<java.lang.String, java.lang.Object>,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-06-13 19:11:38.768  INFO 8872 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/error]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.security.oauth2.provider.endpoint.WhitelabelErrorEndpoint.handleError(javax.servlet.http.HttpServletRequest)
2019-06-13 19:11:38.868  INFO 8872 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-06-13 19:11:38.869  INFO 8872 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/remove],methods=[POST]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.DeptController.remove(java.lang.Long)
2019-06-13 19:11:38.869  INFO 8872 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/batchRemove],methods=[POST]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.DeptController.remove(java.lang.Long[])
2019-06-13 19:11:38.870  INFO 8872 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/update]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.DeptController.update(com.bootdo.clouddoadmin.domain.DeptDO)
2019-06-13 19:11:38.870  INFO 8872 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/list],methods=[GET]}" onto public java.util.List<com.bootdo.clouddoadmin.domain.DeptDO> com.bootdo.clouddoadmin.controller.DeptController.list()
2019-06-13 19:11:38.871  INFO 8872 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/save],methods=[POST]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.DeptController.save(com.bootdo.clouddoadmin.domain.DeptDO)
2019-06-13 19:11:38.871  INFO 8872 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/tree],methods=[GET]}" onto public com.bootdo.clouddoadmin.domain.Tree<com.bootdo.clouddoadmin.domain.DeptDO> com.bootdo.clouddoadmin.controller.DeptController.tree()
2019-06-13 19:11:38.871  INFO 8872 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.DeptController.treeView()
2019-06-13 19:11:38.872  INFO 8872 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.DeptController.dept()
2019-06-13 19:11:38.873  INFO 8872 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/router],methods=[GET]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.LoginController.router()
2019-06-13 19:11:38.874  INFO 8872 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/logout]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.LoginController.logout(java.lang.String)
2019-06-13 19:11:38.879  INFO 8872 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu],methods=[DELETE]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.remove(java.lang.Long)
2019-06-13 19:11:38.879  INFO 8872 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/{id}],methods=[GET]}" onto com.bootdo.clouddoadmin.domain.MenuDO com.bootdo.clouddoadmin.controller.MenuController.get(java.lang.Long)
2019-06-13 19:11:38.879  INFO 8872 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu],methods=[PUT]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.update(com.bootdo.clouddoadmin.domain.MenuDO)
2019-06-13 19:11:38.880  INFO 8872 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu],methods=[GET]}" onto java.util.List<com.bootdo.clouddoadmin.domain.Tree<com.bootdo.clouddoadmin.domain.MenuDO>> com.bootdo.clouddoadmin.controller.MenuController.list()
2019-06-13 19:11:38.880  INFO 8872 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/list],methods=[GET]}" onto java.util.List<com.bootdo.clouddoadmin.domain.MenuDO> com.bootdo.clouddoadmin.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-13 19:11:38.881  INFO 8872 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu],methods=[POST]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.save(com.bootdo.clouddoadmin.domain.MenuDO)
2019-06-13 19:11:38.881  INFO 8872 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/tree],methods=[GET]}" onto com.bootdo.clouddoadmin.domain.Tree<com.bootdo.clouddoadmin.domain.MenuDO> com.bootdo.clouddoadmin.controller.MenuController.tree()
2019-06-13 19:11:38.882  INFO 8872 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/clearCache],methods=[GET]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.clearCache()
2019-06-13 19:11:38.882  INFO 8872 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/roleId],methods=[GET]}" onto java.util.List<java.lang.Long> com.bootdo.clouddoadmin.controller.MenuController.menuIdsByRoleId(java.lang.Long)
2019-06-13 19:11:38.883  INFO 8872 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/userMenus],methods=[GET]}" onto java.util.List<com.bootdo.clouddocommon.dto.MenuDTO> com.bootdo.clouddoadmin.controller.MenuController.userMenus()
2019-06-13 19:11:38.884  INFO 8872 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/currentUserMenus],methods=[GET]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.currentUserMenus()
2019-06-13 19:11:38.888  INFO 8872 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role],methods=[PUT]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.RoleController.update(com.bootdo.clouddoadmin.domain.RoleDO)
2019-06-13 19:11:38.889  INFO 8872 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role],methods=[GET]}" onto com.bootdo.clouddocommon.utils.PageUtils com.bootdo.clouddoadmin.controller.RoleController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-13 19:11:38.889  INFO 8872 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role],methods=[POST]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.RoleController.save(com.bootdo.clouddoadmin.domain.RoleDO)
2019-06-13 19:11:38.890  INFO 8872 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/userId/{userId}],methods=[GET]}" onto java.util.List<java.lang.Long> com.bootdo.clouddoadmin.controller.RoleController.roleIdByUserId(java.lang.Long)
2019-06-13 19:11:38.891  INFO 8872 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.TestController.test()
2019-06-13 19:11:38.892  INFO 8872 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test1],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.TestController.test1()
2019-06-13 19:11:38.895  INFO 8872 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user],methods=[DELETE]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.remove(java.lang.Long)
2019-06-13 19:11:38.895  INFO 8872 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.get(java.lang.Long)
2019-06-13 19:11:38.895  INFO 8872 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user],methods=[PUT]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.update(com.bootdo.clouddoadmin.dto.UserDTO)
2019-06-13 19:11:38.896  INFO 8872 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user],methods=[POST]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.save(com.bootdo.clouddoadmin.dto.UserDTO)
2019-06-13 19:11:38.896  INFO 8872 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/batchRemove],methods=[POST]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.batchRemove(java.lang.Long[])
2019-06-13 19:11:38.896  INFO 8872 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/tokenUser],methods=[GET]}" onto public java.security.Principal com.bootdo.clouddoadmin.controller.UserController.user(java.security.Principal)
2019-06-13 19:11:38.897  INFO 8872 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/currentUser],methods=[GET]}" onto public com.bootdo.clouddocommon.dto.LoginUserDTO com.bootdo.clouddoadmin.controller.UserController.currentUser()
2019-06-13 19:11:38.897  INFO 8872 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/roleId/{roleId}],methods=[GET]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.getTeacherList(java.lang.Long,java.util.Map<java.lang.String, java.lang.Object>)
2019-06-13 19:11:38.897  INFO 8872 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/exits],methods=[POST]}" onto boolean com.bootdo.clouddoadmin.controller.UserController.exits(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-13 19:11:38.902  INFO 8872 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-06-13 19:11:38.903  INFO 8872 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-06-13 19:11:38.904  INFO 8872 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-06-13 19:11:38.910  INFO 8872 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-06-13 19:11:38.912  INFO 8872 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-13 19:11:39.112  INFO 8872 --- [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 2 endpoint(s) beneath base path '/actuator'
2019-06-13 19:11:39.133  INFO 8872 --- [main] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-06-13 19:11:39.134  INFO 8872 --- [main] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-06-13 19:11:39.135  INFO 8872 --- [main] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-13 19:11:40.129  INFO 8872 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@40863800, org.springframework.security.web.context.SecurityContextPersistenceFilter@3ba97962, org.springframework.security.web.header.HeaderWriterFilter@2beee3e8, org.springframework.security.web.authentication.logout.LogoutFilter@18b04526, org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter@6cd7f381, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@2f73f0c7, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3bcc8f13, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4ec427, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5950054d, org.springframework.security.web.session.SessionManagementFilter@58bad46f, org.springframework.security.web.access.ExceptionTranslationFilter@35b3c1f6, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@241d1052]
2019-06-13 19:11:40.152  INFO 8872 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: org.springframework.security.oauth2.config.annotation.web.configuration.ResourceServerConfiguration$NotOAuthRequestMatcher@714bffd5, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6ac9b66b, org.springframework.security.web.context.SecurityContextPersistenceFilter@40c28b0d, org.springframework.security.web.header.HeaderWriterFilter@3220c28, org.springframework.security.web.authentication.logout.LogoutFilter@54941dfd, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@edbc2bf, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@25421809, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@cf984d9, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1fa98a22, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4491eaeb, org.springframework.security.web.session.SessionManagementFilter@6ae42248, org.springframework.security.web.access.ExceptionTranslationFilter@58f290bc, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@644947ee]
2019-06-13 19:11:40.200  INFO 8872 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1d622556, org.springframework.security.web.context.SecurityContextPersistenceFilter@35ceec81, org.springframework.security.web.header.HeaderWriterFilter@51141f64, org.springframework.security.web.csrf.CsrfFilter@4cd5fc46, org.springframework.security.web.authentication.logout.LogoutFilter@1f5d7fd5, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@70697478, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@498e41a4, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@42b43a6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@d13379e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7c8df667, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4b9f7edc, org.springframework.security.web.session.SessionManagementFilter@32c0fecc, org.springframework.security.web.access.ExceptionTranslationFilter@3221588e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@78f5cbc5]
2019-06-13 19:11:40.278  INFO 8872 --- [main] pertySourcedRequestMappingHandlerMapping : Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2019-06-13 19:11:40.534  INFO 8872 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService  'clientInboundChannelExecutor'
2019-06-13 19:11:40.556  INFO 8872 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-06-13 19:11:40.583  INFO 8872 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-06-13 19:11:40.639  INFO 8872 --- [main] o.s.w.s.s.s.WebSocketHandlerMapping      : Mapped URL path [/endpoint/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-06-13 19:11:40.666  INFO 8872 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService  'brokerChannelExecutor'
2019-06-13 19:11:40.893  WARN 8872 --- [main] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2019-06-13 19:11:40.893  INFO 8872 --- [main] c.n.c.sources.URLConfigurationSource     : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-06-13 19:11:41.100  INFO 8872 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-13 19:11:41.274  INFO 8872 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7ca20101: startup date [Thu Jun 13 19:11:28 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1a677343
2019-06-13 19:11:41.376  INFO 8872 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-13 19:11:41.393  INFO 8872 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-13 19:11:41.434  INFO 8872 --- [main] .m.m.a.ExceptionHandlerExceptionResolver : Detected @ExceptionHandler methods in exceptionAdviceHandler
2019-06-13 19:11:43.451  INFO 8872 --- [main] o.s.ui.freemarker.SpringTemplateLoader   : SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7ca20101: startup date [Thu Jun 13 19:11:28 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@1a677343] and template loader path [classpath:/templates/]
2019-06-13 19:11:43.453  INFO 8872 --- [main] o.s.w.s.v.f.FreeMarkerConfigurer         : ClassTemplateLoader for Spring macros added to FreeMarker configuration
2019-06-13 19:11:44.437  INFO 8872 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2019-06-13 19:11:44.438  INFO 8872 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2019-06-13 19:11:44.451  INFO 8872 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'environmentManager' has been autodetected for JMX exposure
2019-06-13 19:11:44.453  INFO 8872 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'refreshScope' has been autodetected for JMX exposure
2019-06-13 19:11:44.454  INFO 8872 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2019-06-13 19:11:44.459  INFO 8872 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2019-06-13 19:11:44.492  INFO 8872 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2019-06-13 19:11:44.511  INFO 8872 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=7ca20101,type=ConfigurationPropertiesRebinder]
2019-06-13 19:11:44.522  INFO 8872 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-06-13 19:11:44.534  INFO 8872 --- [main] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase 0
2019-06-13 19:11:44.581  INFO 8872 --- [main] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2019-06-13 19:11:44.724  INFO 8872 --- [main] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2019-06-13 19:11:46.348  INFO 8872 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using JSON encoding codec LegacyJacksonJson
2019-06-13 19:11:46.348  INFO 8872 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using JSON decoding codec LegacyJacksonJson
2019-06-13 19:11:46.824  INFO 8872 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using XML encoding codec XStreamXml
2019-06-13 19:11:46.824  INFO 8872 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using XML decoding codec XStreamXml
2019-06-13 19:11:47.271  INFO 8872 --- [main] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 19:11:47.684  INFO 8872 --- [main] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2019-06-13 19:11:47.684  INFO 8872 --- [main] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2019-06-13 19:11:47.684  INFO 8872 --- [main] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2019-06-13 19:11:47.684  INFO 8872 --- [main] com.netflix.discovery.DiscoveryClient    : Application is null : false
2019-06-13 19:11:47.685  INFO 8872 --- [main] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2019-06-13 19:11:47.685  INFO 8872 --- [main] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2019-06-13 19:11:47.685  INFO 8872 --- [main] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2019-06-13 19:11:48.372  INFO 8872 --- [main] com.netflix.discovery.DiscoveryClient    : The response status is 200
2019-06-13 19:11:48.388  INFO 8872 --- [main] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2019-06-13 19:11:48.391  INFO 8872 --- [main] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2019-06-13 19:11:48.397  INFO 8872 --- [main] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1560424308394 with initial instances count: 1
2019-06-13 19:11:48.423  INFO 8872 --- [main] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application api-admin with eureka with status UP
2019-06-13 19:11:48.424  INFO 8872 --- [main] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1560424308424, current=UP, previous=STARTING]
2019-06-13 19:11:48.426  INFO 8872 --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_API-ADMIN/Lenovo-PC:api-admin:8005: registering service...
2019-06-13 19:11:48.433  INFO 8872 --- [main] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase 2147483647
2019-06-13 19:11:48.434  INFO 8872 --- [main] d.s.w.p.DocumentationPluginsBootstrapper : Context refreshed
2019-06-13 19:11:48.825  INFO 8872 --- [main] d.s.w.p.DocumentationPluginsBootstrapper : Found 1 custom documentation plugin(s)
2019-06-13 19:11:49.127  INFO 8872 --- [main] s.d.s.w.s.ApiListingReferenceScanner     : Scanning for api listing references
2019-06-13 19:11:49.788  INFO 8872 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: removeUsingPOST_1
2019-06-13 19:11:50.931  INFO 8872 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: listUsingGET_1
2019-06-13 19:11:50.940  INFO 8872 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: listUsingGET_2
2019-06-13 19:11:50.947  INFO 8872 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: saveUsingPOST_1
2019-06-13 19:11:50.950  INFO 8872 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: treeUsingGET_1
2019-06-13 19:11:50.953  INFO 8872 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: updateUsingPUT_1
2019-06-13 19:11:50.963  INFO 8872 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: listUsingGET_3
2019-06-13 19:11:51.159  INFO 8872 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: saveUsingPOST_2
2019-06-13 19:11:51.161  INFO 8872 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: updateUsingPUT_2
2019-06-13 19:11:51.180  INFO 8872 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: getUsingGET_1
2019-06-13 19:11:51.184  INFO 8872 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: removeUsingDELETE_1
2019-06-13 19:11:51.192  INFO 8872 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: saveUsingPOST_3
2019-06-13 19:11:51.194  INFO 8872 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: updateUsingPUT_3
2019-06-13 19:11:52.201  INFO 8872 --- [main] o.s.m.s.b.SimpleBrokerMessageHandler     : Starting...
2019-06-13 19:11:52.203  INFO 8872 --- [main] o.s.m.s.b.SimpleBrokerMessageHandler     : BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-06-13 19:11:52.204  INFO 8872 --- [main] o.s.m.s.b.SimpleBrokerMessageHandler     : Started.
2019-06-13 19:11:52.856  INFO 8872 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8005 (http) with context path ''
2019-06-13 19:11:52.858  INFO 8872 --- [main] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 8005
2019-06-13 19:11:52.864  INFO 8872 --- [main] c.b.c.ClouddoAdminApplication            : Started ClouddoAdminApplication in 26.885 seconds (JVM running for 28.958)
2019-06-13 19:11:57.075  INFO 8872 --- [RMI TCP Connection(3)-10.255.44.113] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-06-13 19:11:57.076  INFO 8872 --- [RMI TCP Connection(3)-10.255.44.113] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2019-06-13 19:11:57.077 ERROR 8872 --- [DiscoveryClient-InstanceInfoReplicator-0] c.n.d.s.t.d.RedirectingEurekaHttpClient  : Request execution error

com.sun.jersey.api.client.ClientHandlerException: java.net.SocketTimeoutException: Read timed out
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:187) ~[jersey-apache-client4-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.filter.GZIPContentEncodingFilter.handle(GZIPContentEncodingFilter.java:123) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.netflix.discovery.EurekaIdentityHeaderFilter.handle(EurekaIdentityHeaderFilter.java:27) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.sun.jersey.api.client.Client.handle(Client.java:652) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.WebResource.handle(WebResource.java:682) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.WebResource.access$200(WebResource.java:74) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.sun.jersey.api.client.WebResource$Builder.post(WebResource.java:570) ~[jersey-client-1.19.1.jar:1.19.1]
	at com.netflix.discovery.shared.transport.jersey.AbstractJerseyEurekaHttpClient.register(AbstractJerseyEurekaHttpClient.java:56) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.MetricsCollectingEurekaHttpClient.execute(MetricsCollectingEurekaHttpClient.java:73) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.executeOnNewServer(RedirectingEurekaHttpClient.java:118) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.RedirectingEurekaHttpClient.execute(RedirectingEurekaHttpClient.java:79) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:120) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101) [eureka-client-1.9.3.jar:1.9.3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_181]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_181]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method) ~[na:1.8.0_181]
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116) ~[na:1.8.0_181]
	at java.net.SocketInputStream.read(SocketInputStream.java:171) ~[na:1.8.0_181]
	at java.net.SocketInputStream.read(SocketInputStream.java:141) ~[na:1.8.0_181]
	at org.apache.http.impl.io.AbstractSessionInputBuffer.fillBuffer(AbstractSessionInputBuffer.java:161) ~[httpcore-4.4.10.jar:4.4.10]
	at org.apache.http.impl.io.SocketInputBuffer.fillBuffer(SocketInputBuffer.java:82) ~[httpcore-4.4.10.jar:4.4.10]
	at org.apache.http.impl.io.AbstractSessionInputBuffer.readLine(AbstractSessionInputBuffer.java:278) ~[httpcore-4.4.10.jar:4.4.10]
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:138) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:56) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:259) ~[httpcore-4.4.10.jar:4.4.10]
	at org.apache.http.impl.AbstractHttpClientConnection.receiveResponseHeader(AbstractHttpClientConnection.java:286) ~[httpcore-4.4.10.jar:4.4.10]
	at org.apache.http.impl.conn.DefaultClientConnection.receiveResponseHeader(DefaultClientConnection.java:257) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.impl.conn.AbstractClientConnAdapter.receiveResponseHeader(AbstractClientConnAdapter.java:230) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.protocol.HttpRequestExecutor.doReceiveResponse(HttpRequestExecutor.java:273) ~[httpcore-4.4.10.jar:4.4.10]
	at org.apache.http.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:125) ~[httpcore-4.4.10.jar:4.4.10]
	at org.apache.http.impl.client.DefaultRequestDirector.tryExecute(DefaultRequestDirector.java:684) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:486) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:835) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:118) ~[httpclient-4.5.6.jar:4.5.6]
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56) ~[httpclient-4.5.6.jar:4.5.6]
	at com.sun.jersey.client.apache4.ApacheHttpClient4Handler.handle(ApacheHttpClient4Handler.java:173) ~[jersey-apache-client4-1.19.1.jar:1.19.1]
	... 30 common frames omitted

2019-06-13 19:11:57.078  WARN 8872 --- [DiscoveryClient-InstanceInfoReplicator-0] c.n.d.s.t.d.RetryableEurekaHttpClient    : Request execution failed with message: java.net.SocketTimeoutException: Read timed out
2019-06-13 19:11:57.079  WARN 8872 --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_API-ADMIN/Lenovo-PC:api-admin:8005 - registration failed Cannot execute request on any known server

com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121) [eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101) [eureka-client-1.9.3.jar:1.9.3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_181]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_181]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]

2019-06-13 19:11:57.079  WARN 8872 --- [DiscoveryClient-InstanceInfoReplicator-0] c.n.discovery.InstanceInfoReplicator     : There was a problem with the instance info replicator

com.netflix.discovery.shared.transport.TransportException: Cannot execute request on any known server
	at com.netflix.discovery.shared.transport.decorator.RetryableEurekaHttpClient.execute(RetryableEurekaHttpClient.java:112) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator$1.execute(EurekaHttpClientDecorator.java:59) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.SessionedEurekaHttpClient.execute(SessionedEurekaHttpClient.java:77) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.shared.transport.decorator.EurekaHttpClientDecorator.register(EurekaHttpClientDecorator.java:56) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.DiscoveryClient.register(DiscoveryClient.java:829) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.InstanceInfoReplicator.run(InstanceInfoReplicator.java:121) ~[eureka-client-1.9.3.jar:1.9.3]
	at com.netflix.discovery.InstanceInfoReplicator$1.run(InstanceInfoReplicator.java:101) [eureka-client-1.9.3.jar:1.9.3]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) [na:1.8.0_181]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) [na:1.8.0_181]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) [na:1.8.0_181]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]

2019-06-13 19:11:58.555  INFO 8872 --- [RMI TCP Connection(3)-10.255.44.113] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 1479 ms
2019-06-13 19:12:01.765  INFO 8872 --- [RMI TCP Connection(2)-10.255.44.113] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2019-06-13 19:12:02.438  INFO 8872 --- [RMI TCP Connection(2)-10.255.44.113] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2019-06-13 19:12:02.440  INFO 8872 --- [RMI TCP Connection(2)-10.255.44.113] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2019-06-13 19:12:27.081  INFO 8872 --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_API-ADMIN/Lenovo-PC:api-admin:8005: registering service...
2019-06-13 19:12:27.133  INFO 8872 --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_API-ADMIN/Lenovo-PC:api-admin:8005 - registration status: 204
2019-06-13 19:12:40.664  INFO 8872 --- [MessageBroker-1] o.s.w.s.c.WebSocketMessageBrokerStats    : WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-06-13 19:13:55.522  INFO 8872 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/router
2019-06-13 19:13:55.523  INFO 8872 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/currentUser
2019-06-13 19:13:55.523  INFO 8872 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 19:13:55.523  INFO 8872 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 19:13:55.575  INFO 8872 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.currentUser
2019-06-13 19:13:55.575  INFO 8872 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.LoginController.router
2019-06-13 19:13:55.575  INFO 8872 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 19:13:55.575  INFO 8872 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 19:13:56.068  INFO 8872 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 546
2019-06-13 19:13:56.074  INFO 8872 --- [http-nio-8005-exec-2] .s.a.AnnotationAsyncExecutionInterceptor : More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-06-13 19:13:56.111 ERROR 8872 --- [http-nio-8005-exec-4] o.s.s.o.provider.endpoint.TokenEndpoint  : Handling error: InternalAuthenticationServiceException, A granted authority textual representation is required

org.springframework.security.authentication.InternalAuthenticationServiceException: A granted authority textual representation is required
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.retrieveUser(DaoAuthenticationProvider.java:119) ~[spring-security-core-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(AbstractUserDetailsAuthenticationProvider.java:144) ~[spring-security-core-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:174) ~[spring-security-core-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:199) ~[spring-security-core-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$AuthenticationManagerDelegator.authenticate(WebSecurityConfigurerAdapter.java:512) ~[spring-security-config-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.oauth2.provider.password.ResourceOwnerPasswordTokenGranter.getOAuth2Authentication(ResourceOwnerPasswordTokenGranter.java:71) ~[spring-security-oauth2-2.2.1.RELEASE.jar:na]
	at org.springframework.security.oauth2.provider.token.AbstractTokenGranter.getAccessToken(AbstractTokenGranter.java:70) ~[spring-security-oauth2-2.2.1.RELEASE.jar:na]
	at org.springframework.security.oauth2.provider.token.AbstractTokenGranter.grant(AbstractTokenGranter.java:65) ~[spring-security-oauth2-2.2.1.RELEASE.jar:na]
	at org.springframework.security.oauth2.provider.CompositeTokenGranter.grant(CompositeTokenGranter.java:38) ~[spring-security-oauth2-2.2.1.RELEASE.jar:na]
	at org.springframework.security.oauth2.config.annotation.web.configurers.AuthorizationServerEndpointsConfigurer$4.grant(AuthorizationServerEndpointsConfigurer.java:561) ~[spring-security-oauth2-2.2.1.RELEASE.jar:na]
	at org.springframework.security.oauth2.provider.endpoint.TokenEndpoint.postAccessToken(TokenEndpoint.java:132) ~[spring-security-oauth2-2.2.1.RELEASE.jar:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974) [spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877) [spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851) [spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) [tomcat-embed-websocket-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123) [druid-1.1.12.jar:1.1.12]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90) [spring-boot-actuator-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter.successfulAuthentication(ClientCredentialsTokenEndpointFilter.java:131) [spring-security-oauth2-2.2.1.RELEASE.jar:na]
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:240) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:155) [spring-boot-actuator-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:123) [spring-boot-actuator-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108) [spring-boot-actuator-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:800) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:800) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1471) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
Caused by: java.lang.IllegalArgumentException: A granted authority textual representation is required
	at org.springframework.util.Assert.hasText(Assert.java:276) ~[spring-core-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.security.core.authority.SimpleGrantedAuthority.<init>(SimpleGrantedAuthority.java:38) ~[spring-security-core-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193) ~[na:1.8.0_181]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:175) ~[na:1.8.0_181]
	at java.util.HashMap$KeySpliterator.forEachRemaining(HashMap.java:1553) ~[na:1.8.0_181]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481) ~[na:1.8.0_181]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471) ~[na:1.8.0_181]
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708) ~[na:1.8.0_181]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[na:1.8.0_181]
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499) ~[na:1.8.0_181]
	at com.bootdo.clouddoadmin.service.impl.UserDetailsServiceImpl.loadUserByUsername(UserDetailsServiceImpl.java:44) ~[classes/:na]
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.retrieveUser(DaoAuthenticationProvider.java:104) ~[spring-security-core-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	... 113 common frames omitted

2019-06-13 19:13:56.136  INFO 8872 --- [SimpleAsyncTaskExecutor-1] feign.RequestInterceptor                 : ------feign设置token128
2019-06-13 19:13:56.279  INFO 8872 --- [SimpleAsyncTaskExecutor-1] s.c.a.AnnotationConfigApplicationContext : Refreshing SpringClientFactory-api-base: startup date [Thu Jun 13 19:13:56 CST 2019]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@7ca20101
2019-06-13 19:13:56.775  INFO 8872 --- [SimpleAsyncTaskExecutor-1] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-06-13 19:13:57.980  INFO 8872 --- [SimpleAsyncTaskExecutor-1] c.netflix.config.ChainedDynamicProperty  : Flipping property: api-base.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-06-13 19:13:58.004  INFO 8872 --- [SimpleAsyncTaskExecutor-1] c.n.u.concurrent.ShutdownEnabledTimer    : Shutdown hook installed for: NFLoadBalancer-PingTimer-api-base
2019-06-13 19:13:58.036  INFO 8872 --- [SimpleAsyncTaskExecutor-1] c.netflix.loadbalancer.BaseLoadBalancer  : Client: api-base instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=api-base,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2019-06-13 19:13:58.127  INFO 8872 --- [SimpleAsyncTaskExecutor-1] c.n.l.DynamicServerListLoadBalancer      : Using serverListUpdater PollingServerListUpdater
2019-06-13 19:13:58.131  INFO 8872 --- [SimpleAsyncTaskExecutor-1] c.n.l.DynamicServerListLoadBalancer      : DynamicServerListLoadBalancer for client api-base initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=api-base,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@653a236e
2019-06-13 19:13:58.510 ERROR 8872 --- [SimpleAsyncTaskExecutor-1] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy197.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy197.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 19:15:07.998  INFO 4396 --- [main] c.b.c.ClouddoAdminApplication            : No active profile set, falling back to default profiles: default
2019-06-13 19:15:08.020  INFO 4396 --- [main] ConfigServletWebServerApplicationContext : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@535779e4: startup date [Thu Jun 13 19:15:08 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6f03482
2019-06-13 19:15:09.672  INFO 4396 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-13 19:15:10.243  INFO 4396 --- [main] o.s.cloud.context.scope.GenericScope     : BeanFactory id=d229a6ea-016d-322a-b2d4-3e4463f5e4cd
2019-06-13 19:15:10.278  INFO 4396 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-06-13 19:15:10.516  INFO 4396 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a056dd1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 19:15:10.835  INFO 4396 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.bootdo.clouddoadmin.config.RedisConfig$$EnhancerBySpringCGLIB$$2cb2b722] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 19:15:10.852  INFO 4396 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.bootdo.clouddoadmin.config.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 19:15:10.941  INFO 4396 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$261f70ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 19:15:11.480  INFO 4396 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8005 (http)
2019-06-13 19:15:11.509  INFO 4396 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2019-06-13 19:15:11.509  INFO 4396 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.32
2019-06-13 19:15:11.514  INFO 4396 --- [localhost-startStop-1] o.a.catalina.core.AprLifecycleListener   : The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_181\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;C:;C:\Program Files\Java\jdk1.8.0_181\bin;D:\myApps\apache-maven-3.6.0\bin;C:\Program Files\Java\jdk1.8.0_181\jre\bin;C:\Program Files\Java\jdk1.8.0_181\bin ;C:\Program Files\TortoiseGit\bin;C:\windows\system32;C:\windows;C:\windows\system32\wbem;D:\StudyTools\XAMPP\mysql\bin;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;D:\系统工具\Git\cmd;D:\StudyTools\NodeJs\;D:\StudyTools\Elang\erl10.0.1\bin;D:\StudyTools\RabbitMQ Server\rabbitmq_server-3.7.7\sbin;;D:\StudyTools\DockerToolbox;D:\StudyTools\NodeJs\node_global;D:\StudyTools\WebStorm 2019.1.2\bin;;.]
2019-06-13 19:15:11.698  INFO 4396 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2019-06-13 19:15:11.698  INFO 4396 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 3678 ms
2019-06-13 19:15:11.721  INFO 4396 --- [localhost-startStop-1] c.b.c.config.DruidConfiguration          : init Druid Servlet Configuration 
2019-06-13 19:15:12.052  WARN 4396 --- [localhost-startStop-1] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2019-06-13 19:15:12.053  INFO 4396 --- [localhost-startStop-1] c.n.c.sources.URLConfigurationSource     : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-06-13 19:15:12.064  INFO 4396 --- [localhost-startStop-1] c.netflix.config.DynamicPropertyFactory  : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@3e9cc72d
2019-06-13 19:15:14.726  INFO 4396 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2019-06-13 19:15:14.727  INFO 4396 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'webMvcMetricsFilter' to: [/*]
2019-06-13 19:15:14.727  INFO 4396 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-06-13 19:15:14.727  INFO 4396 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-06-13 19:15:14.727  INFO 4396 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2019-06-13 19:15:14.728  INFO 4396 --- [localhost-startStop-1] .s.DelegatingFilterProxyRegistrationBean : Mapping filter: 'springSecurityFilterChain' to: [/*]
2019-06-13 19:15:14.728  INFO 4396 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpTraceFilter' to: [/*]
2019-06-13 19:15:14.728  INFO 4396 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'webStatFilter' to urls: [/*]
2019-06-13 19:15:14.728  INFO 4396 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Servlet statViewServlet mapped to [/druid/*]
2019-06-13 19:15:14.730  INFO 4396 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Servlet dispatcherServlet mapped to [/]
2019-06-13 19:15:15.894  INFO 4396 --- [main] s.c.a.AnnotationConfigApplicationContext : Refreshing FeignContext-course: startup date [Thu Jun 13 19:15:15 CST 2019]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@535779e4
2019-06-13 19:15:15.920  INFO 4396 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-06-13 19:15:16.154  INFO 4396 --- [main] s.c.a.AnnotationConfigApplicationContext : Refreshing FeignContext-api-base: startup date [Thu Jun 13 19:15:16 CST 2019]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@535779e4
2019-06-13 19:15:16.171  INFO 4396 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-06-13 19:15:16.727  INFO 4396 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/authorize]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.security.oauth2.provider.endpoint.AuthorizationEndpoint.authorize(java.util.Map<java.lang.String, java.lang.Object>,java.util.Map<java.lang.String, java.lang.String>,org.springframework.web.bind.support.SessionStatus,java.security.Principal)
2019-06-13 19:15:16.729  INFO 4396 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/authorize],methods=[POST],params=[user_oauth_approval]}" onto public org.springframework.web.servlet.View org.springframework.security.oauth2.provider.endpoint.AuthorizationEndpoint.approveOrDeny(java.util.Map<java.lang.String, java.lang.String>,java.util.Map<java.lang.String, ?>,org.springframework.web.bind.support.SessionStatus,java.security.Principal)
2019-06-13 19:15:16.730  INFO 4396 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/token],methods=[GET]}" onto public org.springframework.http.ResponseEntity<org.springframework.security.oauth2.common.OAuth2AccessToken> org.springframework.security.oauth2.provider.endpoint.TokenEndpoint.getAccessToken(java.security.Principal,java.util.Map<java.lang.String, java.lang.String>) throws org.springframework.web.HttpRequestMethodNotSupportedException
2019-06-13 19:15:16.731  INFO 4396 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/token],methods=[POST]}" onto public org.springframework.http.ResponseEntity<org.springframework.security.oauth2.common.OAuth2AccessToken> org.springframework.security.oauth2.provider.endpoint.TokenEndpoint.postAccessToken(java.security.Principal,java.util.Map<java.lang.String, java.lang.String>) throws org.springframework.web.HttpRequestMethodNotSupportedException
2019-06-13 19:15:16.731  INFO 4396 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/check_token]}" onto public java.util.Map<java.lang.String, ?> org.springframework.security.oauth2.provider.endpoint.CheckTokenEndpoint.checkToken(java.lang.String)
2019-06-13 19:15:16.732  INFO 4396 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/confirm_access]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.security.oauth2.provider.endpoint.WhitelabelApprovalEndpoint.getAccessConfirmation(java.util.Map<java.lang.String, java.lang.Object>,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-06-13 19:15:16.732  INFO 4396 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/error]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.security.oauth2.provider.endpoint.WhitelabelErrorEndpoint.handleError(javax.servlet.http.HttpServletRequest)
2019-06-13 19:15:16.821  INFO 4396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-06-13 19:15:16.822  INFO 4396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/remove],methods=[POST]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.DeptController.remove(java.lang.Long)
2019-06-13 19:15:16.823  INFO 4396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/batchRemove],methods=[POST]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.DeptController.remove(java.lang.Long[])
2019-06-13 19:15:16.823  INFO 4396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/update]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.DeptController.update(com.bootdo.clouddoadmin.domain.DeptDO)
2019-06-13 19:15:16.823  INFO 4396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/list],methods=[GET]}" onto public java.util.List<com.bootdo.clouddoadmin.domain.DeptDO> com.bootdo.clouddoadmin.controller.DeptController.list()
2019-06-13 19:15:16.823  INFO 4396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/save],methods=[POST]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.DeptController.save(com.bootdo.clouddoadmin.domain.DeptDO)
2019-06-13 19:15:16.824  INFO 4396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/tree],methods=[GET]}" onto public com.bootdo.clouddoadmin.domain.Tree<com.bootdo.clouddoadmin.domain.DeptDO> com.bootdo.clouddoadmin.controller.DeptController.tree()
2019-06-13 19:15:16.824  INFO 4396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.DeptController.dept()
2019-06-13 19:15:16.825  INFO 4396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.DeptController.treeView()
2019-06-13 19:15:16.826  INFO 4396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/logout]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.LoginController.logout(java.lang.String)
2019-06-13 19:15:16.826  INFO 4396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/router],methods=[GET]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.LoginController.router()
2019-06-13 19:15:16.830  INFO 4396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu],methods=[DELETE]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.remove(java.lang.Long)
2019-06-13 19:15:16.830  INFO 4396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/{id}],methods=[GET]}" onto com.bootdo.clouddoadmin.domain.MenuDO com.bootdo.clouddoadmin.controller.MenuController.get(java.lang.Long)
2019-06-13 19:15:16.830  INFO 4396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu],methods=[PUT]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.update(com.bootdo.clouddoadmin.domain.MenuDO)
2019-06-13 19:15:16.831  INFO 4396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu],methods=[GET]}" onto java.util.List<com.bootdo.clouddoadmin.domain.Tree<com.bootdo.clouddoadmin.domain.MenuDO>> com.bootdo.clouddoadmin.controller.MenuController.list()
2019-06-13 19:15:16.831  INFO 4396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/list],methods=[GET]}" onto java.util.List<com.bootdo.clouddoadmin.domain.MenuDO> com.bootdo.clouddoadmin.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-13 19:15:16.831  INFO 4396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu],methods=[POST]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.save(com.bootdo.clouddoadmin.domain.MenuDO)
2019-06-13 19:15:16.832  INFO 4396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/tree],methods=[GET]}" onto com.bootdo.clouddoadmin.domain.Tree<com.bootdo.clouddoadmin.domain.MenuDO> com.bootdo.clouddoadmin.controller.MenuController.tree()
2019-06-13 19:15:16.832  INFO 4396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/clearCache],methods=[GET]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.clearCache()
2019-06-13 19:15:16.833  INFO 4396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/userMenus],methods=[GET]}" onto java.util.List<com.bootdo.clouddocommon.dto.MenuDTO> com.bootdo.clouddoadmin.controller.MenuController.userMenus()
2019-06-13 19:15:16.833  INFO 4396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/currentUserMenus],methods=[GET]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.currentUserMenus()
2019-06-13 19:15:16.834  INFO 4396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/roleId],methods=[GET]}" onto java.util.List<java.lang.Long> com.bootdo.clouddoadmin.controller.MenuController.menuIdsByRoleId(java.lang.Long)
2019-06-13 19:15:16.837  INFO 4396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role],methods=[PUT]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.RoleController.update(com.bootdo.clouddoadmin.domain.RoleDO)
2019-06-13 19:15:16.837  INFO 4396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role],methods=[GET]}" onto com.bootdo.clouddocommon.utils.PageUtils com.bootdo.clouddoadmin.controller.RoleController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-13 19:15:16.837  INFO 4396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role],methods=[POST]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.RoleController.save(com.bootdo.clouddoadmin.domain.RoleDO)
2019-06-13 19:15:16.838  INFO 4396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/userId/{userId}],methods=[GET]}" onto java.util.List<java.lang.Long> com.bootdo.clouddoadmin.controller.RoleController.roleIdByUserId(java.lang.Long)
2019-06-13 19:15:16.839  INFO 4396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.TestController.test()
2019-06-13 19:15:16.839  INFO 4396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test1],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.TestController.test1()
2019-06-13 19:15:16.841  INFO 4396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user],methods=[DELETE]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.remove(java.lang.Long)
2019-06-13 19:15:16.841  INFO 4396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.get(java.lang.Long)
2019-06-13 19:15:16.842  INFO 4396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user],methods=[PUT]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.update(com.bootdo.clouddoadmin.dto.UserDTO)
2019-06-13 19:15:16.842  INFO 4396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user],methods=[POST]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.save(com.bootdo.clouddoadmin.dto.UserDTO)
2019-06-13 19:15:16.842  INFO 4396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/batchRemove],methods=[POST]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.batchRemove(java.lang.Long[])
2019-06-13 19:15:16.842  INFO 4396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/tokenUser],methods=[GET]}" onto public java.security.Principal com.bootdo.clouddoadmin.controller.UserController.user(java.security.Principal)
2019-06-13 19:15:16.843  INFO 4396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/roleId/{roleId}],methods=[GET]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.getTeacherList(java.lang.Long,java.util.Map<java.lang.String, java.lang.Object>)
2019-06-13 19:15:16.843  INFO 4396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/currentUser],methods=[GET]}" onto public com.bootdo.clouddocommon.dto.LoginUserDTO com.bootdo.clouddoadmin.controller.UserController.currentUser()
2019-06-13 19:15:16.843  INFO 4396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/exits],methods=[POST]}" onto boolean com.bootdo.clouddoadmin.controller.UserController.exits(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-13 19:15:16.846  INFO 4396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-06-13 19:15:16.847  INFO 4396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-06-13 19:15:16.848  INFO 4396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-06-13 19:15:16.852  INFO 4396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-06-13 19:15:16.852  INFO 4396 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-13 19:15:17.038  INFO 4396 --- [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 2 endpoint(s) beneath base path '/actuator'
2019-06-13 19:15:17.057  INFO 4396 --- [main] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-06-13 19:15:17.059  INFO 4396 --- [main] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-06-13 19:15:17.060  INFO 4396 --- [main] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-13 19:15:17.964  INFO 4396 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4fd37449, org.springframework.security.web.context.SecurityContextPersistenceFilter@60194904, org.springframework.security.web.header.HeaderWriterFilter@173a5fad, org.springframework.security.web.authentication.logout.LogoutFilter@4c8d45cf, org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter@2166c48a, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@241d1052, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7742a276, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3ba97962, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5402612e, org.springframework.security.web.session.SessionManagementFilter@65d90b7f, org.springframework.security.web.access.ExceptionTranslationFilter@42d174ad, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2ceb68a1]
2019-06-13 19:15:17.995  INFO 4396 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: org.springframework.security.oauth2.config.annotation.web.configuration.ResourceServerConfiguration$NotOAuthRequestMatcher@5e8f0f98, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6bf0f70a, org.springframework.security.web.context.SecurityContextPersistenceFilter@4cf230bf, org.springframework.security.web.header.HeaderWriterFilter@5950054d, org.springframework.security.web.authentication.logout.LogoutFilter@4c2bea52, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@6e49b011, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@e91facf, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3dc55719, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@64665781, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5310e451, org.springframework.security.web.session.SessionManagementFilter@24018c8b, org.springframework.security.web.access.ExceptionTranslationFilter@40863800, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@62ab5e63]
2019-06-13 19:15:18.057  INFO 4396 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@d13379e, org.springframework.security.web.context.SecurityContextPersistenceFilter@1255de25, org.springframework.security.web.header.HeaderWriterFilter@62158991, org.springframework.security.web.csrf.CsrfFilter@738a39cc, org.springframework.security.web.authentication.logout.LogoutFilter@192f5f39, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@32c0fecc, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@4fc3529, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@35ceec81, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1686ed85, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5891b7c5, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7c8df667, org.springframework.security.web.session.SessionManagementFilter@40738846, org.springframework.security.web.access.ExceptionTranslationFilter@38e7860c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@51141f64]
2019-06-13 19:15:18.155  INFO 4396 --- [main] pertySourcedRequestMappingHandlerMapping : Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2019-06-13 19:15:18.475  INFO 4396 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService  'clientInboundChannelExecutor'
2019-06-13 19:15:18.497  INFO 4396 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-06-13 19:15:18.522  INFO 4396 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-06-13 19:15:18.578  INFO 4396 --- [main] o.s.w.s.s.s.WebSocketHandlerMapping      : Mapped URL path [/endpoint/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-06-13 19:15:18.606  INFO 4396 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService  'brokerChannelExecutor'
2019-06-13 19:15:18.825  WARN 4396 --- [main] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2019-06-13 19:15:18.825  INFO 4396 --- [main] c.n.c.sources.URLConfigurationSource     : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-06-13 19:15:18.983  INFO 4396 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-13 19:15:19.149  INFO 4396 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@535779e4: startup date [Thu Jun 13 19:15:08 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6f03482
2019-06-13 19:15:19.237  INFO 4396 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-13 19:15:19.238  INFO 4396 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-13 19:15:19.267  INFO 4396 --- [main] .m.m.a.ExceptionHandlerExceptionResolver : Detected @ExceptionHandler methods in exceptionAdviceHandler
2019-06-13 19:15:20.428  INFO 4396 --- [main] o.s.ui.freemarker.SpringTemplateLoader   : SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@535779e4: startup date [Thu Jun 13 19:15:08 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6f03482] and template loader path [classpath:/templates/]
2019-06-13 19:15:20.429  INFO 4396 --- [main] o.s.w.s.v.f.FreeMarkerConfigurer         : ClassTemplateLoader for Spring macros added to FreeMarker configuration
2019-06-13 19:15:21.006  INFO 4396 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2019-06-13 19:15:21.008  INFO 4396 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2019-06-13 19:15:21.020  INFO 4396 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'environmentManager' has been autodetected for JMX exposure
2019-06-13 19:15:21.022  INFO 4396 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'refreshScope' has been autodetected for JMX exposure
2019-06-13 19:15:21.023  INFO 4396 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2019-06-13 19:15:21.028  INFO 4396 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2019-06-13 19:15:21.039  INFO 4396 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2019-06-13 19:15:21.153  INFO 4396 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=535779e4,type=ConfigurationPropertiesRebinder]
2019-06-13 19:15:21.163  INFO 4396 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-06-13 19:15:21.175  INFO 4396 --- [main] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase 0
2019-06-13 19:15:21.195  INFO 4396 --- [main] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2019-06-13 19:15:21.235  INFO 4396 --- [main] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2019-06-13 19:15:21.688  INFO 4396 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using JSON encoding codec LegacyJacksonJson
2019-06-13 19:15:21.688  INFO 4396 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using JSON decoding codec LegacyJacksonJson
2019-06-13 19:15:21.806  INFO 4396 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using XML encoding codec XStreamXml
2019-06-13 19:15:21.807  INFO 4396 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using XML decoding codec XStreamXml
2019-06-13 19:15:22.024  INFO 4396 --- [main] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 19:15:22.283  INFO 4396 --- [main] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2019-06-13 19:15:22.283  INFO 4396 --- [main] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2019-06-13 19:15:22.283  INFO 4396 --- [main] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2019-06-13 19:15:22.283  INFO 4396 --- [main] com.netflix.discovery.DiscoveryClient    : Application is null : false
2019-06-13 19:15:22.283  INFO 4396 --- [main] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2019-06-13 19:15:22.283  INFO 4396 --- [main] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2019-06-13 19:15:22.284  INFO 4396 --- [main] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2019-06-13 19:15:22.595  INFO 4396 --- [main] com.netflix.discovery.DiscoveryClient    : The response status is 200
2019-06-13 19:15:22.598  INFO 4396 --- [main] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2019-06-13 19:15:22.600  INFO 4396 --- [main] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2019-06-13 19:15:22.604  INFO 4396 --- [main] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1560424522603 with initial instances count: 2
2019-06-13 19:15:22.623  INFO 4396 --- [main] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application api-admin with eureka with status UP
2019-06-13 19:15:22.623  INFO 4396 --- [main] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1560424522623, current=UP, previous=STARTING]
2019-06-13 19:15:22.625  INFO 4396 --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_API-ADMIN/Lenovo-PC:api-admin:8005: registering service...
2019-06-13 19:15:22.631  INFO 4396 --- [main] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase 2147483647
2019-06-13 19:15:22.631  INFO 4396 --- [main] d.s.w.p.DocumentationPluginsBootstrapper : Context refreshed
2019-06-13 19:15:22.664  INFO 4396 --- [main] d.s.w.p.DocumentationPluginsBootstrapper : Found 1 custom documentation plugin(s)
2019-06-13 19:15:22.669  INFO 4396 --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_API-ADMIN/Lenovo-PC:api-admin:8005 - registration status: 204
2019-06-13 19:15:22.781  INFO 4396 --- [main] s.d.s.w.s.ApiListingReferenceScanner     : Scanning for api listing references
2019-06-13 19:15:22.940  INFO 4396 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: removeUsingPOST_1
2019-06-13 19:15:23.042  INFO 4396 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: listUsingGET_1
2019-06-13 19:15:23.049  INFO 4396 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: listUsingGET_2
2019-06-13 19:15:23.057  INFO 4396 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: saveUsingPOST_1
2019-06-13 19:15:23.059  INFO 4396 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: treeUsingGET_1
2019-06-13 19:15:23.061  INFO 4396 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: updateUsingPUT_1
2019-06-13 19:15:23.068  INFO 4396 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: listUsingGET_3
2019-06-13 19:15:23.081  INFO 4396 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: saveUsingPOST_2
2019-06-13 19:15:23.082  INFO 4396 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: updateUsingPUT_2
2019-06-13 19:15:23.094  INFO 4396 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: getUsingGET_1
2019-06-13 19:15:23.097  INFO 4396 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: removeUsingDELETE_1
2019-06-13 19:15:23.105  INFO 4396 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: saveUsingPOST_3
2019-06-13 19:15:23.106  INFO 4396 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: updateUsingPUT_3
2019-06-13 19:15:23.123  INFO 4396 --- [main] o.s.m.s.b.SimpleBrokerMessageHandler     : Starting...
2019-06-13 19:15:23.124  INFO 4396 --- [main] o.s.m.s.b.SimpleBrokerMessageHandler     : BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-06-13 19:15:23.125  INFO 4396 --- [main] o.s.m.s.b.SimpleBrokerMessageHandler     : Started.
2019-06-13 19:15:23.190  INFO 4396 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8005 (http) with context path ''
2019-06-13 19:15:23.191  INFO 4396 --- [main] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 8005
2019-06-13 19:15:23.194  INFO 4396 --- [main] c.b.c.ClouddoAdminApplication            : Started ClouddoAdminApplication in 17.843 seconds (JVM running for 19.922)
2019-06-13 19:15:24.037  INFO 4396 --- [RMI TCP Connection(2)-10.255.44.113] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-06-13 19:15:24.038  INFO 4396 --- [RMI TCP Connection(2)-10.255.44.113] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2019-06-13 19:15:24.119  INFO 4396 --- [RMI TCP Connection(2)-10.255.44.113] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 81 ms
2019-06-13 19:15:24.331  INFO 4396 --- [RMI TCP Connection(3)-10.255.44.113] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2019-06-13 19:15:24.631  INFO 4396 --- [RMI TCP Connection(3)-10.255.44.113] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2019-06-13 19:15:24.633  INFO 4396 --- [RMI TCP Connection(3)-10.255.44.113] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2019-06-13 19:16:18.604  INFO 4396 --- [MessageBroker-1] o.s.w.s.c.WebSocketMessageBrokerStats    : WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-06-13 19:16:27.822 ERROR 4396 --- [http-nio-8005-exec-1] o.s.s.o.provider.endpoint.TokenEndpoint  : Handling error: InternalAuthenticationServiceException, A granted authority textual representation is required

org.springframework.security.authentication.InternalAuthenticationServiceException: A granted authority textual representation is required
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.retrieveUser(DaoAuthenticationProvider.java:119) ~[spring-security-core-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(AbstractUserDetailsAuthenticationProvider.java:144) ~[spring-security-core-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:174) ~[spring-security-core-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:199) ~[spring-security-core-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter$AuthenticationManagerDelegator.authenticate(WebSecurityConfigurerAdapter.java:512) ~[spring-security-config-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.oauth2.provider.password.ResourceOwnerPasswordTokenGranter.getOAuth2Authentication(ResourceOwnerPasswordTokenGranter.java:71) ~[spring-security-oauth2-2.2.1.RELEASE.jar:na]
	at org.springframework.security.oauth2.provider.token.AbstractTokenGranter.getAccessToken(AbstractTokenGranter.java:70) ~[spring-security-oauth2-2.2.1.RELEASE.jar:na]
	at org.springframework.security.oauth2.provider.token.AbstractTokenGranter.grant(AbstractTokenGranter.java:65) ~[spring-security-oauth2-2.2.1.RELEASE.jar:na]
	at org.springframework.security.oauth2.provider.CompositeTokenGranter.grant(CompositeTokenGranter.java:38) ~[spring-security-oauth2-2.2.1.RELEASE.jar:na]
	at org.springframework.security.oauth2.config.annotation.web.configurers.AuthorizationServerEndpointsConfigurer$4.grant(AuthorizationServerEndpointsConfigurer.java:561) ~[spring-security-oauth2-2.2.1.RELEASE.jar:na]
	at org.springframework.security.oauth2.provider.endpoint.TokenEndpoint.postAccessToken(TokenEndpoint.java:132) ~[spring-security-oauth2-2.2.1.RELEASE.jar:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974) [spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:877) [spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:661) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851) [spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) [tomcat-embed-websocket-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123) [druid-1.1.12.jar:1.1.12]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90) [spring-boot-actuator-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter.successfulAuthentication(ClientCredentialsTokenEndpointFilter.java:131) [spring-security-oauth2-2.2.1.RELEASE.jar:na]
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:240) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:155) [spring-boot-actuator-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:123) [spring-boot-actuator-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108) [spring-boot-actuator-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:800) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:800) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1471) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
Caused by: java.lang.IllegalArgumentException: A granted authority textual representation is required
	at org.springframework.util.Assert.hasText(Assert.java:276) ~[spring-core-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.security.core.authority.SimpleGrantedAuthority.<init>(SimpleGrantedAuthority.java:38) ~[spring-security-core-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193) ~[na:1.8.0_181]
	at java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:175) ~[na:1.8.0_181]
	at java.util.HashMap$KeySpliterator.forEachRemaining(HashMap.java:1553) ~[na:1.8.0_181]
	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:481) ~[na:1.8.0_181]
	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:471) ~[na:1.8.0_181]
	at java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:708) ~[na:1.8.0_181]
	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234) ~[na:1.8.0_181]
	at java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:499) ~[na:1.8.0_181]
	at com.bootdo.clouddoadmin.service.impl.UserDetailsServiceImpl.loadUserByUsername(UserDetailsServiceImpl.java:44) ~[classes/:na]
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.retrieveUser(DaoAuthenticationProvider.java:104) ~[spring-security-core-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	... 113 common frames omitted

2019-06-13 19:20:22.285  INFO 4396 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 19:25:27.476  INFO 10372 --- [main] c.b.c.ClouddoAdminApplication            : No active profile set, falling back to default profiles: default
2019-06-13 19:25:27.503  INFO 10372 --- [main] ConfigServletWebServerApplicationContext : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@19b93fa8: startup date [Thu Jun 13 19:25:27 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6025e1b6
2019-06-13 19:25:29.216  INFO 10372 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-13 19:25:29.789  INFO 10372 --- [main] o.s.cloud.context.scope.GenericScope     : BeanFactory id=d229a6ea-016d-322a-b2d4-3e4463f5e4cd
2019-06-13 19:25:29.822  INFO 10372 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-06-13 19:25:30.075  INFO 10372 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4949482b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 19:25:30.413  INFO 10372 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.bootdo.clouddoadmin.config.RedisConfig$$EnhancerBySpringCGLIB$$6bf6917c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 19:25:30.426  INFO 10372 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.bootdo.clouddoadmin.config.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 19:25:30.504  INFO 10372 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$65634b28] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 19:25:31.045  INFO 10372 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8005 (http)
2019-06-13 19:25:31.072  INFO 10372 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2019-06-13 19:25:31.073  INFO 10372 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.32
2019-06-13 19:25:31.078  INFO 10372 --- [localhost-startStop-1] o.a.catalina.core.AprLifecycleListener   : The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_181\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;C:;C:\Program Files\Java\jdk1.8.0_181\bin;D:\myApps\apache-maven-3.6.0\bin;C:\Program Files\Java\jdk1.8.0_181\jre\bin;C:\Program Files\Java\jdk1.8.0_181\bin ;C:\Program Files\TortoiseGit\bin;C:\windows\system32;C:\windows;C:\windows\system32\wbem;D:\StudyTools\XAMPP\mysql\bin;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;D:\系统工具\Git\cmd;D:\StudyTools\NodeJs\;D:\StudyTools\Elang\erl10.0.1\bin;D:\StudyTools\RabbitMQ Server\rabbitmq_server-3.7.7\sbin;;D:\StudyTools\DockerToolbox;D:\StudyTools\NodeJs\node_global;D:\StudyTools\WebStorm 2019.1.2\bin;;.]
2019-06-13 19:25:31.364  INFO 10372 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2019-06-13 19:25:31.365  INFO 10372 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 3861 ms
2019-06-13 19:25:31.388  INFO 10372 --- [localhost-startStop-1] c.b.c.config.DruidConfiguration          : init Druid Servlet Configuration 
2019-06-13 19:25:31.730  WARN 10372 --- [localhost-startStop-1] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2019-06-13 19:25:31.730  INFO 10372 --- [localhost-startStop-1] c.n.c.sources.URLConfigurationSource     : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-06-13 19:25:31.739  INFO 10372 --- [localhost-startStop-1] c.netflix.config.DynamicPropertyFactory  : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@24298a1b
2019-06-13 19:25:34.338  INFO 10372 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2019-06-13 19:25:34.339  INFO 10372 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'webMvcMetricsFilter' to: [/*]
2019-06-13 19:25:34.339  INFO 10372 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-06-13 19:25:34.339  INFO 10372 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-06-13 19:25:34.340  INFO 10372 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2019-06-13 19:25:34.341  INFO 10372 --- [localhost-startStop-1] .s.DelegatingFilterProxyRegistrationBean : Mapping filter: 'springSecurityFilterChain' to: [/*]
2019-06-13 19:25:34.341  INFO 10372 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpTraceFilter' to: [/*]
2019-06-13 19:25:34.341  INFO 10372 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'webStatFilter' to urls: [/*]
2019-06-13 19:25:34.341  INFO 10372 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Servlet statViewServlet mapped to [/druid/*]
2019-06-13 19:25:34.343  INFO 10372 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Servlet dispatcherServlet mapped to [/]
2019-06-13 19:25:35.526  INFO 10372 --- [main] s.c.a.AnnotationConfigApplicationContext : Refreshing FeignContext-course: startup date [Thu Jun 13 19:25:35 CST 2019]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@19b93fa8
2019-06-13 19:25:35.550  INFO 10372 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-06-13 19:25:35.775  INFO 10372 --- [main] s.c.a.AnnotationConfigApplicationContext : Refreshing FeignContext-api-base: startup date [Thu Jun 13 19:25:35 CST 2019]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@19b93fa8
2019-06-13 19:25:35.792  INFO 10372 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-06-13 19:25:36.326  INFO 10372 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/authorize],methods=[POST],params=[user_oauth_approval]}" onto public org.springframework.web.servlet.View org.springframework.security.oauth2.provider.endpoint.AuthorizationEndpoint.approveOrDeny(java.util.Map<java.lang.String, java.lang.String>,java.util.Map<java.lang.String, ?>,org.springframework.web.bind.support.SessionStatus,java.security.Principal)
2019-06-13 19:25:36.326  INFO 10372 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/authorize]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.security.oauth2.provider.endpoint.AuthorizationEndpoint.authorize(java.util.Map<java.lang.String, java.lang.Object>,java.util.Map<java.lang.String, java.lang.String>,org.springframework.web.bind.support.SessionStatus,java.security.Principal)
2019-06-13 19:25:36.328  INFO 10372 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/token],methods=[POST]}" onto public org.springframework.http.ResponseEntity<org.springframework.security.oauth2.common.OAuth2AccessToken> org.springframework.security.oauth2.provider.endpoint.TokenEndpoint.postAccessToken(java.security.Principal,java.util.Map<java.lang.String, java.lang.String>) throws org.springframework.web.HttpRequestMethodNotSupportedException
2019-06-13 19:25:36.328  INFO 10372 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/token],methods=[GET]}" onto public org.springframework.http.ResponseEntity<org.springframework.security.oauth2.common.OAuth2AccessToken> org.springframework.security.oauth2.provider.endpoint.TokenEndpoint.getAccessToken(java.security.Principal,java.util.Map<java.lang.String, java.lang.String>) throws org.springframework.web.HttpRequestMethodNotSupportedException
2019-06-13 19:25:36.329  INFO 10372 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/check_token]}" onto public java.util.Map<java.lang.String, ?> org.springframework.security.oauth2.provider.endpoint.CheckTokenEndpoint.checkToken(java.lang.String)
2019-06-13 19:25:36.329  INFO 10372 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/confirm_access]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.security.oauth2.provider.endpoint.WhitelabelApprovalEndpoint.getAccessConfirmation(java.util.Map<java.lang.String, java.lang.Object>,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-06-13 19:25:36.330  INFO 10372 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/error]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.security.oauth2.provider.endpoint.WhitelabelErrorEndpoint.handleError(javax.servlet.http.HttpServletRequest)
2019-06-13 19:25:36.420  INFO 10372 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-06-13 19:25:36.421  INFO 10372 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/remove],methods=[POST]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.DeptController.remove(java.lang.Long)
2019-06-13 19:25:36.421  INFO 10372 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/batchRemove],methods=[POST]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.DeptController.remove(java.lang.Long[])
2019-06-13 19:25:36.421  INFO 10372 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/update]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.DeptController.update(com.bootdo.clouddoadmin.domain.DeptDO)
2019-06-13 19:25:36.421  INFO 10372 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/list],methods=[GET]}" onto public java.util.List<com.bootdo.clouddoadmin.domain.DeptDO> com.bootdo.clouddoadmin.controller.DeptController.list()
2019-06-13 19:25:36.422  INFO 10372 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/save],methods=[POST]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.DeptController.save(com.bootdo.clouddoadmin.domain.DeptDO)
2019-06-13 19:25:36.422  INFO 10372 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/tree],methods=[GET]}" onto public com.bootdo.clouddoadmin.domain.Tree<com.bootdo.clouddoadmin.domain.DeptDO> com.bootdo.clouddoadmin.controller.DeptController.tree()
2019-06-13 19:25:36.422  INFO 10372 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.DeptController.dept()
2019-06-13 19:25:36.423  INFO 10372 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.DeptController.treeView()
2019-06-13 19:25:36.424  INFO 10372 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/logout]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.LoginController.logout(java.lang.String)
2019-06-13 19:25:36.424  INFO 10372 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/router],methods=[GET]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.LoginController.router()
2019-06-13 19:25:36.428  INFO 10372 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu],methods=[DELETE]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.remove(java.lang.Long)
2019-06-13 19:25:36.428  INFO 10372 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/{id}],methods=[GET]}" onto com.bootdo.clouddoadmin.domain.MenuDO com.bootdo.clouddoadmin.controller.MenuController.get(java.lang.Long)
2019-06-13 19:25:36.429  INFO 10372 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu],methods=[PUT]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.update(com.bootdo.clouddoadmin.domain.MenuDO)
2019-06-13 19:25:36.429  INFO 10372 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu],methods=[GET]}" onto java.util.List<com.bootdo.clouddoadmin.domain.Tree<com.bootdo.clouddoadmin.domain.MenuDO>> com.bootdo.clouddoadmin.controller.MenuController.list()
2019-06-13 19:25:36.430  INFO 10372 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/list],methods=[GET]}" onto java.util.List<com.bootdo.clouddoadmin.domain.MenuDO> com.bootdo.clouddoadmin.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-13 19:25:36.430  INFO 10372 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu],methods=[POST]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.save(com.bootdo.clouddoadmin.domain.MenuDO)
2019-06-13 19:25:36.430  INFO 10372 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/tree],methods=[GET]}" onto com.bootdo.clouddoadmin.domain.Tree<com.bootdo.clouddoadmin.domain.MenuDO> com.bootdo.clouddoadmin.controller.MenuController.tree()
2019-06-13 19:25:36.431  INFO 10372 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/clearCache],methods=[GET]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.clearCache()
2019-06-13 19:25:36.432  INFO 10372 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/userMenus],methods=[GET]}" onto java.util.List<com.bootdo.clouddocommon.dto.MenuDTO> com.bootdo.clouddoadmin.controller.MenuController.userMenus()
2019-06-13 19:25:36.433  INFO 10372 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/roleId],methods=[GET]}" onto java.util.List<java.lang.Long> com.bootdo.clouddoadmin.controller.MenuController.menuIdsByRoleId(java.lang.Long)
2019-06-13 19:25:36.433  INFO 10372 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/currentUserMenus],methods=[GET]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.currentUserMenus()
2019-06-13 19:25:36.436  INFO 10372 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role],methods=[PUT]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.RoleController.update(com.bootdo.clouddoadmin.domain.RoleDO)
2019-06-13 19:25:36.437  INFO 10372 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role],methods=[GET]}" onto com.bootdo.clouddocommon.utils.PageUtils com.bootdo.clouddoadmin.controller.RoleController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-13 19:25:36.437  INFO 10372 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role],methods=[POST]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.RoleController.save(com.bootdo.clouddoadmin.domain.RoleDO)
2019-06-13 19:25:36.437  INFO 10372 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/userId/{userId}],methods=[GET]}" onto java.util.List<java.lang.Long> com.bootdo.clouddoadmin.controller.RoleController.roleIdByUserId(java.lang.Long)
2019-06-13 19:25:36.438  INFO 10372 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.TestController.test()
2019-06-13 19:25:36.438  INFO 10372 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test1],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.TestController.test1()
2019-06-13 19:25:36.441  INFO 10372 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user],methods=[DELETE]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.remove(java.lang.Long)
2019-06-13 19:25:36.441  INFO 10372 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.get(java.lang.Long)
2019-06-13 19:25:36.441  INFO 10372 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user],methods=[PUT]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.update(com.bootdo.clouddoadmin.dto.UserDTO)
2019-06-13 19:25:36.442  INFO 10372 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user],methods=[POST]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.save(com.bootdo.clouddoadmin.dto.UserDTO)
2019-06-13 19:25:36.442  INFO 10372 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/batchRemove],methods=[POST]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.batchRemove(java.lang.Long[])
2019-06-13 19:25:36.442  INFO 10372 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/tokenUser],methods=[GET]}" onto public java.security.Principal com.bootdo.clouddoadmin.controller.UserController.user(java.security.Principal)
2019-06-13 19:25:36.443  INFO 10372 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/roleId/{roleId}],methods=[GET]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.getTeacherList(java.lang.Long,java.util.Map<java.lang.String, java.lang.Object>)
2019-06-13 19:25:36.443  INFO 10372 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/exits],methods=[POST]}" onto boolean com.bootdo.clouddoadmin.controller.UserController.exits(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-13 19:25:36.443  INFO 10372 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/currentUser],methods=[GET]}" onto public com.bootdo.clouddocommon.dto.LoginUserDTO com.bootdo.clouddoadmin.controller.UserController.currentUser()
2019-06-13 19:25:36.447  INFO 10372 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-06-13 19:25:36.448  INFO 10372 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-06-13 19:25:36.449  INFO 10372 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-06-13 19:25:36.452  INFO 10372 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-06-13 19:25:36.453  INFO 10372 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-13 19:25:36.608  INFO 10372 --- [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 2 endpoint(s) beneath base path '/actuator'
2019-06-13 19:25:36.627  INFO 10372 --- [main] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-06-13 19:25:36.629  INFO 10372 --- [main] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-06-13 19:25:36.630  INFO 10372 --- [main] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-13 19:25:37.519  INFO 10372 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@79c4f23b, org.springframework.security.web.context.SecurityContextPersistenceFilter@11c3ce6a, org.springframework.security.web.header.HeaderWriterFilter@60a4e619, org.springframework.security.web.authentication.logout.LogoutFilter@7c31e410, org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter@30fa8a6b, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@2b9d4b0, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@22899683, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@428eb3d5, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@160c7c42, org.springframework.security.web.session.SessionManagementFilter@11f3400c, org.springframework.security.web.access.ExceptionTranslationFilter@429f0ca8, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@61eab26b]
2019-06-13 19:25:37.542  INFO 10372 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: org.springframework.security.oauth2.config.annotation.web.configuration.ResourceServerConfiguration$NotOAuthRequestMatcher@11015ca0, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6ebbc06, org.springframework.security.web.context.SecurityContextPersistenceFilter@54234569, org.springframework.security.web.header.HeaderWriterFilter@216328b2, org.springframework.security.web.authentication.logout.LogoutFilter@36a58466, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@431babe6, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@4c2bea52, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@21ea1d9d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@19f497aa, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@50672905, org.springframework.security.web.session.SessionManagementFilter@5b0e9e0c, org.springframework.security.web.access.ExceptionTranslationFilter@11cc9e1e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@64665781]
2019-06-13 19:25:37.588  INFO 10372 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@516c20de, org.springframework.security.web.context.SecurityContextPersistenceFilter@10d905c1, org.springframework.security.web.header.HeaderWriterFilter@4345fd45, org.springframework.security.web.csrf.CsrfFilter@53ba25ff, org.springframework.security.web.authentication.logout.LogoutFilter@3a709cc7, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@25e6c22a, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@36665c11, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@16fc5622, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@e4b54d3, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@62883f8a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6906be0f, org.springframework.security.web.session.SessionManagementFilter@4152bd0f, org.springframework.security.web.access.ExceptionTranslationFilter@2976ef56, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@e706aa]
2019-06-13 19:25:37.664  INFO 10372 --- [main] pertySourcedRequestMappingHandlerMapping : Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2019-06-13 19:25:37.924  INFO 10372 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService  'clientInboundChannelExecutor'
2019-06-13 19:25:37.947  INFO 10372 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-06-13 19:25:37.973  INFO 10372 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-06-13 19:25:38.028  INFO 10372 --- [main] o.s.w.s.s.s.WebSocketHandlerMapping      : Mapped URL path [/endpoint/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-06-13 19:25:38.058  INFO 10372 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService  'brokerChannelExecutor'
2019-06-13 19:25:38.281  WARN 10372 --- [main] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2019-06-13 19:25:38.281  INFO 10372 --- [main] c.n.c.sources.URLConfigurationSource     : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-06-13 19:25:38.464  INFO 10372 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-13 19:25:38.630  INFO 10372 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@19b93fa8: startup date [Thu Jun 13 19:25:27 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6025e1b6
2019-06-13 19:25:38.717  INFO 10372 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-13 19:25:38.718  INFO 10372 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-13 19:25:38.747  INFO 10372 --- [main] .m.m.a.ExceptionHandlerExceptionResolver : Detected @ExceptionHandler methods in exceptionAdviceHandler
2019-06-13 19:25:39.919  INFO 10372 --- [main] o.s.ui.freemarker.SpringTemplateLoader   : SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@19b93fa8: startup date [Thu Jun 13 19:25:27 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6025e1b6] and template loader path [classpath:/templates/]
2019-06-13 19:25:39.920  INFO 10372 --- [main] o.s.w.s.v.f.FreeMarkerConfigurer         : ClassTemplateLoader for Spring macros added to FreeMarker configuration
2019-06-13 19:25:40.505  INFO 10372 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2019-06-13 19:25:40.507  INFO 10372 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2019-06-13 19:25:40.519  INFO 10372 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'environmentManager' has been autodetected for JMX exposure
2019-06-13 19:25:40.521  INFO 10372 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'refreshScope' has been autodetected for JMX exposure
2019-06-13 19:25:40.522  INFO 10372 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2019-06-13 19:25:40.526  INFO 10372 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2019-06-13 19:25:40.539  INFO 10372 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2019-06-13 19:25:40.553  INFO 10372 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=19b93fa8,type=ConfigurationPropertiesRebinder]
2019-06-13 19:25:40.564  INFO 10372 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-06-13 19:25:40.575  INFO 10372 --- [main] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase 0
2019-06-13 19:25:40.596  INFO 10372 --- [main] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2019-06-13 19:25:40.632  INFO 10372 --- [main] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2019-06-13 19:25:41.090  INFO 10372 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using JSON encoding codec LegacyJacksonJson
2019-06-13 19:25:41.090  INFO 10372 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using JSON decoding codec LegacyJacksonJson
2019-06-13 19:25:41.209  INFO 10372 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using XML encoding codec XStreamXml
2019-06-13 19:25:41.209  INFO 10372 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using XML decoding codec XStreamXml
2019-06-13 19:25:41.397  INFO 10372 --- [main] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 19:25:41.654  INFO 10372 --- [main] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2019-06-13 19:25:41.655  INFO 10372 --- [main] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2019-06-13 19:25:41.655  INFO 10372 --- [main] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2019-06-13 19:25:41.655  INFO 10372 --- [main] com.netflix.discovery.DiscoveryClient    : Application is null : false
2019-06-13 19:25:41.655  INFO 10372 --- [main] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2019-06-13 19:25:41.655  INFO 10372 --- [main] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2019-06-13 19:25:41.655  INFO 10372 --- [main] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2019-06-13 19:25:41.846  INFO 10372 --- [main] com.netflix.discovery.DiscoveryClient    : The response status is 200
2019-06-13 19:25:41.849  INFO 10372 --- [main] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2019-06-13 19:25:41.852  INFO 10372 --- [main] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2019-06-13 19:25:41.856  INFO 10372 --- [main] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1560425141854 with initial instances count: 2
2019-06-13 19:25:41.885  INFO 10372 --- [main] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application api-admin with eureka with status UP
2019-06-13 19:25:41.886  INFO 10372 --- [main] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1560425141886, current=UP, previous=STARTING]
2019-06-13 19:25:41.888  INFO 10372 --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_API-ADMIN/Lenovo-PC:api-admin:8005: registering service...
2019-06-13 19:25:41.904  INFO 10372 --- [main] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase 2147483647
2019-06-13 19:25:41.906  INFO 10372 --- [main] d.s.w.p.DocumentationPluginsBootstrapper : Context refreshed
2019-06-13 19:25:41.944  INFO 10372 --- [main] d.s.w.p.DocumentationPluginsBootstrapper : Found 1 custom documentation plugin(s)
2019-06-13 19:25:42.020  INFO 10372 --- [main] s.d.s.w.s.ApiListingReferenceScanner     : Scanning for api listing references
2019-06-13 19:25:42.164  INFO 10372 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: removeUsingPOST_1
2019-06-13 19:25:42.245  INFO 10372 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: listUsingGET_1
2019-06-13 19:25:42.252  INFO 10372 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: listUsingGET_2
2019-06-13 19:25:42.260  INFO 10372 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: saveUsingPOST_1
2019-06-13 19:25:42.262  INFO 10372 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: treeUsingGET_1
2019-06-13 19:25:42.264  INFO 10372 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: updateUsingPUT_1
2019-06-13 19:25:42.270  INFO 10372 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: listUsingGET_3
2019-06-13 19:25:42.283  INFO 10372 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: saveUsingPOST_2
2019-06-13 19:25:42.285  INFO 10372 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: updateUsingPUT_2
2019-06-13 19:25:42.297  INFO 10372 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: getUsingGET_1
2019-06-13 19:25:42.300  INFO 10372 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: removeUsingDELETE_1
2019-06-13 19:25:42.308  INFO 10372 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: saveUsingPOST_3
2019-06-13 19:25:42.338  INFO 10372 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: updateUsingPUT_3
2019-06-13 19:25:42.358  INFO 10372 --- [main] o.s.m.s.b.SimpleBrokerMessageHandler     : Starting...
2019-06-13 19:25:42.359  INFO 10372 --- [main] o.s.m.s.b.SimpleBrokerMessageHandler     : BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-06-13 19:25:42.360  INFO 10372 --- [main] o.s.m.s.b.SimpleBrokerMessageHandler     : Started.
2019-06-13 19:25:42.424  INFO 10372 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8005 (http) with context path ''
2019-06-13 19:25:42.426  INFO 10372 --- [main] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 8005
2019-06-13 19:25:42.429  INFO 10372 --- [main] c.b.c.ClouddoAdminApplication            : Started ClouddoAdminApplication in 18.367 seconds (JVM running for 20.077)
2019-06-13 19:25:42.751  INFO 10372 --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_API-ADMIN/Lenovo-PC:api-admin:8005 - registration status: 204
2019-06-13 19:25:42.998  INFO 10372 --- [RMI TCP Connection(2)-10.255.44.113] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-06-13 19:25:42.999  INFO 10372 --- [RMI TCP Connection(2)-10.255.44.113] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2019-06-13 19:25:43.045  INFO 10372 --- [RMI TCP Connection(2)-10.255.44.113] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 46 ms
2019-06-13 19:25:43.249  INFO 10372 --- [RMI TCP Connection(1)-10.255.44.113] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2019-06-13 19:25:43.515  INFO 10372 --- [RMI TCP Connection(1)-10.255.44.113] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2019-06-13 19:25:43.518  INFO 10372 --- [RMI TCP Connection(1)-10.255.44.113] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2019-06-13 19:26:17.311  INFO 10372 --- [http-nio-8005-exec-1] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/currentUser
2019-06-13 19:26:17.311  INFO 10372 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/router
2019-06-13 19:26:17.311  INFO 10372 --- [http-nio-8005-exec-1] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 19:26:17.311  INFO 10372 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 19:26:17.314  INFO 10372 --- [http-nio-8005-exec-1] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.currentUser
2019-06-13 19:26:17.314  INFO 10372 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.LoginController.router
2019-06-13 19:26:17.314  INFO 10372 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 19:26:17.314  INFO 10372 --- [http-nio-8005-exec-1] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 19:26:17.409  INFO 10372 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 99
2019-06-13 19:26:17.409  INFO 10372 --- [http-nio-8005-exec-1] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 99
2019-06-13 19:26:17.416  INFO 10372 --- [http-nio-8005-exec-1] .s.a.AnnotationAsyncExecutionInterceptor : More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-06-13 19:26:17.432  INFO 10372 --- [SimpleAsyncTaskExecutor-2] feign.RequestInterceptor                 : ------feign设置token110
2019-06-13 19:26:17.432  INFO 10372 --- [SimpleAsyncTaskExecutor-1] feign.RequestInterceptor                 : ------feign设置token109
2019-06-13 19:26:17.441  INFO 10372 --- [SimpleAsyncTaskExecutor-2] s.c.a.AnnotationConfigApplicationContext : Refreshing SpringClientFactory-api-base: startup date [Thu Jun 13 19:26:17 CST 2019]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@19b93fa8
2019-06-13 19:26:17.554  INFO 10372 --- [SimpleAsyncTaskExecutor-2] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-06-13 19:26:17.852  INFO 10372 --- [SimpleAsyncTaskExecutor-2] c.netflix.config.ChainedDynamicProperty  : Flipping property: api-base.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-06-13 19:26:17.896  INFO 10372 --- [SimpleAsyncTaskExecutor-2] c.n.u.concurrent.ShutdownEnabledTimer    : Shutdown hook installed for: NFLoadBalancer-PingTimer-api-base
2019-06-13 19:26:17.902  INFO 10372 --- [SimpleAsyncTaskExecutor-2] c.netflix.loadbalancer.BaseLoadBalancer  : Client: api-base instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=api-base,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2019-06-13 19:26:17.911  INFO 10372 --- [SimpleAsyncTaskExecutor-2] c.n.l.DynamicServerListLoadBalancer      : Using serverListUpdater PollingServerListUpdater
2019-06-13 19:26:17.915  INFO 10372 --- [SimpleAsyncTaskExecutor-2] c.n.l.DynamicServerListLoadBalancer      : DynamicServerListLoadBalancer for client api-base initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=api-base,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@518898a8
2019-06-13 19:26:18.035 ERROR 10372 --- [SimpleAsyncTaskExecutor-2] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy197.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy197.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 19:26:18.035 ERROR 10372 --- [SimpleAsyncTaskExecutor-1] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy197.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy197.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 19:26:38.056  INFO 10372 --- [MessageBroker-1] o.s.w.s.c.WebSocketMessageBrokerStats    : WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-06-13 19:27:39.358  INFO 10372 --- [http-nio-8005-exec-7] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/router
2019-06-13 19:27:39.358  INFO 10372 --- [http-nio-8005-exec-7] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 19:27:39.359  INFO 10372 --- [http-nio-8005-exec-7] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.LoginController.router
2019-06-13 19:27:39.359  INFO 10372 --- [http-nio-8005-exec-7] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 19:27:39.362  INFO 10372 --- [http-nio-8005-exec-7] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 4
2019-06-13 19:27:39.364  INFO 10372 --- [SimpleAsyncTaskExecutor-3] feign.RequestInterceptor                 : ------feign设置token118
2019-06-13 19:27:39.368 ERROR 10372 --- [SimpleAsyncTaskExecutor-3] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy197.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy197.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 19:27:39.467  INFO 10372 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/currentUser
2019-06-13 19:27:39.467  INFO 10372 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 19:27:39.467  INFO 10372 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.currentUser
2019-06-13 19:27:39.467  INFO 10372 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 19:27:39.469  INFO 10372 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 2
2019-06-13 19:27:39.470  INFO 10372 --- [SimpleAsyncTaskExecutor-4] feign.RequestInterceptor                 : ------feign设置token119
2019-06-13 19:27:39.474 ERROR 10372 --- [SimpleAsyncTaskExecutor-4] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy197.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy197.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 19:27:44.227  INFO 10372 --- [http-nio-8005-exec-8] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/router
2019-06-13 19:27:44.228  INFO 10372 --- [http-nio-8005-exec-8] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 19:27:44.228  INFO 10372 --- [http-nio-8005-exec-8] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.LoginController.router
2019-06-13 19:27:44.228  INFO 10372 --- [http-nio-8005-exec-8] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 19:27:44.231  INFO 10372 --- [http-nio-8005-exec-8] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 4
2019-06-13 19:27:44.236  INFO 10372 --- [SimpleAsyncTaskExecutor-5] feign.RequestInterceptor                 : ------feign设置token120
2019-06-13 19:27:44.242 ERROR 10372 --- [SimpleAsyncTaskExecutor-5] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy197.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy197.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 19:27:44.244  INFO 10372 --- [http-nio-8005-exec-9] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/currentUser
2019-06-13 19:27:44.245  INFO 10372 --- [http-nio-8005-exec-9] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 19:27:44.245  INFO 10372 --- [http-nio-8005-exec-9] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.currentUser
2019-06-13 19:27:44.245  INFO 10372 --- [http-nio-8005-exec-9] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 19:27:44.247  INFO 10372 --- [http-nio-8005-exec-9] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 3
2019-06-13 19:27:44.248  INFO 10372 --- [SimpleAsyncTaskExecutor-6] feign.RequestInterceptor                 : ------feign设置token121
2019-06-13 19:27:44.251 ERROR 10372 --- [SimpleAsyncTaskExecutor-6] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy197.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy197.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 19:27:50.868  INFO 10372 --- [http-nio-8005-exec-10] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/role
2019-06-13 19:27:50.869  INFO 10372 --- [http-nio-8005-exec-10] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 19:27:50.869  INFO 10372 --- [http-nio-8005-exec-10] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.RoleController.list
2019-06-13 19:27:50.869  INFO 10372 --- [http-nio-8005-exec-10] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : [{}]
2019-06-13 19:27:50.941  INFO 10372 --- [http-nio-8005-exec-10] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 73
2019-06-13 19:27:50.948  INFO 10372 --- [SimpleAsyncTaskExecutor-7] feign.RequestInterceptor                 : ------feign设置token122
2019-06-13 19:27:50.949 ERROR 10372 --- [SimpleAsyncTaskExecutor-7] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy197.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy197.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 19:30:41.658  INFO 10372 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 19:31:55.491  INFO 10372 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/currentUser
2019-06-13 19:31:55.492  INFO 10372 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 19:31:55.492  INFO 10372 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.currentUser
2019-06-13 19:31:55.492  INFO 10372 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 19:31:55.494  INFO 10372 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 3
2019-06-13 19:31:55.496  INFO 10372 --- [SimpleAsyncTaskExecutor-8] feign.RequestInterceptor                 : ------feign设置token124
2019-06-13 19:31:55.502 ERROR 10372 --- [SimpleAsyncTaskExecutor-8] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy197.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy197.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 19:31:55.629  INFO 10372 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/router
2019-06-13 19:31:55.629  INFO 10372 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 19:31:55.629  INFO 10372 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.LoginController.router
2019-06-13 19:31:55.629  INFO 10372 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 19:31:55.632  INFO 10372 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 3
2019-06-13 19:31:55.637  INFO 10372 --- [SimpleAsyncTaskExecutor-9] feign.RequestInterceptor                 : ------feign设置token125
2019-06-13 19:31:55.639 ERROR 10372 --- [SimpleAsyncTaskExecutor-9] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy197.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy197.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 19:31:57.658  INFO 10372 --- [http-nio-8005-exec-5] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/role
2019-06-13 19:31:57.658  INFO 10372 --- [http-nio-8005-exec-5] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 19:31:57.659  INFO 10372 --- [http-nio-8005-exec-5] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.RoleController.list
2019-06-13 19:31:57.659  INFO 10372 --- [http-nio-8005-exec-5] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : [{}]
2019-06-13 19:31:57.665  INFO 10372 --- [http-nio-8005-exec-5] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 7
2019-06-13 19:31:57.669  INFO 10372 --- [SimpleAsyncTaskExecutor-10] feign.RequestInterceptor                 : ------feign设置token126
2019-06-13 19:31:57.672 ERROR 10372 --- [SimpleAsyncTaskExecutor-10] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy197.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy197.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 19:33:10.080  INFO 10372 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/roleId/3
2019-06-13 19:33:10.081  INFO 10372 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 19:33:10.081  INFO 10372 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.getTeacherList
2019-06-13 19:33:10.081  INFO 10372 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : [3, {page=1, limit=10, name=}]
2019-06-13 19:33:12.048  INFO 10372 --- [http-nio-8005-exec-8] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/roleId/2
2019-06-13 19:33:12.048  INFO 10372 --- [http-nio-8005-exec-8] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 19:33:12.049  INFO 10372 --- [http-nio-8005-exec-8] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.getTeacherList
2019-06-13 19:33:12.049  INFO 10372 --- [http-nio-8005-exec-8] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : [2, {page=1, limit=10, name=}]
2019-06-13 19:35:41.660  INFO 10372 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 19:38:58.655  INFO 3440 --- [main] c.b.c.ClouddoAdminApplication            : No active profile set, falling back to default profiles: default
2019-06-13 19:38:58.673  INFO 3440 --- [main] ConfigServletWebServerApplicationContext : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@8ad6665: startup date [Thu Jun 13 19:38:58 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6150c3ec
2019-06-13 19:39:01.414  INFO 3440 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-13 19:39:01.954  INFO 3440 --- [main] o.s.cloud.context.scope.GenericScope     : BeanFactory id=d229a6ea-016d-322a-b2d4-3e4463f5e4cd
2019-06-13 19:39:01.983  INFO 3440 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-06-13 19:39:02.193  INFO 3440 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$b27b778] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 19:39:02.538  INFO 3440 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.bootdo.clouddoadmin.config.RedisConfig$$EnhancerBySpringCGLIB$$2dd500c9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 19:39:02.554  INFO 3440 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.bootdo.clouddoadmin.config.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 19:39:02.644  INFO 3440 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$2741ba75] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 19:39:03.684  INFO 3440 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8005 (http)
2019-06-13 19:39:03.757  INFO 3440 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2019-06-13 19:39:03.757  INFO 3440 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.32
2019-06-13 19:39:03.761  INFO 3440 --- [localhost-startStop-1] o.a.catalina.core.AprLifecycleListener   : The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_181\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;C:;C:\Program Files\Java\jdk1.8.0_181\bin;D:\myApps\apache-maven-3.6.0\bin;C:\Program Files\Java\jdk1.8.0_181\jre\bin;C:\Program Files\Java\jdk1.8.0_181\bin ;C:\Program Files\TortoiseGit\bin;C:\windows\system32;C:\windows;C:\windows\system32\wbem;D:\StudyTools\XAMPP\mysql\bin;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;D:\系统工具\Git\cmd;D:\StudyTools\NodeJs\;D:\StudyTools\Elang\erl10.0.1\bin;D:\StudyTools\RabbitMQ Server\rabbitmq_server-3.7.7\sbin;;D:\StudyTools\DockerToolbox;D:\StudyTools\NodeJs\node_global;D:\StudyTools\WebStorm 2019.1.2\bin;;.]
2019-06-13 19:39:04.117  INFO 3440 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2019-06-13 19:39:04.118  INFO 3440 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 5444 ms
2019-06-13 19:39:04.138  INFO 3440 --- [localhost-startStop-1] c.b.c.config.DruidConfiguration          : init Druid Servlet Configuration 
2019-06-13 19:39:04.505  WARN 3440 --- [localhost-startStop-1] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2019-06-13 19:39:04.505  INFO 3440 --- [localhost-startStop-1] c.n.c.sources.URLConfigurationSource     : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-06-13 19:39:04.523  INFO 3440 --- [localhost-startStop-1] c.netflix.config.DynamicPropertyFactory  : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@28d30b67
2019-06-13 19:39:07.150  INFO 3440 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2019-06-13 19:39:07.151  INFO 3440 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'webMvcMetricsFilter' to: [/*]
2019-06-13 19:39:07.151  INFO 3440 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-06-13 19:39:07.151  INFO 3440 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-06-13 19:39:07.151  INFO 3440 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2019-06-13 19:39:07.152  INFO 3440 --- [localhost-startStop-1] .s.DelegatingFilterProxyRegistrationBean : Mapping filter: 'springSecurityFilterChain' to: [/*]
2019-06-13 19:39:07.152  INFO 3440 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpTraceFilter' to: [/*]
2019-06-13 19:39:07.152  INFO 3440 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'webStatFilter' to urls: [/*]
2019-06-13 19:39:07.152  INFO 3440 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Servlet statViewServlet mapped to [/druid/*]
2019-06-13 19:39:07.154  INFO 3440 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Servlet dispatcherServlet mapped to [/]
2019-06-13 19:39:08.937  INFO 3440 --- [main] s.c.a.AnnotationConfigApplicationContext : Refreshing FeignContext-course: startup date [Thu Jun 13 19:39:08 CST 2019]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@8ad6665
2019-06-13 19:39:08.978  INFO 3440 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-06-13 19:39:09.180  INFO 3440 --- [main] s.c.a.AnnotationConfigApplicationContext : Refreshing FeignContext-api-base: startup date [Thu Jun 13 19:39:09 CST 2019]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@8ad6665
2019-06-13 19:39:09.196  INFO 3440 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-06-13 19:39:09.708  INFO 3440 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/authorize]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.security.oauth2.provider.endpoint.AuthorizationEndpoint.authorize(java.util.Map<java.lang.String, java.lang.Object>,java.util.Map<java.lang.String, java.lang.String>,org.springframework.web.bind.support.SessionStatus,java.security.Principal)
2019-06-13 19:39:09.710  INFO 3440 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/authorize],methods=[POST],params=[user_oauth_approval]}" onto public org.springframework.web.servlet.View org.springframework.security.oauth2.provider.endpoint.AuthorizationEndpoint.approveOrDeny(java.util.Map<java.lang.String, java.lang.String>,java.util.Map<java.lang.String, ?>,org.springframework.web.bind.support.SessionStatus,java.security.Principal)
2019-06-13 19:39:09.711  INFO 3440 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/token],methods=[GET]}" onto public org.springframework.http.ResponseEntity<org.springframework.security.oauth2.common.OAuth2AccessToken> org.springframework.security.oauth2.provider.endpoint.TokenEndpoint.getAccessToken(java.security.Principal,java.util.Map<java.lang.String, java.lang.String>) throws org.springframework.web.HttpRequestMethodNotSupportedException
2019-06-13 19:39:09.711  INFO 3440 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/token],methods=[POST]}" onto public org.springframework.http.ResponseEntity<org.springframework.security.oauth2.common.OAuth2AccessToken> org.springframework.security.oauth2.provider.endpoint.TokenEndpoint.postAccessToken(java.security.Principal,java.util.Map<java.lang.String, java.lang.String>) throws org.springframework.web.HttpRequestMethodNotSupportedException
2019-06-13 19:39:09.712  INFO 3440 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/check_token]}" onto public java.util.Map<java.lang.String, ?> org.springframework.security.oauth2.provider.endpoint.CheckTokenEndpoint.checkToken(java.lang.String)
2019-06-13 19:39:09.712  INFO 3440 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/confirm_access]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.security.oauth2.provider.endpoint.WhitelabelApprovalEndpoint.getAccessConfirmation(java.util.Map<java.lang.String, java.lang.Object>,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-06-13 19:39:09.713  INFO 3440 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/error]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.security.oauth2.provider.endpoint.WhitelabelErrorEndpoint.handleError(javax.servlet.http.HttpServletRequest)
2019-06-13 19:39:09.792  INFO 3440 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-06-13 19:39:09.793  INFO 3440 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/remove],methods=[POST]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.DeptController.remove(java.lang.Long)
2019-06-13 19:39:09.793  INFO 3440 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/batchRemove],methods=[POST]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.DeptController.remove(java.lang.Long[])
2019-06-13 19:39:09.794  INFO 3440 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/update]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.DeptController.update(com.bootdo.clouddoadmin.domain.DeptDO)
2019-06-13 19:39:09.794  INFO 3440 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/list],methods=[GET]}" onto public java.util.List<com.bootdo.clouddoadmin.domain.DeptDO> com.bootdo.clouddoadmin.controller.DeptController.list()
2019-06-13 19:39:09.794  INFO 3440 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/save],methods=[POST]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.DeptController.save(com.bootdo.clouddoadmin.domain.DeptDO)
2019-06-13 19:39:09.795  INFO 3440 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/tree],methods=[GET]}" onto public com.bootdo.clouddoadmin.domain.Tree<com.bootdo.clouddoadmin.domain.DeptDO> com.bootdo.clouddoadmin.controller.DeptController.tree()
2019-06-13 19:39:09.795  INFO 3440 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.DeptController.treeView()
2019-06-13 19:39:09.796  INFO 3440 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.DeptController.dept()
2019-06-13 19:39:09.797  INFO 3440 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/logout]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.LoginController.logout(java.lang.String)
2019-06-13 19:39:09.797  INFO 3440 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/router],methods=[GET]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.LoginController.router()
2019-06-13 19:39:09.800  INFO 3440 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu],methods=[DELETE]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.remove(java.lang.Long)
2019-06-13 19:39:09.801  INFO 3440 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/{id}],methods=[GET]}" onto com.bootdo.clouddoadmin.domain.MenuDO com.bootdo.clouddoadmin.controller.MenuController.get(java.lang.Long)
2019-06-13 19:39:09.801  INFO 3440 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu],methods=[PUT]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.update(com.bootdo.clouddoadmin.domain.MenuDO)
2019-06-13 19:39:09.802  INFO 3440 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu],methods=[GET]}" onto java.util.List<com.bootdo.clouddoadmin.domain.Tree<com.bootdo.clouddoadmin.domain.MenuDO>> com.bootdo.clouddoadmin.controller.MenuController.list()
2019-06-13 19:39:09.803  INFO 3440 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/list],methods=[GET]}" onto java.util.List<com.bootdo.clouddoadmin.domain.MenuDO> com.bootdo.clouddoadmin.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-13 19:39:09.803  INFO 3440 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu],methods=[POST]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.save(com.bootdo.clouddoadmin.domain.MenuDO)
2019-06-13 19:39:09.803  INFO 3440 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/tree],methods=[GET]}" onto com.bootdo.clouddoadmin.domain.Tree<com.bootdo.clouddoadmin.domain.MenuDO> com.bootdo.clouddoadmin.controller.MenuController.tree()
2019-06-13 19:39:09.803  INFO 3440 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/clearCache],methods=[GET]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.clearCache()
2019-06-13 19:39:09.804  INFO 3440 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/currentUserMenus],methods=[GET]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.currentUserMenus()
2019-06-13 19:39:09.805  INFO 3440 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/userMenus],methods=[GET]}" onto java.util.List<com.bootdo.clouddocommon.dto.MenuDTO> com.bootdo.clouddoadmin.controller.MenuController.userMenus()
2019-06-13 19:39:09.805  INFO 3440 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/roleId],methods=[GET]}" onto java.util.List<java.lang.Long> com.bootdo.clouddoadmin.controller.MenuController.menuIdsByRoleId(java.lang.Long)
2019-06-13 19:39:09.808  INFO 3440 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role],methods=[PUT]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.RoleController.update(com.bootdo.clouddoadmin.domain.RoleDO)
2019-06-13 19:39:09.808  INFO 3440 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role],methods=[GET]}" onto com.bootdo.clouddocommon.utils.PageUtils com.bootdo.clouddoadmin.controller.RoleController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-13 19:39:09.808  INFO 3440 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role],methods=[POST]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.RoleController.save(com.bootdo.clouddoadmin.domain.RoleDO)
2019-06-13 19:39:09.809  INFO 3440 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/userId/{userId}],methods=[GET]}" onto java.util.List<java.lang.Long> com.bootdo.clouddoadmin.controller.RoleController.roleIdByUserId(java.lang.Long)
2019-06-13 19:39:09.810  INFO 3440 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.TestController.test()
2019-06-13 19:39:09.810  INFO 3440 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test1],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.TestController.test1()
2019-06-13 19:39:09.812  INFO 3440 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user],methods=[DELETE]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.remove(java.lang.Long)
2019-06-13 19:39:09.812  INFO 3440 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.get(java.lang.Long)
2019-06-13 19:39:09.812  INFO 3440 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user],methods=[PUT]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.update(com.bootdo.clouddoadmin.dto.UserDTO)
2019-06-13 19:39:09.812  INFO 3440 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user],methods=[POST]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.save(com.bootdo.clouddoadmin.dto.UserDTO)
2019-06-13 19:39:09.813  INFO 3440 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/batchRemove],methods=[POST]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.batchRemove(java.lang.Long[])
2019-06-13 19:39:09.813  INFO 3440 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/tokenUser],methods=[GET]}" onto public java.security.Principal com.bootdo.clouddoadmin.controller.UserController.user(java.security.Principal)
2019-06-13 19:39:09.813  INFO 3440 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/exits],methods=[POST]}" onto boolean com.bootdo.clouddoadmin.controller.UserController.exits(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-13 19:39:09.814  INFO 3440 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/roleId/{roleId}],methods=[GET]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.getTeacherList(java.lang.Long,java.util.Map<java.lang.String, java.lang.Object>)
2019-06-13 19:39:09.814  INFO 3440 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/currentUser],methods=[GET]}" onto public com.bootdo.clouddocommon.dto.LoginUserDTO com.bootdo.clouddoadmin.controller.UserController.currentUser()
2019-06-13 19:39:09.817  INFO 3440 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-06-13 19:39:09.818  INFO 3440 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-06-13 19:39:09.818  INFO 3440 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-06-13 19:39:09.821  INFO 3440 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-06-13 19:39:09.822  INFO 3440 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-13 19:39:10.005  INFO 3440 --- [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 2 endpoint(s) beneath base path '/actuator'
2019-06-13 19:39:10.023  INFO 3440 --- [main] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-06-13 19:39:10.024  INFO 3440 --- [main] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-06-13 19:39:10.025  INFO 3440 --- [main] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-13 19:39:10.982  INFO 3440 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@216328b2, org.springframework.security.web.context.SecurityContextPersistenceFilter@5ddd84d2, org.springframework.security.web.header.HeaderWriterFilter@28519bfb, org.springframework.security.web.authentication.logout.LogoutFilter@42d174ad, org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter@61b8c9de, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@646cb2e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7aa15a80, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7c31e410, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5b0e9e0c, org.springframework.security.web.session.SessionManagementFilter@7b332b23, org.springframework.security.web.access.ExceptionTranslationFilter@dbc7e0a, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4f541e67]
2019-06-13 19:39:11.005  INFO 3440 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: org.springframework.security.oauth2.config.annotation.web.configuration.ResourceServerConfiguration$NotOAuthRequestMatcher@4045fd1f, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@13ee97af, org.springframework.security.web.context.SecurityContextPersistenceFilter@78b9155e, org.springframework.security.web.header.HeaderWriterFilter@53525379, org.springframework.security.web.authentication.logout.LogoutFilter@69c33ea2, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@3dc55719, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@5a7e81, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2ceb68a1, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6de33fde, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@67e11bda, org.springframework.security.web.session.SessionManagementFilter@1be3f8f8, org.springframework.security.web.access.ExceptionTranslationFilter@60a6840c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@54941dfd]
2019-06-13 19:39:11.045  INFO 3440 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1827fc4e, org.springframework.security.web.context.SecurityContextPersistenceFilter@516c20de, org.springframework.security.web.header.HeaderWriterFilter@25e6c22a, org.springframework.security.web.csrf.CsrfFilter@1da5c19d, org.springframework.security.web.authentication.logout.LogoutFilter@62ab5e63, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@52d63b7e, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@edbc2bf, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@74830d73, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6906be0f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7a62d697, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4c41a177, org.springframework.security.web.session.SessionManagementFilter@16fc5622, org.springframework.security.web.access.ExceptionTranslationFilter@e706aa, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5310e451]
2019-06-13 19:39:11.111  INFO 3440 --- [main] pertySourcedRequestMappingHandlerMapping : Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2019-06-13 19:39:11.430  INFO 3440 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService  'clientInboundChannelExecutor'
2019-06-13 19:39:11.450  INFO 3440 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-06-13 19:39:11.473  INFO 3440 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-06-13 19:39:11.536  INFO 3440 --- [main] o.s.w.s.s.s.WebSocketHandlerMapping      : Mapped URL path [/endpoint/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-06-13 19:39:11.560  INFO 3440 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService  'brokerChannelExecutor'
2019-06-13 19:39:11.738  WARN 3440 --- [main] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2019-06-13 19:39:11.738  INFO 3440 --- [main] c.n.c.sources.URLConfigurationSource     : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-06-13 19:39:11.858  INFO 3440 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-13 19:39:12.138  INFO 3440 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@8ad6665: startup date [Thu Jun 13 19:38:58 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6150c3ec
2019-06-13 19:39:12.222  INFO 3440 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-13 19:39:12.223  INFO 3440 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-13 19:39:12.253  INFO 3440 --- [main] .m.m.a.ExceptionHandlerExceptionResolver : Detected @ExceptionHandler methods in exceptionAdviceHandler
2019-06-13 19:39:13.429  INFO 3440 --- [main] o.s.ui.freemarker.SpringTemplateLoader   : SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@8ad6665: startup date [Thu Jun 13 19:38:58 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6150c3ec] and template loader path [classpath:/templates/]
2019-06-13 19:39:13.431  INFO 3440 --- [main] o.s.w.s.v.f.FreeMarkerConfigurer         : ClassTemplateLoader for Spring macros added to FreeMarker configuration
2019-06-13 19:39:13.966  INFO 3440 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2019-06-13 19:39:13.968  INFO 3440 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2019-06-13 19:39:13.984  INFO 3440 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'environmentManager' has been autodetected for JMX exposure
2019-06-13 19:39:13.986  INFO 3440 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'refreshScope' has been autodetected for JMX exposure
2019-06-13 19:39:13.986  INFO 3440 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2019-06-13 19:39:13.990  INFO 3440 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2019-06-13 19:39:14.003  INFO 3440 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2019-06-13 19:39:14.016  INFO 3440 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=8ad6665,type=ConfigurationPropertiesRebinder]
2019-06-13 19:39:14.025  INFO 3440 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-06-13 19:39:14.035  INFO 3440 --- [main] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase 0
2019-06-13 19:39:14.054  INFO 3440 --- [main] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2019-06-13 19:39:14.231  INFO 3440 --- [main] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2019-06-13 19:39:15.000  INFO 3440 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using JSON encoding codec LegacyJacksonJson
2019-06-13 19:39:15.001  INFO 3440 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using JSON decoding codec LegacyJacksonJson
2019-06-13 19:39:15.233  INFO 3440 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using XML encoding codec XStreamXml
2019-06-13 19:39:15.233  INFO 3440 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using XML decoding codec XStreamXml
2019-06-13 19:39:15.402  INFO 3440 --- [main] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 19:39:15.649  INFO 3440 --- [main] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2019-06-13 19:39:15.649  INFO 3440 --- [main] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2019-06-13 19:39:15.649  INFO 3440 --- [main] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2019-06-13 19:39:15.649  INFO 3440 --- [main] com.netflix.discovery.DiscoveryClient    : Application is null : false
2019-06-13 19:39:15.649  INFO 3440 --- [main] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2019-06-13 19:39:15.649  INFO 3440 --- [main] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2019-06-13 19:39:15.649  INFO 3440 --- [main] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2019-06-13 19:39:15.821  INFO 3440 --- [main] com.netflix.discovery.DiscoveryClient    : The response status is 200
2019-06-13 19:39:15.824  INFO 3440 --- [main] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2019-06-13 19:39:15.825  INFO 3440 --- [main] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2019-06-13 19:39:15.829  INFO 3440 --- [main] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1560425955828 with initial instances count: 2
2019-06-13 19:39:15.844  INFO 3440 --- [main] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application api-admin with eureka with status UP
2019-06-13 19:39:15.844  INFO 3440 --- [main] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1560425955844, current=UP, previous=STARTING]
2019-06-13 19:39:15.845  INFO 3440 --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_API-ADMIN/Lenovo-PC:api-admin:8005: registering service...
2019-06-13 19:39:15.851  INFO 3440 --- [main] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase 2147483647
2019-06-13 19:39:15.851  INFO 3440 --- [main] d.s.w.p.DocumentationPluginsBootstrapper : Context refreshed
2019-06-13 19:39:15.921  INFO 3440 --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_API-ADMIN/Lenovo-PC:api-admin:8005 - registration status: 204
2019-06-13 19:39:15.959  INFO 3440 --- [main] d.s.w.p.DocumentationPluginsBootstrapper : Found 1 custom documentation plugin(s)
2019-06-13 19:39:16.027  INFO 3440 --- [main] s.d.s.w.s.ApiListingReferenceScanner     : Scanning for api listing references
2019-06-13 19:39:16.162  INFO 3440 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: removeUsingPOST_1
2019-06-13 19:39:16.235  INFO 3440 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: listUsingGET_1
2019-06-13 19:39:16.240  INFO 3440 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: listUsingGET_2
2019-06-13 19:39:16.246  INFO 3440 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: saveUsingPOST_1
2019-06-13 19:39:16.248  INFO 3440 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: treeUsingGET_1
2019-06-13 19:39:16.249  INFO 3440 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: updateUsingPUT_1
2019-06-13 19:39:16.255  INFO 3440 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: listUsingGET_3
2019-06-13 19:39:16.265  INFO 3440 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: saveUsingPOST_2
2019-06-13 19:39:16.267  INFO 3440 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: updateUsingPUT_2
2019-06-13 19:39:16.278  INFO 3440 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: getUsingGET_1
2019-06-13 19:39:16.281  INFO 3440 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: removeUsingDELETE_1
2019-06-13 19:39:16.288  INFO 3440 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: saveUsingPOST_3
2019-06-13 19:39:16.290  INFO 3440 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: updateUsingPUT_3
2019-06-13 19:39:16.307  INFO 3440 --- [main] o.s.m.s.b.SimpleBrokerMessageHandler     : Starting...
2019-06-13 19:39:16.308  INFO 3440 --- [main] o.s.m.s.b.SimpleBrokerMessageHandler     : BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-06-13 19:39:16.309  INFO 3440 --- [main] o.s.m.s.b.SimpleBrokerMessageHandler     : Started.
2019-06-13 19:39:16.368  INFO 3440 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8005 (http) with context path ''
2019-06-13 19:39:16.370  INFO 3440 --- [main] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 8005
2019-06-13 19:39:16.374  INFO 3440 --- [main] c.b.c.ClouddoAdminApplication            : Started ClouddoAdminApplication in 20.411 seconds (JVM running for 23.718)
2019-06-13 19:39:17.324  INFO 3440 --- [RMI TCP Connection(2)-10.255.44.113] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-06-13 19:39:17.325  INFO 3440 --- [RMI TCP Connection(2)-10.255.44.113] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2019-06-13 19:39:17.422  INFO 3440 --- [RMI TCP Connection(2)-10.255.44.113] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 97 ms
2019-06-13 19:39:18.028  INFO 3440 --- [RMI TCP Connection(1)-10.255.44.113] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2019-06-13 19:39:18.499  INFO 3440 --- [RMI TCP Connection(1)-10.255.44.113] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2019-06-13 19:39:18.501  INFO 3440 --- [RMI TCP Connection(1)-10.255.44.113] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2019-06-13 19:39:32.225  INFO 3440 --- [http-nio-8005-exec-1] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/router
2019-06-13 19:39:32.225  INFO 3440 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/currentUser
2019-06-13 19:39:32.226  INFO 3440 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 19:39:32.230  INFO 3440 --- [http-nio-8005-exec-1] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 19:39:32.231  INFO 3440 --- [http-nio-8005-exec-1] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.LoginController.router
2019-06-13 19:39:32.231  INFO 3440 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.currentUser
2019-06-13 19:39:32.231  INFO 3440 --- [http-nio-8005-exec-1] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 19:39:32.231  INFO 3440 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 19:39:32.258  INFO 3440 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 33
2019-06-13 19:39:32.258  INFO 3440 --- [http-nio-8005-exec-1] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 33
2019-06-13 19:39:32.268  INFO 3440 --- [http-nio-8005-exec-1] .s.a.AnnotationAsyncExecutionInterceptor : More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-06-13 19:39:32.288  INFO 3440 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/roleId/2
2019-06-13 19:39:32.288  INFO 3440 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 19:39:32.288  INFO 3440 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.getTeacherList
2019-06-13 19:39:32.288  INFO 3440 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : [2, {page=1, limit=10, name=}]
2019-06-13 19:39:32.292  INFO 3440 --- [SimpleAsyncTaskExecutor-1] feign.RequestInterceptor                 : ------feign设置token114
2019-06-13 19:39:32.295  INFO 3440 --- [SimpleAsyncTaskExecutor-2] feign.RequestInterceptor                 : ------feign设置token113
2019-06-13 19:39:32.299  INFO 3440 --- [SimpleAsyncTaskExecutor-1] s.c.a.AnnotationConfigApplicationContext : Refreshing SpringClientFactory-api-base: startup date [Thu Jun 13 19:39:32 CST 2019]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@8ad6665
2019-06-13 19:39:32.457  INFO 3440 --- [SimpleAsyncTaskExecutor-1] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-06-13 19:39:32.883  INFO 3440 --- [SimpleAsyncTaskExecutor-1] c.netflix.config.ChainedDynamicProperty  : Flipping property: api-base.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-06-13 19:39:32.925  INFO 3440 --- [SimpleAsyncTaskExecutor-1] c.n.u.concurrent.ShutdownEnabledTimer    : Shutdown hook installed for: NFLoadBalancer-PingTimer-api-base
2019-06-13 19:39:32.938  INFO 3440 --- [SimpleAsyncTaskExecutor-1] c.netflix.loadbalancer.BaseLoadBalancer  : Client: api-base instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=api-base,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2019-06-13 19:39:32.948  INFO 3440 --- [SimpleAsyncTaskExecutor-1] c.n.l.DynamicServerListLoadBalancer      : Using serverListUpdater PollingServerListUpdater
2019-06-13 19:39:32.953  INFO 3440 --- [SimpleAsyncTaskExecutor-1] c.n.l.DynamicServerListLoadBalancer      : DynamicServerListLoadBalancer for client api-base initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=api-base,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@21948b1a
2019-06-13 19:39:33.080 ERROR 3440 --- [SimpleAsyncTaskExecutor-1] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy197.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy197.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 19:39:33.080 ERROR 3440 --- [SimpleAsyncTaskExecutor-2] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy197.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy197.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 19:40:11.556  INFO 3440 --- [MessageBroker-1] o.s.w.s.c.WebSocketMessageBrokerStats    : WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-06-13 19:40:54.465  INFO 9312 --- [main] c.b.c.ClouddoAdminApplication            : No active profile set, falling back to default profiles: default
2019-06-13 19:40:54.490  INFO 9312 --- [main] ConfigServletWebServerApplicationContext : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@794b435f: startup date [Thu Jun 13 19:40:54 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6436a7db
2019-06-13 19:40:56.371  INFO 9312 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-13 19:40:57.091  INFO 9312 --- [main] o.s.cloud.context.scope.GenericScope     : BeanFactory id=d229a6ea-016d-322a-b2d4-3e4463f5e4cd
2019-06-13 19:40:57.136  INFO 9312 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-06-13 19:40:57.463  INFO 9312 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ee661c47] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 19:40:57.860  INFO 9312 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.bootdo.clouddoadmin.config.RedisConfig$$EnhancerBySpringCGLIB$$11136598] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 19:40:57.884  INFO 9312 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.bootdo.clouddoadmin.config.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 19:40:58.003  INFO 9312 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$a801f44] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 19:40:58.682  INFO 9312 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8005 (http)
2019-06-13 19:40:58.718  INFO 9312 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2019-06-13 19:40:58.719  INFO 9312 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.32
2019-06-13 19:40:58.726  INFO 9312 --- [localhost-startStop-1] o.a.catalina.core.AprLifecycleListener   : The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_181\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;C:;C:\Program Files\Java\jdk1.8.0_181\bin;D:\myApps\apache-maven-3.6.0\bin;C:\Program Files\Java\jdk1.8.0_181\jre\bin;C:\Program Files\Java\jdk1.8.0_181\bin ;C:\Program Files\TortoiseGit\bin;C:\windows\system32;C:\windows;C:\windows\system32\wbem;D:\StudyTools\XAMPP\mysql\bin;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;D:\系统工具\Git\cmd;D:\StudyTools\NodeJs\;D:\StudyTools\Elang\erl10.0.1\bin;D:\StudyTools\RabbitMQ Server\rabbitmq_server-3.7.7\sbin;;D:\StudyTools\DockerToolbox;D:\StudyTools\NodeJs\node_global;D:\StudyTools\WebStorm 2019.1.2\bin;;.]
2019-06-13 19:40:59.059  INFO 9312 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2019-06-13 19:40:59.060  INFO 9312 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 4570 ms
2019-06-13 19:40:59.087  INFO 9312 --- [localhost-startStop-1] c.b.c.config.DruidConfiguration          : init Druid Servlet Configuration 
2019-06-13 19:40:59.494  WARN 9312 --- [localhost-startStop-1] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2019-06-13 19:40:59.494  INFO 9312 --- [localhost-startStop-1] c.n.c.sources.URLConfigurationSource     : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-06-13 19:40:59.507  INFO 9312 --- [localhost-startStop-1] c.netflix.config.DynamicPropertyFactory  : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@46f774f0
2019-06-13 19:41:02.638  INFO 9312 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2019-06-13 19:41:02.639  INFO 9312 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'webMvcMetricsFilter' to: [/*]
2019-06-13 19:41:02.639  INFO 9312 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-06-13 19:41:02.639  INFO 9312 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-06-13 19:41:02.639  INFO 9312 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2019-06-13 19:41:02.640  INFO 9312 --- [localhost-startStop-1] .s.DelegatingFilterProxyRegistrationBean : Mapping filter: 'springSecurityFilterChain' to: [/*]
2019-06-13 19:41:02.641  INFO 9312 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpTraceFilter' to: [/*]
2019-06-13 19:41:02.641  INFO 9312 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'webStatFilter' to urls: [/*]
2019-06-13 19:41:02.641  INFO 9312 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Servlet statViewServlet mapped to [/druid/*]
2019-06-13 19:41:02.643  INFO 9312 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Servlet dispatcherServlet mapped to [/]
2019-06-13 19:41:04.695  INFO 9312 --- [main] s.c.a.AnnotationConfigApplicationContext : Refreshing FeignContext-course: startup date [Thu Jun 13 19:41:04 CST 2019]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@794b435f
2019-06-13 19:41:04.723  INFO 9312 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-06-13 19:41:05.045  INFO 9312 --- [main] s.c.a.AnnotationConfigApplicationContext : Refreshing FeignContext-api-base: startup date [Thu Jun 13 19:41:05 CST 2019]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@794b435f
2019-06-13 19:41:05.067  INFO 9312 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-06-13 19:41:05.734  INFO 9312 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/authorize],methods=[POST],params=[user_oauth_approval]}" onto public org.springframework.web.servlet.View org.springframework.security.oauth2.provider.endpoint.AuthorizationEndpoint.approveOrDeny(java.util.Map<java.lang.String, java.lang.String>,java.util.Map<java.lang.String, ?>,org.springframework.web.bind.support.SessionStatus,java.security.Principal)
2019-06-13 19:41:05.736  INFO 9312 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/authorize]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.security.oauth2.provider.endpoint.AuthorizationEndpoint.authorize(java.util.Map<java.lang.String, java.lang.Object>,java.util.Map<java.lang.String, java.lang.String>,org.springframework.web.bind.support.SessionStatus,java.security.Principal)
2019-06-13 19:41:05.738  INFO 9312 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/token],methods=[GET]}" onto public org.springframework.http.ResponseEntity<org.springframework.security.oauth2.common.OAuth2AccessToken> org.springframework.security.oauth2.provider.endpoint.TokenEndpoint.getAccessToken(java.security.Principal,java.util.Map<java.lang.String, java.lang.String>) throws org.springframework.web.HttpRequestMethodNotSupportedException
2019-06-13 19:41:05.738  INFO 9312 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/token],methods=[POST]}" onto public org.springframework.http.ResponseEntity<org.springframework.security.oauth2.common.OAuth2AccessToken> org.springframework.security.oauth2.provider.endpoint.TokenEndpoint.postAccessToken(java.security.Principal,java.util.Map<java.lang.String, java.lang.String>) throws org.springframework.web.HttpRequestMethodNotSupportedException
2019-06-13 19:41:05.739  INFO 9312 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/check_token]}" onto public java.util.Map<java.lang.String, ?> org.springframework.security.oauth2.provider.endpoint.CheckTokenEndpoint.checkToken(java.lang.String)
2019-06-13 19:41:05.740  INFO 9312 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/confirm_access]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.security.oauth2.provider.endpoint.WhitelabelApprovalEndpoint.getAccessConfirmation(java.util.Map<java.lang.String, java.lang.Object>,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-06-13 19:41:05.741  INFO 9312 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/error]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.security.oauth2.provider.endpoint.WhitelabelErrorEndpoint.handleError(javax.servlet.http.HttpServletRequest)
2019-06-13 19:41:05.852  INFO 9312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-06-13 19:41:05.854  INFO 9312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/remove],methods=[POST]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.DeptController.remove(java.lang.Long)
2019-06-13 19:41:05.854  INFO 9312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/batchRemove],methods=[POST]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.DeptController.remove(java.lang.Long[])
2019-06-13 19:41:05.855  INFO 9312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/update]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.DeptController.update(com.bootdo.clouddoadmin.domain.DeptDO)
2019-06-13 19:41:05.855  INFO 9312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/list],methods=[GET]}" onto public java.util.List<com.bootdo.clouddoadmin.domain.DeptDO> com.bootdo.clouddoadmin.controller.DeptController.list()
2019-06-13 19:41:05.856  INFO 9312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/save],methods=[POST]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.DeptController.save(com.bootdo.clouddoadmin.domain.DeptDO)
2019-06-13 19:41:05.856  INFO 9312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/tree],methods=[GET]}" onto public com.bootdo.clouddoadmin.domain.Tree<com.bootdo.clouddoadmin.domain.DeptDO> com.bootdo.clouddoadmin.controller.DeptController.tree()
2019-06-13 19:41:05.857  INFO 9312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.DeptController.dept()
2019-06-13 19:41:05.857  INFO 9312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.DeptController.treeView()
2019-06-13 19:41:05.858  INFO 9312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/router],methods=[GET]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.LoginController.router()
2019-06-13 19:41:05.859  INFO 9312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/logout]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.LoginController.logout(java.lang.String)
2019-06-13 19:41:05.865  INFO 9312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu],methods=[DELETE]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.remove(java.lang.Long)
2019-06-13 19:41:05.865  INFO 9312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/{id}],methods=[GET]}" onto com.bootdo.clouddoadmin.domain.MenuDO com.bootdo.clouddoadmin.controller.MenuController.get(java.lang.Long)
2019-06-13 19:41:05.866  INFO 9312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu],methods=[PUT]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.update(com.bootdo.clouddoadmin.domain.MenuDO)
2019-06-13 19:41:05.867  INFO 9312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu],methods=[GET]}" onto java.util.List<com.bootdo.clouddoadmin.domain.Tree<com.bootdo.clouddoadmin.domain.MenuDO>> com.bootdo.clouddoadmin.controller.MenuController.list()
2019-06-13 19:41:05.868  INFO 9312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/list],methods=[GET]}" onto java.util.List<com.bootdo.clouddoadmin.domain.MenuDO> com.bootdo.clouddoadmin.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-13 19:41:05.869  INFO 9312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu],methods=[POST]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.save(com.bootdo.clouddoadmin.domain.MenuDO)
2019-06-13 19:41:05.869  INFO 9312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/tree],methods=[GET]}" onto com.bootdo.clouddoadmin.domain.Tree<com.bootdo.clouddoadmin.domain.MenuDO> com.bootdo.clouddoadmin.controller.MenuController.tree()
2019-06-13 19:41:05.870  INFO 9312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/clearCache],methods=[GET]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.clearCache()
2019-06-13 19:41:05.870  INFO 9312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/currentUserMenus],methods=[GET]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.currentUserMenus()
2019-06-13 19:41:05.871  INFO 9312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/roleId],methods=[GET]}" onto java.util.List<java.lang.Long> com.bootdo.clouddoadmin.controller.MenuController.menuIdsByRoleId(java.lang.Long)
2019-06-13 19:41:05.872  INFO 9312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/userMenus],methods=[GET]}" onto java.util.List<com.bootdo.clouddocommon.dto.MenuDTO> com.bootdo.clouddoadmin.controller.MenuController.userMenus()
2019-06-13 19:41:05.878  INFO 9312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role],methods=[PUT]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.RoleController.update(com.bootdo.clouddoadmin.domain.RoleDO)
2019-06-13 19:41:05.878  INFO 9312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role],methods=[GET]}" onto com.bootdo.clouddocommon.utils.PageUtils com.bootdo.clouddoadmin.controller.RoleController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-13 19:41:05.879  INFO 9312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role],methods=[POST]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.RoleController.save(com.bootdo.clouddoadmin.domain.RoleDO)
2019-06-13 19:41:05.880  INFO 9312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/userId/{userId}],methods=[GET]}" onto java.util.List<java.lang.Long> com.bootdo.clouddoadmin.controller.RoleController.roleIdByUserId(java.lang.Long)
2019-06-13 19:41:05.881  INFO 9312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.TestController.test()
2019-06-13 19:41:05.882  INFO 9312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test1],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.TestController.test1()
2019-06-13 19:41:05.885  INFO 9312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user],methods=[DELETE]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.remove(java.lang.Long)
2019-06-13 19:41:05.886  INFO 9312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.get(java.lang.Long)
2019-06-13 19:41:05.886  INFO 9312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user],methods=[PUT]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.update(com.bootdo.clouddoadmin.dto.UserDTO)
2019-06-13 19:41:05.887  INFO 9312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user],methods=[POST]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.save(com.bootdo.clouddoadmin.dto.UserDTO)
2019-06-13 19:41:05.887  INFO 9312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/batchRemove],methods=[POST]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.batchRemove(java.lang.Long[])
2019-06-13 19:41:05.887  INFO 9312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/tokenUser],methods=[GET]}" onto public java.security.Principal com.bootdo.clouddoadmin.controller.UserController.user(java.security.Principal)
2019-06-13 19:41:05.888  INFO 9312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/roleId/{roleId}],methods=[GET]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.getTeacherList(java.lang.Long,java.util.Map<java.lang.String, java.lang.Object>)
2019-06-13 19:41:05.889  INFO 9312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/exits],methods=[POST]}" onto boolean com.bootdo.clouddoadmin.controller.UserController.exits(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-13 19:41:05.890  INFO 9312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/currentUser],methods=[GET]}" onto public com.bootdo.clouddocommon.dto.LoginUserDTO com.bootdo.clouddoadmin.controller.UserController.currentUser()
2019-06-13 19:41:05.895  INFO 9312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-06-13 19:41:05.897  INFO 9312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-06-13 19:41:05.898  INFO 9312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-06-13 19:41:05.903  INFO 9312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-06-13 19:41:05.904  INFO 9312 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-13 19:41:06.135  INFO 9312 --- [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 2 endpoint(s) beneath base path '/actuator'
2019-06-13 19:41:06.161  INFO 9312 --- [main] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-06-13 19:41:06.163  INFO 9312 --- [main] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-06-13 19:41:06.165  INFO 9312 --- [main] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-13 19:41:07.374  INFO 9312 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4b5f022f, org.springframework.security.web.context.SecurityContextPersistenceFilter@6a562255, org.springframework.security.web.header.HeaderWriterFilter@abf1816, org.springframework.security.web.authentication.logout.LogoutFilter@4af44f2a, org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter@dbcf7c3, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@4cf15477, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@581d5b33, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@78f4d15d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7a569672, org.springframework.security.web.session.SessionManagementFilter@7bd1098, org.springframework.security.web.access.ExceptionTranslationFilter@446dacf9, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@28515443]
2019-06-13 19:41:07.403  INFO 9312 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: org.springframework.security.oauth2.config.annotation.web.configuration.ResourceServerConfiguration$NotOAuthRequestMatcher@61503d00, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1fcfcf37, org.springframework.security.web.context.SecurityContextPersistenceFilter@29174dfe, org.springframework.security.web.header.HeaderWriterFilter@6aa792, org.springframework.security.web.authentication.logout.LogoutFilter@7fdff56b, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@1c681761, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@1fe7fa16, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@319d106c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@641e67fa, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3ebc6d8b, org.springframework.security.web.session.SessionManagementFilter@5c78f456, org.springframework.security.web.access.ExceptionTranslationFilter@14c18a6a, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7fcbc336]
2019-06-13 19:41:07.466  INFO 9312 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7535307c, org.springframework.security.web.context.SecurityContextPersistenceFilter@29eaf100, org.springframework.security.web.header.HeaderWriterFilter@32a074ed, org.springframework.security.web.csrf.CsrfFilter@45017263, org.springframework.security.web.authentication.logout.LogoutFilter@747e8659, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@147097ad, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@a6204e4, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@3539cf45, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6c1a6db1, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5dac6bc3, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@556a6320, org.springframework.security.web.session.SessionManagementFilter@673605ef, org.springframework.security.web.access.ExceptionTranslationFilter@6054ac20, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6f69e2d8]
2019-06-13 19:41:07.565  INFO 9312 --- [main] pertySourcedRequestMappingHandlerMapping : Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2019-06-13 19:41:07.884  INFO 9312 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService  'clientInboundChannelExecutor'
2019-06-13 19:41:07.920  INFO 9312 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-06-13 19:41:07.966  INFO 9312 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-06-13 19:41:08.061  INFO 9312 --- [main] o.s.w.s.s.s.WebSocketHandlerMapping      : Mapped URL path [/endpoint/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-06-13 19:41:08.097  INFO 9312 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService  'brokerChannelExecutor'
2019-06-13 19:41:08.355  WARN 9312 --- [main] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2019-06-13 19:41:08.356  INFO 9312 --- [main] c.n.c.sources.URLConfigurationSource     : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-06-13 19:41:08.529  INFO 9312 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-13 19:41:09.105  INFO 9312 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@794b435f: startup date [Thu Jun 13 19:40:54 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6436a7db
2019-06-13 19:41:09.221  INFO 9312 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-13 19:41:09.221  INFO 9312 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-13 19:41:09.259  INFO 9312 --- [main] .m.m.a.ExceptionHandlerExceptionResolver : Detected @ExceptionHandler methods in exceptionAdviceHandler
2019-06-13 19:41:10.373  INFO 9312 --- [main] o.s.ui.freemarker.SpringTemplateLoader   : SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@794b435f: startup date [Thu Jun 13 19:40:54 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6436a7db] and template loader path [classpath:/templates/]
2019-06-13 19:41:10.375  INFO 9312 --- [main] o.s.w.s.v.f.FreeMarkerConfigurer         : ClassTemplateLoader for Spring macros added to FreeMarker configuration
2019-06-13 19:41:11.128  INFO 9312 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2019-06-13 19:41:11.130  INFO 9312 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2019-06-13 19:41:11.147  INFO 9312 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'environmentManager' has been autodetected for JMX exposure
2019-06-13 19:41:11.150  INFO 9312 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'refreshScope' has been autodetected for JMX exposure
2019-06-13 19:41:11.151  INFO 9312 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2019-06-13 19:41:11.156  INFO 9312 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2019-06-13 19:41:11.172  INFO 9312 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2019-06-13 19:41:11.192  INFO 9312 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=794b435f,type=ConfigurationPropertiesRebinder]
2019-06-13 19:41:11.203  INFO 9312 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-06-13 19:41:11.215  INFO 9312 --- [main] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase 0
2019-06-13 19:41:11.240  INFO 9312 --- [main] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2019-06-13 19:41:11.286  INFO 9312 --- [main] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2019-06-13 19:41:11.790  INFO 9312 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using JSON encoding codec LegacyJacksonJson
2019-06-13 19:41:11.790  INFO 9312 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using JSON decoding codec LegacyJacksonJson
2019-06-13 19:41:11.971  INFO 9312 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using XML encoding codec XStreamXml
2019-06-13 19:41:11.972  INFO 9312 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using XML decoding codec XStreamXml
2019-06-13 19:41:12.307  INFO 9312 --- [main] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 19:41:12.596  INFO 9312 --- [main] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2019-06-13 19:41:12.596  INFO 9312 --- [main] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2019-06-13 19:41:12.596  INFO 9312 --- [main] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2019-06-13 19:41:12.596  INFO 9312 --- [main] com.netflix.discovery.DiscoveryClient    : Application is null : false
2019-06-13 19:41:12.596  INFO 9312 --- [main] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2019-06-13 19:41:12.596  INFO 9312 --- [main] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2019-06-13 19:41:12.597  INFO 9312 --- [main] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2019-06-13 19:41:13.005  INFO 9312 --- [main] com.netflix.discovery.DiscoveryClient    : The response status is 200
2019-06-13 19:41:13.031  INFO 9312 --- [main] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2019-06-13 19:41:13.038  INFO 9312 --- [main] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2019-06-13 19:41:13.046  INFO 9312 --- [main] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1560426073043 with initial instances count: 2
2019-06-13 19:41:13.077  INFO 9312 --- [main] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application api-admin with eureka with status UP
2019-06-13 19:41:13.077  INFO 9312 --- [main] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1560426073077, current=UP, previous=STARTING]
2019-06-13 19:41:13.079  INFO 9312 --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_API-ADMIN/Lenovo-PC:api-admin:8005: registering service...
2019-06-13 19:41:13.086  INFO 9312 --- [main] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase 2147483647
2019-06-13 19:41:13.087  INFO 9312 --- [main] d.s.w.p.DocumentationPluginsBootstrapper : Context refreshed
2019-06-13 19:41:13.133  INFO 9312 --- [main] d.s.w.p.DocumentationPluginsBootstrapper : Found 1 custom documentation plugin(s)
2019-06-13 19:41:13.222  INFO 9312 --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_API-ADMIN/Lenovo-PC:api-admin:8005 - registration status: 204
2019-06-13 19:41:13.226  INFO 9312 --- [main] s.d.s.w.s.ApiListingReferenceScanner     : Scanning for api listing references
2019-06-13 19:41:13.415  INFO 9312 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: removeUsingPOST_1
2019-06-13 19:41:13.542  INFO 9312 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: listUsingGET_1
2019-06-13 19:41:13.551  INFO 9312 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: listUsingGET_2
2019-06-13 19:41:13.562  INFO 9312 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: saveUsingPOST_1
2019-06-13 19:41:13.565  INFO 9312 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: treeUsingGET_1
2019-06-13 19:41:13.567  INFO 9312 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: updateUsingPUT_1
2019-06-13 19:41:13.576  INFO 9312 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: listUsingGET_3
2019-06-13 19:41:13.596  INFO 9312 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: saveUsingPOST_2
2019-06-13 19:41:13.598  INFO 9312 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: updateUsingPUT_2
2019-06-13 19:41:13.672  INFO 9312 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: getUsingGET_1
2019-06-13 19:41:13.676  INFO 9312 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: removeUsingDELETE_1
2019-06-13 19:41:13.684  INFO 9312 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: saveUsingPOST_3
2019-06-13 19:41:13.686  INFO 9312 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: updateUsingPUT_3
2019-06-13 19:41:13.709  INFO 9312 --- [main] o.s.m.s.b.SimpleBrokerMessageHandler     : Starting...
2019-06-13 19:41:13.711  INFO 9312 --- [main] o.s.m.s.b.SimpleBrokerMessageHandler     : BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-06-13 19:41:13.712  INFO 9312 --- [main] o.s.m.s.b.SimpleBrokerMessageHandler     : Started.
2019-06-13 19:41:13.816  INFO 9312 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8005 (http) with context path ''
2019-06-13 19:41:13.820  INFO 9312 --- [main] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 8005
2019-06-13 19:41:13.830  INFO 9312 --- [main] c.b.c.ClouddoAdminApplication            : Started ClouddoAdminApplication in 21.957 seconds (JVM running for 35.804)
2019-06-13 19:41:14.706  INFO 9312 --- [RMI TCP Connection(3)-10.255.44.113] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-06-13 19:41:14.706  INFO 9312 --- [RMI TCP Connection(3)-10.255.44.113] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2019-06-13 19:41:14.754  INFO 9312 --- [RMI TCP Connection(3)-10.255.44.113] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 47 ms
2019-06-13 19:41:15.015  INFO 9312 --- [RMI TCP Connection(2)-10.255.44.113] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2019-06-13 19:41:15.324  INFO 9312 --- [RMI TCP Connection(2)-10.255.44.113] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2019-06-13 19:41:15.327  INFO 9312 --- [RMI TCP Connection(2)-10.255.44.113] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2019-06-13 19:41:48.564  INFO 9312 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/roleId/2
2019-06-13 19:41:48.564  INFO 9312 --- [http-nio-8005-exec-1] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/router
2019-06-13 19:41:48.564  INFO 9312 --- [http-nio-8005-exec-5] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/currentUser
2019-06-13 19:41:48.564  INFO 9312 --- [http-nio-8005-exec-5] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 19:41:48.564  INFO 9312 --- [http-nio-8005-exec-1] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 19:41:48.564  INFO 9312 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 19:41:48.568  INFO 9312 --- [http-nio-8005-exec-1] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.LoginController.router
2019-06-13 19:41:48.569  INFO 9312 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.getTeacherList
2019-06-13 19:41:48.569  INFO 9312 --- [http-nio-8005-exec-1] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 19:41:48.569  INFO 9312 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : [2, {page=1, limit=10, name=}]
2019-06-13 19:41:48.568  INFO 9312 --- [http-nio-8005-exec-5] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.currentUser
2019-06-13 19:41:48.570  INFO 9312 --- [http-nio-8005-exec-5] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 19:48:36.094  INFO 9312 --- [MessageBroker-1] o.s.w.s.c.WebSocketMessageBrokerStats    : WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-06-13 19:48:36.099  INFO 9312 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 19:48:36.103  INFO 9312 --- [http-nio-8005-exec-5] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 407540
2019-06-13 19:48:36.329  INFO 9312 --- [http-nio-8005-exec-1] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 407766
2019-06-13 19:48:36.408  INFO 9312 --- [http-nio-8005-exec-5] .s.a.AnnotationAsyncExecutionInterceptor : More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-06-13 19:48:36.428  INFO 9312 --- [SimpleAsyncTaskExecutor-1] feign.RequestInterceptor                 : ------feign设置token122
2019-06-13 19:48:36.428  INFO 9312 --- [SimpleAsyncTaskExecutor-2] feign.RequestInterceptor                 : ------feign设置token121
2019-06-13 19:48:36.435  INFO 9312 --- [SimpleAsyncTaskExecutor-1] s.c.a.AnnotationConfigApplicationContext : Refreshing SpringClientFactory-api-base: startup date [Thu Jun 13 19:48:36 CST 2019]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@794b435f
2019-06-13 19:48:36.487  WARN 9312 --- [http-nio-8005-exec-2] .m.m.a.ExceptionHandlerExceptionResolver : Failed to invoke @ExceptionHandler method: public com.bootdo.clouddocommon.response.BaseResponse com.bootdo.clouddoadmin.handler.ExceptionAdviceHandler.runtimeExceptionHandler(java.lang.RuntimeException)

org.apache.catalina.connector.ClientAbortException: java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:321) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:284) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.connector.CoyoteOutputStream.flush(CoyoteOutputStream.java:118) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.springframework.security.web.util.OnCommittedResponseWrapper$SaveContextServletOutputStream.flush(OnCommittedResponseWrapper.java:514) ~[spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at com.fasterxml.jackson.core.json.UTF8JsonGenerator.flush(UTF8JsonGenerator.java:1100) ~[jackson-core-2.9.6.jar:2.9.6]
	at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:915) ~[jackson-databind-2.9.6.jar:2.9.6]
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:288) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.write(AbstractGenericHttpMessageConverter.java:102) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:272) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(RequestResponseBodyMethodProcessor.java:180) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:82) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:119) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:400) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61) [spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139) [spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78) [spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255) [spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062) [spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008) [spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925) [spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974) [spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866) [spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851) [spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) [tomcat-embed-websocket-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123) [druid-1.1.12.jar:1.1.12]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90) [spring-boot-actuator-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter.doFilter(OAuth2AuthenticationProcessingFilter.java:176) [spring-security-oauth2-2.2.1.RELEASE.jar:na]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:155) [spring-boot-actuator-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:123) [spring-boot-actuator-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108) [spring-boot-actuator-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:800) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:800) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1471) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
Caused by: java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
	at sun.nio.ch.SocketDispatcher.write0(Native Method) ~[na:1.8.0_181]
	at sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:51) ~[na:1.8.0_181]
	at sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:93) ~[na:1.8.0_181]
	at sun.nio.ch.IOUtil.write(IOUtil.java:65) ~[na:1.8.0_181]
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:471) ~[na:1.8.0_181]
	at org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:134) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.NioBlockingSelector.write(NioBlockingSelector.java:101) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.NioSelectorPool.write(NioSelectorPool.java:157) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1279) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:670) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.SocketWrapperBase.flushBlocking(SocketWrapperBase.java:607) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.SocketWrapperBase.flush(SocketWrapperBase.java:597) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer.flush(Http11OutputBuffer.java:646) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.http11.filters.ChunkedOutputFilter.flush(ChunkedOutputFilter.java:169) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.http11.Http11OutputBuffer.flush(Http11OutputBuffer.java:252) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.http11.Http11Processor.flush(Http11Processor.java:1561) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:371) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.Response.action(Response.java:173) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:317) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	... 109 common frames omitted

2019-06-13 19:48:36.489  WARN 9312 --- [http-nio-8005-exec-5] .m.m.a.ExceptionHandlerExceptionResolver : Failed to invoke @ExceptionHandler method: public com.bootdo.clouddocommon.response.BaseResponse com.bootdo.clouddoadmin.handler.ExceptionAdviceHandler.iOExceptionHandler()

org.apache.catalina.connector.ClientAbortException: java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:321) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:284) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.connector.CoyoteOutputStream.flush(CoyoteOutputStream.java:118) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.springframework.security.web.util.OnCommittedResponseWrapper$SaveContextServletOutputStream.flush(OnCommittedResponseWrapper.java:514) ~[spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at com.fasterxml.jackson.core.json.UTF8JsonGenerator.flush(UTF8JsonGenerator.java:1100) ~[jackson-core-2.9.6.jar:2.9.6]
	at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:915) ~[jackson-databind-2.9.6.jar:2.9.6]
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:288) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.write(AbstractGenericHttpMessageConverter.java:102) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:272) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(RequestResponseBodyMethodProcessor.java:180) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:82) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:119) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:400) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61) [spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139) [spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78) [spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255) [spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062) [spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008) [spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925) [spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974) [spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866) [spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851) [spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) [tomcat-embed-websocket-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123) [druid-1.1.12.jar:1.1.12]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90) [spring-boot-actuator-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter.doFilter(OAuth2AuthenticationProcessingFilter.java:176) [spring-security-oauth2-2.2.1.RELEASE.jar:na]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:155) [spring-boot-actuator-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:123) [spring-boot-actuator-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108) [spring-boot-actuator-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:800) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:800) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1471) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
Caused by: java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
	at sun.nio.ch.SocketDispatcher.write0(Native Method) ~[na:1.8.0_181]
	at sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:51) ~[na:1.8.0_181]
	at sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:93) ~[na:1.8.0_181]
	at sun.nio.ch.IOUtil.write(IOUtil.java:65) ~[na:1.8.0_181]
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:471) ~[na:1.8.0_181]
	at org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:134) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.NioBlockingSelector.write(NioBlockingSelector.java:101) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.NioSelectorPool.write(NioSelectorPool.java:157) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1279) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:670) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.SocketWrapperBase.flushBlocking(SocketWrapperBase.java:607) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.SocketWrapperBase.flush(SocketWrapperBase.java:597) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer.flush(Http11OutputBuffer.java:646) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.http11.filters.ChunkedOutputFilter.flush(ChunkedOutputFilter.java:169) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.http11.Http11OutputBuffer.flush(Http11OutputBuffer.java:252) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.http11.Http11Processor.flush(Http11Processor.java:1561) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:371) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.Response.action(Response.java:173) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:317) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	... 109 common frames omitted

2019-06-13 19:48:36.487  WARN 9312 --- [http-nio-8005-exec-1] .m.m.a.ExceptionHandlerExceptionResolver : Failed to invoke @ExceptionHandler method: public com.bootdo.clouddocommon.response.BaseResponse com.bootdo.clouddoadmin.handler.ExceptionAdviceHandler.iOExceptionHandler()

org.apache.catalina.connector.ClientAbortException: java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:321) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:284) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.connector.CoyoteOutputStream.flush(CoyoteOutputStream.java:118) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.springframework.security.web.util.OnCommittedResponseWrapper$SaveContextServletOutputStream.flush(OnCommittedResponseWrapper.java:514) ~[spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at com.fasterxml.jackson.core.json.UTF8JsonGenerator.flush(UTF8JsonGenerator.java:1100) ~[jackson-core-2.9.6.jar:2.9.6]
	at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:915) ~[jackson-databind-2.9.6.jar:2.9.6]
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:288) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.write(AbstractGenericHttpMessageConverter.java:102) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:272) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(RequestResponseBodyMethodProcessor.java:180) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:82) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:119) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:400) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61) [spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139) [spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78) [spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255) [spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062) [spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008) [spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925) [spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974) [spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866) [spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851) [spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) [tomcat-embed-websocket-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123) [druid-1.1.12.jar:1.1.12]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90) [spring-boot-actuator-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter.doFilter(OAuth2AuthenticationProcessingFilter.java:176) [spring-security-oauth2-2.2.1.RELEASE.jar:na]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178) [spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:155) [spring-boot-actuator-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:123) [spring-boot-actuator-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108) [spring-boot-actuator-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) [spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:800) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:800) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1471) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
Caused by: java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
	at sun.nio.ch.SocketDispatcher.write0(Native Method) ~[na:1.8.0_181]
	at sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:51) ~[na:1.8.0_181]
	at sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:93) ~[na:1.8.0_181]
	at sun.nio.ch.IOUtil.write(IOUtil.java:65) ~[na:1.8.0_181]
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:471) ~[na:1.8.0_181]
	at org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:134) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.NioBlockingSelector.write(NioBlockingSelector.java:101) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.NioSelectorPool.write(NioSelectorPool.java:157) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1279) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:670) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.SocketWrapperBase.flushBlocking(SocketWrapperBase.java:607) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.SocketWrapperBase.flush(SocketWrapperBase.java:597) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer.flush(Http11OutputBuffer.java:646) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.http11.filters.ChunkedOutputFilter.flush(ChunkedOutputFilter.java:169) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.http11.Http11OutputBuffer.flush(Http11OutputBuffer.java:252) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.http11.Http11Processor.flush(Http11Processor.java:1561) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:371) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.Response.action(Response.java:173) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:317) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	... 109 common frames omitted

2019-06-13 19:48:36.595 ERROR 9312 --- [http-nio-8005-exec-2] o.a.c.c.C.[.[.[/].[dispatcherServlet]    : Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.binding.BindingException: Parameter 'name' not found. Available parameters are [roleId, map, param1, param2]] with root cause

org.apache.ibatis.binding.BindingException: Parameter 'name' not found. Available parameters are [roleId, map, param1, param2]
	at org.apache.ibatis.binding.MapperMethod$ParamMap.get(MapperMethod.java:202) ~[mybatis-3.4.4.jar:3.4.4]
	at org.apache.ibatis.reflection.wrapper.MapWrapper.get(MapWrapper.java:45) ~[mybatis-3.4.4.jar:3.4.4]
	at org.apache.ibatis.reflection.MetaObject.getValue(MetaObject.java:122) ~[mybatis-3.4.4.jar:3.4.4]
	at org.apache.ibatis.executor.BaseExecutor.createCacheKey(BaseExecutor.java:219) ~[mybatis-3.4.4.jar:3.4.4]
	at org.apache.ibatis.executor.CachingExecutor.createCacheKey(CachingExecutor.java:146) ~[mybatis-3.4.4.jar:3.4.4]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:82) ~[mybatis-3.4.4.jar:3.4.4]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148) ~[mybatis-3.4.4.jar:3.4.4]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141) ~[mybatis-3.4.4.jar:3.4.4]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434) ~[mybatis-spring-1.3.0.jar:1.3.0]
	at com.sun.proxy.$Proxy156.selectList(Unknown Source) ~[na:na]
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231) ~[mybatis-spring-1.3.0.jar:1.3.0]
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137) ~[mybatis-3.4.4.jar:3.4.4]
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75) ~[mybatis-3.4.4.jar:3.4.4]
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59) ~[mybatis-3.4.4.jar:3.4.4]
	at com.sun.proxy.$Proxy157.getUserList(Unknown Source) ~[na:na]
	at com.bootdo.clouddoadmin.service.impl.UserServiceImpl.getUserList(UserServiceImpl.java:61) ~[classes/:na]
	at com.bootdo.clouddoadmin.service.impl.UserServiceImpl$$FastClassBySpringCGLIB$$205e8230.invoke(<generated>) ~[classes/:na]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204) ~[spring-core-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294) ~[spring-tx-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98) ~[spring-tx-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at com.bootdo.clouddoadmin.service.impl.UserServiceImpl$$EnhancerBySpringCGLIB$$635905f7.getUserList(<generated>) ~[classes/:na]
	at com.bootdo.clouddoadmin.controller.UserController.getTeacherList(UserController.java:87) ~[classes/:na]
	at com.bootdo.clouddoadmin.controller.UserController$$FastClassBySpringCGLIB$$ea49dd7e.invoke(<generated>) ~[classes/:na]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204) ~[spring-core-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at com.bootdo.clouddocommon.aspect.WebLogAspect.doAround(WebLogAspect.java:45) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at com.bootdo.clouddocommon.aspect.LogAspect.around(LogAspect.java:41) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:174) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at com.bootdo.clouddoadmin.controller.UserController$$EnhancerBySpringCGLIB$$4d2408b1.getTeacherList(<generated>) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) ~[tomcat-embed-websocket-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123) ~[druid-1.1.12.jar:1.1.12]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90) ~[spring-boot-actuator-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320) ~[spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127) ~[spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91) ~[spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119) ~[spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137) ~[spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111) ~[spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170) ~[spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158) ~[spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter.doFilter(OAuth2AuthenticationProcessingFilter.java:176) ~[spring-security-oauth2-2.2.1.RELEASE.jar:na]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116) ~[spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66) ~[spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105) ~[spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56) ~[spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215) ~[spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178) ~[spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:155) ~[spring-boot-actuator-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:123) ~[spring-boot-actuator-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108) ~[spring-boot-actuator-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:800) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:800) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1471) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]

2019-06-13 19:48:36.735  WARN 9312 --- [http-nio-8005-exec-2] .m.m.a.ExceptionHandlerExceptionResolver : Failed to invoke @ExceptionHandler method: public com.bootdo.clouddocommon.response.BaseResponse com.bootdo.clouddoadmin.handler.ExceptionAdviceHandler.iOExceptionHandler()

org.apache.catalina.connector.ClientAbortException: java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:321) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:284) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.connector.CoyoteOutputStream.flush(CoyoteOutputStream.java:118) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at com.fasterxml.jackson.core.json.UTF8JsonGenerator.flush(UTF8JsonGenerator.java:1100) ~[jackson-core-2.9.6.jar:2.9.6]
	at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:915) ~[jackson-databind-2.9.6.jar:2.9.6]
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:288) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.write(AbstractGenericHttpMessageConverter.java:102) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:272) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor.handleReturnValue(RequestResponseBodyMethodProcessor.java:180) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:82) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:119) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver.doResolveHandlerMethodException(ExceptionHandlerExceptionResolver.java:400) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.handler.AbstractHandlerMethodExceptionResolver.doResolveException(AbstractHandlerMethodExceptionResolver.java:61) [spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.handler.AbstractHandlerExceptionResolver.resolveException(AbstractHandlerExceptionResolver.java:139) [spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.handler.HandlerExceptionResolverComposite.resolveException(HandlerExceptionResolverComposite.java:78) [spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.processHandlerException(DispatcherServlet.java:1255) [spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1062) [spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1008) [spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925) [spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974) [spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866) [spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851) [spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:800) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:800) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1471) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
Caused by: java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
	at sun.nio.ch.SocketDispatcher.write0(Native Method) ~[na:1.8.0_181]
	at sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:51) ~[na:1.8.0_181]
	at sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:93) ~[na:1.8.0_181]
	at sun.nio.ch.IOUtil.write(IOUtil.java:65) ~[na:1.8.0_181]
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:471) ~[na:1.8.0_181]
	at org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:134) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.NioBlockingSelector.write(NioBlockingSelector.java:101) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.NioSelectorPool.write(NioSelectorPool.java:157) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1279) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:670) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.SocketWrapperBase.flushBlocking(SocketWrapperBase.java:607) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.SocketWrapperBase.flush(SocketWrapperBase.java:597) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer.flush(Http11OutputBuffer.java:646) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.http11.filters.ChunkedOutputFilter.flush(ChunkedOutputFilter.java:169) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.http11.Http11OutputBuffer.flush(Http11OutputBuffer.java:252) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.http11.Http11Processor.flush(Http11Processor.java:1561) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:371) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.Response.action(Response.java:173) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:317) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	... 44 common frames omitted

2019-06-13 19:48:36.739  INFO 9312 --- [SimpleAsyncTaskExecutor-1] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-06-13 19:48:36.740 ERROR 9312 --- [http-nio-8005-exec-2] o.a.c.c.C.[Tomcat].[localhost]           : Exception Processing ErrorPage[errorCode=0, location=/error]

org.apache.catalina.connector.ClientAbortException: java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:321) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.connector.OutputBuffer.flush(OutputBuffer.java:284) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.connector.CoyoteOutputStream.flush(CoyoteOutputStream.java:118) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at com.fasterxml.jackson.core.json.UTF8JsonGenerator.flush(UTF8JsonGenerator.java:1100) ~[jackson-core-2.9.6.jar:2.9.6]
	at com.fasterxml.jackson.databind.ObjectWriter.writeValue(ObjectWriter.java:915) ~[jackson-databind-2.9.6.jar:2.9.6]
	at org.springframework.http.converter.json.AbstractJackson2HttpMessageConverter.writeInternal(AbstractJackson2HttpMessageConverter.java:288) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.http.converter.AbstractGenericHttpMessageConverter.write(AbstractGenericHttpMessageConverter.java:102) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:272) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:224) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:82) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:119) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:728) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:591) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:527) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:389) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:254) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:349) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:800) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:800) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1471) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) [na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) [na:1.8.0_181]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at java.lang.Thread.run(Thread.java:748) [na:1.8.0_181]
Caused by: java.io.IOException: 你的主机中的软件中止了一个已建立的连接。
	at sun.nio.ch.SocketDispatcher.write0(Native Method) ~[na:1.8.0_181]
	at sun.nio.ch.SocketDispatcher.write(SocketDispatcher.java:51) ~[na:1.8.0_181]
	at sun.nio.ch.IOUtil.writeFromNativeBuffer(IOUtil.java:93) ~[na:1.8.0_181]
	at sun.nio.ch.IOUtil.write(IOUtil.java:65) ~[na:1.8.0_181]
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:471) ~[na:1.8.0_181]
	at org.apache.tomcat.util.net.NioChannel.write(NioChannel.java:134) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.NioBlockingSelector.write(NioBlockingSelector.java:101) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.NioSelectorPool.write(NioSelectorPool.java:157) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.NioEndpoint$NioSocketWrapper.doWrite(NioEndpoint.java:1279) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.SocketWrapperBase.doWrite(SocketWrapperBase.java:670) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.SocketWrapperBase.flushBlocking(SocketWrapperBase.java:607) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.SocketWrapperBase.flush(SocketWrapperBase.java:597) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.http11.Http11OutputBuffer$SocketOutputBuffer.flush(Http11OutputBuffer.java:646) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.http11.filters.ChunkedOutputFilter.flush(ChunkedOutputFilter.java:169) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.http11.Http11OutputBuffer.flush(Http11OutputBuffer.java:252) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.http11.Http11Processor.flush(Http11Processor.java:1561) [tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.AbstractProcessor.action(AbstractProcessor.java:371) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.Response.action(Response.java:173) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.connector.OutputBuffer.doFlush(OutputBuffer.java:317) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	... 41 common frames omitted

2019-06-13 19:48:36.820  INFO 9312 --- [Thread-51] ConfigServletWebServerApplicationContext : Closing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@794b435f: startup date [Thu Jun 13 19:40:54 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@6436a7db
2019-06-13 19:48:36.823  INFO 9312 --- [Thread-51] o.s.c.n.e.s.EurekaServiceRegistry        : Unregistering application api-admin with eureka with status DOWN
2019-06-13 19:48:36.823  WARN 9312 --- [Thread-51] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1560426516823, current=DOWN, previous=UP]
2019-06-13 19:48:36.823  INFO 9312 --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_API-ADMIN/Lenovo-PC:api-admin:8005: registering service...
2019-06-13 19:48:36.831  INFO 9312 --- [Thread-51] o.s.c.support.DefaultLifecycleProcessor  : Stopping beans in phase 2147483647
2019-06-13 19:48:36.832  INFO 9312 --- [Thread-51] o.s.m.s.b.SimpleBrokerMessageHandler     : Stopping...
2019-06-13 19:48:36.832  INFO 9312 --- [Thread-51] o.s.m.s.b.SimpleBrokerMessageHandler     : BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-06-13 19:48:36.833  INFO 9312 --- [Thread-51] o.s.m.s.b.SimpleBrokerMessageHandler     : Stopped.
2019-06-13 19:48:36.833  INFO 9312 --- [Thread-51] o.s.c.support.DefaultLifecycleProcessor  : Stopping beans in phase 0
2019-06-13 19:48:36.836  INFO 9312 --- [Thread-51] o.s.j.e.a.AnnotationMBeanExporter        : Unregistering JMX-exposed beans on shutdown
2019-06-13 19:48:36.837  INFO 9312 --- [Thread-51] o.s.j.e.a.AnnotationMBeanExporter        : Unregistering JMX-exposed beans
2019-06-13 19:48:36.862  INFO 9312 --- [Thread-51] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'brokerChannelExecutor'
2019-06-13 19:48:36.863  INFO 9312 --- [Thread-51] o.s.s.c.ThreadPoolTaskScheduler          : Shutting down ExecutorService 'messageBrokerTaskScheduler'
2019-06-13 19:48:36.863  INFO 9312 --- [Thread-51] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'clientOutboundChannelExecutor'
2019-06-13 19:48:36.864  INFO 9312 --- [Thread-51] o.s.s.concurrent.ThreadPoolTaskExecutor  : Shutting down ExecutorService 'clientInboundChannelExecutor'
2019-06-13 19:48:36.868  INFO 9312 --- [Thread-51] s.c.a.AnnotationConfigApplicationContext : Closing FeignContext-api-base: startup date [Thu Jun 13 19:41:05 CST 2019]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@794b435f
2019-06-13 19:48:36.869  INFO 9312 --- [Thread-51] s.c.a.AnnotationConfigApplicationContext : Closing FeignContext-course: startup date [Thu Jun 13 19:41:04 CST 2019]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@794b435f
2019-06-13 19:48:36.991  INFO 9312 --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_API-ADMIN/Lenovo-PC:api-admin:8005 - registration status: 204
2019-06-13 19:48:37.216  WARN 9312 --- [SimpleAsyncTaskExecutor-1] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2019-06-13 19:48:37.217  INFO 9312 --- [SimpleAsyncTaskExecutor-1] c.n.c.sources.URLConfigurationSource     : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-06-13 19:48:37.627  INFO 9312 --- [SimpleAsyncTaskExecutor-1] c.netflix.config.DynamicPropertyFactory  : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@4dbc4cc5
2019-06-13 19:48:37.926  INFO 9312 --- [SimpleAsyncTaskExecutor-1] c.netflix.config.ChainedDynamicProperty  : Flipping property: api-base.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-06-13 19:48:37.958  INFO 9312 --- [SimpleAsyncTaskExecutor-1] c.n.u.concurrent.ShutdownEnabledTimer    : Shutdown hook installed for: NFLoadBalancer-PingTimer-api-base
2019-06-13 19:48:37.960  WARN 9312 --- [SimpleAsyncTaskExecutor-1] s.c.a.AnnotationConfigApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'ribbonLoadBalancingHttpClient' defined in org.springframework.cloud.netflix.ribbon.apache.HttpClientRibbonConfiguration: Unsatisfied dependency expressed through method 'ribbonLoadBalancingHttpClient' parameter 2; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'ribbonLoadBalancer' defined in org.springframework.cloud.netflix.ribbon.RibbonClientConfiguration: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.netflix.loadbalancer.ILoadBalancer]: Factory method 'ribbonLoadBalancer' threw exception; nested exception is java.lang.IllegalStateException: Shutdown in progress
2019-06-13 19:48:37.963  INFO 9312 --- [SimpleAsyncTaskExecutor-2] s.c.a.AnnotationConfigApplicationContext : Refreshing SpringClientFactory-api-base: startup date [Thu Jun 13 19:48:37 CST 2019]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@794b435f
2019-06-13 19:48:37.962 ERROR 9312 --- [SimpleAsyncTaskExecutor-1] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy197.save(com.bootdo.clouddocommon.dto.LogDO)

org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'ribbonLoadBalancingHttpClient' defined in org.springframework.cloud.netflix.ribbon.apache.HttpClientRibbonConfiguration: Unsatisfied dependency expressed through method 'ribbonLoadBalancingHttpClient' parameter 2; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'ribbonLoadBalancer' defined in org.springframework.cloud.netflix.ribbon.RibbonClientConfiguration: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.netflix.loadbalancer.ILoadBalancer]: Factory method 'ribbonLoadBalancer' threw exception; nested exception is java.lang.IllegalStateException: Shutdown in progress
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:732) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:474) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1247) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1096) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:535) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:759) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:869) ~[spring-context-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550) ~[spring-context-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.cloud.context.named.NamedContextFactory.createContext(NamedContextFactory.java:117) ~[spring-cloud-context-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at org.springframework.cloud.context.named.NamedContextFactory.getContext(NamedContextFactory.java:85) ~[spring-cloud-context-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at org.springframework.cloud.netflix.ribbon.SpringClientFactory.getContext(SpringClientFactory.java:118) ~[spring-cloud-netflix-ribbon-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at org.springframework.cloud.context.named.NamedContextFactory.getInstance(NamedContextFactory.java:126) ~[spring-cloud-context-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at org.springframework.cloud.netflix.ribbon.SpringClientFactory.getInstance(SpringClientFactory.java:108) ~[spring-cloud-netflix-ribbon-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at org.springframework.cloud.netflix.ribbon.SpringClientFactory.getClientConfig(SpringClientFactory.java:65) ~[spring-cloud-netflix-ribbon-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.getClientConfig(LoadBalancerFeignClient.java:78) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:62) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy197.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266) ~[na:1.8.0_181]
	at java.util.concurrent.FutureTask.run(FutureTask.java) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'ribbonLoadBalancer' defined in org.springframework.cloud.netflix.ribbon.RibbonClientConfiguration: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.netflix.loadbalancer.ILoadBalancer]: Factory method 'ribbonLoadBalancer' threw exception; nested exception is java.lang.IllegalStateException: Shutdown in progress
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:590) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1247) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1096) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:535) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1135) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1062) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:818) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:724) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	... 35 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.netflix.loadbalancer.ILoadBalancer]: Factory method 'ribbonLoadBalancer' threw exception; nested exception is java.lang.IllegalStateException: Shutdown in progress
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:582) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	... 48 common frames omitted
Caused by: java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.add(ApplicationShutdownHooks.java:66) ~[na:1.8.0_181]
	at java.lang.Runtime.addShutdownHook(Runtime.java:211) ~[na:1.8.0_181]
	at com.netflix.util.concurrent.ShutdownEnabledTimer.<init>(ShutdownEnabledTimer.java:60) ~[netflix-commons-util-0.3.0.jar:0.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.setupPingTask(BaseLoadBalancer.java:263) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.BaseLoadBalancer.setPing(BaseLoadBalancer.java:363) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.BaseLoadBalancer.initWithConfig(BaseLoadBalancer.java:186) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.BaseLoadBalancer.<init>(BaseLoadBalancer.java:163) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.<init>(DynamicServerListLoadBalancer.java:88) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.ZoneAwareLoadBalancer.<init>(ZoneAwareLoadBalancer.java:82) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.netflix.ribbon.RibbonClientConfiguration.ribbonLoadBalancer(RibbonClientConfiguration.java:137) ~[spring-cloud-netflix-ribbon-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at org.springframework.cloud.netflix.ribbon.RibbonClientConfiguration$$EnhancerBySpringCGLIB$$ca174085.CGLIB$ribbonLoadBalancer$5(<generated>) ~[spring-cloud-netflix-ribbon-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at org.springframework.cloud.netflix.ribbon.RibbonClientConfiguration$$EnhancerBySpringCGLIB$$ca174085$$FastClassBySpringCGLIB$$99c0481d.invoke(<generated>) ~[spring-cloud-netflix-ribbon-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228) ~[spring-core-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:361) ~[spring-context-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.cloud.netflix.ribbon.RibbonClientConfiguration$$EnhancerBySpringCGLIB$$ca174085.ribbonLoadBalancer(<generated>) ~[spring-cloud-netflix-ribbon-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	... 49 common frames omitted

2019-06-13 19:48:38.003  INFO 9312 --- [SimpleAsyncTaskExecutor-2] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-06-13 19:48:38.018  INFO 9312 --- [SimpleAsyncTaskExecutor-2] c.netflix.config.ChainedDynamicProperty  : Flipping property: api-base.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-06-13 19:48:38.019  INFO 9312 --- [SimpleAsyncTaskExecutor-2] c.n.u.concurrent.ShutdownEnabledTimer    : Shutdown hook installed for: NFLoadBalancer-PingTimer-api-base
2019-06-13 19:48:38.020  WARN 9312 --- [SimpleAsyncTaskExecutor-2] s.c.a.AnnotationConfigApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'ribbonLoadBalancingHttpClient' defined in org.springframework.cloud.netflix.ribbon.apache.HttpClientRibbonConfiguration: Unsatisfied dependency expressed through method 'ribbonLoadBalancingHttpClient' parameter 2; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'ribbonLoadBalancer' defined in org.springframework.cloud.netflix.ribbon.RibbonClientConfiguration: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.netflix.loadbalancer.ILoadBalancer]: Factory method 'ribbonLoadBalancer' threw exception; nested exception is java.lang.IllegalStateException: Shutdown in progress
2019-06-13 19:48:38.022 ERROR 9312 --- [SimpleAsyncTaskExecutor-2] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy197.save(com.bootdo.clouddocommon.dto.LogDO)

org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'ribbonLoadBalancingHttpClient' defined in org.springframework.cloud.netflix.ribbon.apache.HttpClientRibbonConfiguration: Unsatisfied dependency expressed through method 'ribbonLoadBalancingHttpClient' parameter 2; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'ribbonLoadBalancer' defined in org.springframework.cloud.netflix.ribbon.RibbonClientConfiguration: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.netflix.loadbalancer.ILoadBalancer]: Factory method 'ribbonLoadBalancer' threw exception; nested exception is java.lang.IllegalStateException: Shutdown in progress
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:732) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:474) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1247) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1096) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:535) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:759) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:869) ~[spring-context-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550) ~[spring-context-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.cloud.context.named.NamedContextFactory.createContext(NamedContextFactory.java:117) ~[spring-cloud-context-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at org.springframework.cloud.context.named.NamedContextFactory.getContext(NamedContextFactory.java:85) ~[spring-cloud-context-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at org.springframework.cloud.netflix.ribbon.SpringClientFactory.getContext(SpringClientFactory.java:118) ~[spring-cloud-netflix-ribbon-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at org.springframework.cloud.context.named.NamedContextFactory.getInstance(NamedContextFactory.java:126) ~[spring-cloud-context-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at org.springframework.cloud.netflix.ribbon.SpringClientFactory.getInstance(SpringClientFactory.java:108) ~[spring-cloud-netflix-ribbon-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at org.springframework.cloud.netflix.ribbon.SpringClientFactory.getClientConfig(SpringClientFactory.java:65) ~[spring-cloud-netflix-ribbon-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.getClientConfig(LoadBalancerFeignClient.java:78) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:62) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy197.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run$$$capture(FutureTask.java:266) ~[na:1.8.0_181]
	at java.util.concurrent.FutureTask.run(FutureTask.java) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'ribbonLoadBalancer' defined in org.springframework.cloud.netflix.ribbon.RibbonClientConfiguration: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.netflix.loadbalancer.ILoadBalancer]: Factory method 'ribbonLoadBalancer' threw exception; nested exception is java.lang.IllegalStateException: Shutdown in progress
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:590) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.instantiateUsingFactoryMethod(AbstractAutowireCapableBeanFactory.java:1247) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1096) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:535) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:495) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:317) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:222) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:315) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:199) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:251) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1135) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1062) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:818) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:724) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	... 35 common frames omitted
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [com.netflix.loadbalancer.ILoadBalancer]: Factory method 'ribbonLoadBalancer' threw exception; nested exception is java.lang.IllegalStateException: Shutdown in progress
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:185) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiateUsingFactoryMethod(ConstructorResolver.java:582) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	... 48 common frames omitted
Caused by: java.lang.IllegalStateException: Shutdown in progress
	at java.lang.ApplicationShutdownHooks.add(ApplicationShutdownHooks.java:66) ~[na:1.8.0_181]
	at java.lang.Runtime.addShutdownHook(Runtime.java:211) ~[na:1.8.0_181]
	at com.netflix.util.concurrent.ShutdownEnabledTimer.<init>(ShutdownEnabledTimer.java:60) ~[netflix-commons-util-0.3.0.jar:0.3.0]
	at com.netflix.loadbalancer.BaseLoadBalancer.setupPingTask(BaseLoadBalancer.java:263) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.BaseLoadBalancer.setPing(BaseLoadBalancer.java:363) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.BaseLoadBalancer.initWithConfig(BaseLoadBalancer.java:186) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.BaseLoadBalancer.<init>(BaseLoadBalancer.java:163) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.DynamicServerListLoadBalancer.<init>(DynamicServerListLoadBalancer.java:88) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.ZoneAwareLoadBalancer.<init>(ZoneAwareLoadBalancer.java:82) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.netflix.ribbon.RibbonClientConfiguration.ribbonLoadBalancer(RibbonClientConfiguration.java:137) ~[spring-cloud-netflix-ribbon-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at org.springframework.cloud.netflix.ribbon.RibbonClientConfiguration$$EnhancerBySpringCGLIB$$ca174085.CGLIB$ribbonLoadBalancer$5(<generated>) ~[spring-cloud-netflix-ribbon-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at org.springframework.cloud.netflix.ribbon.RibbonClientConfiguration$$EnhancerBySpringCGLIB$$ca174085$$FastClassBySpringCGLIB$$99c0481d.invoke(<generated>) ~[spring-cloud-netflix-ribbon-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at org.springframework.cglib.proxy.MethodProxy.invokeSuper(MethodProxy.java:228) ~[spring-core-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.context.annotation.ConfigurationClassEnhancer$BeanMethodInterceptor.intercept(ConfigurationClassEnhancer.java:361) ~[spring-context-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.cloud.netflix.ribbon.RibbonClientConfiguration$$EnhancerBySpringCGLIB$$ca174085.ribbonLoadBalancer(<generated>) ~[spring-cloud-netflix-ribbon-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:154) ~[spring-beans-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	... 49 common frames omitted

2019-06-13 19:48:38.534  INFO 9312 --- [Thread-51] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} closed
2019-06-13 19:48:38.536  INFO 9312 --- [Thread-51] com.netflix.discovery.DiscoveryClient    : Shutting down DiscoveryClient ...
2019-06-13 19:48:38.540  WARN 9312 --- [Thread-51] .s.c.a.CommonAnnotationBeanPostProcessor : Invocation of destroy method failed on bean with name 'scopedTarget.eurekaClient': org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'eurekaInstanceConfigBean': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
2019-06-13 19:49:01.250  INFO 11252 --- [main] c.b.c.ClouddoAdminApplication            : No active profile set, falling back to default profiles: default
2019-06-13 19:49:01.269  INFO 11252 --- [main] ConfigServletWebServerApplicationContext : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@19b93fa8: startup date [Thu Jun 13 19:49:01 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@22ff4249
2019-06-13 19:49:04.009  INFO 11252 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-13 19:49:04.708  INFO 11252 --- [main] o.s.cloud.context.scope.GenericScope     : BeanFactory id=d229a6ea-016d-322a-b2d4-3e4463f5e4cd
2019-06-13 19:49:04.742  INFO 11252 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-06-13 19:49:05.041  INFO 11252 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$3a340da1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 19:49:05.403  INFO 11252 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.bootdo.clouddoadmin.config.RedisConfig$$EnhancerBySpringCGLIB$$5ce156f2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 19:49:05.417  INFO 11252 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.bootdo.clouddoadmin.config.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 19:49:05.510  INFO 11252 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$564e109e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 19:49:06.472  INFO 11252 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8005 (http)
2019-06-13 19:49:06.522  INFO 11252 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2019-06-13 19:49:06.522  INFO 11252 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.32
2019-06-13 19:49:06.529  INFO 11252 --- [localhost-startStop-1] o.a.catalina.core.AprLifecycleListener   : The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_181\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;C:;C:\Program Files\Java\jdk1.8.0_181\bin;D:\myApps\apache-maven-3.6.0\bin;C:\Program Files\Java\jdk1.8.0_181\jre\bin;C:\Program Files\Java\jdk1.8.0_181\bin ;C:\Program Files\TortoiseGit\bin;C:\windows\system32;C:\windows;C:\windows\system32\wbem;D:\StudyTools\XAMPP\mysql\bin;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;D:\系统工具\Git\cmd;D:\StudyTools\NodeJs\;D:\StudyTools\Elang\erl10.0.1\bin;D:\StudyTools\RabbitMQ Server\rabbitmq_server-3.7.7\sbin;;D:\StudyTools\DockerToolbox;D:\StudyTools\NodeJs\node_global;D:\StudyTools\WebStorm 2019.1.2\bin;;.]
2019-06-13 19:49:06.800  INFO 11252 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2019-06-13 19:49:06.800  INFO 11252 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 5531 ms
2019-06-13 19:49:06.825  INFO 11252 --- [localhost-startStop-1] c.b.c.config.DruidConfiguration          : init Druid Servlet Configuration 
2019-06-13 19:49:07.236  WARN 11252 --- [localhost-startStop-1] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2019-06-13 19:49:07.236  INFO 11252 --- [localhost-startStop-1] c.n.c.sources.URLConfigurationSource     : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-06-13 19:49:07.255  INFO 11252 --- [localhost-startStop-1] c.netflix.config.DynamicPropertyFactory  : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@25a015bb
2019-06-13 19:49:10.311  INFO 11252 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2019-06-13 19:49:10.312  INFO 11252 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'webMvcMetricsFilter' to: [/*]
2019-06-13 19:49:10.312  INFO 11252 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-06-13 19:49:10.313  INFO 11252 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-06-13 19:49:10.313  INFO 11252 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2019-06-13 19:49:10.314  INFO 11252 --- [localhost-startStop-1] .s.DelegatingFilterProxyRegistrationBean : Mapping filter: 'springSecurityFilterChain' to: [/*]
2019-06-13 19:49:10.315  INFO 11252 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpTraceFilter' to: [/*]
2019-06-13 19:49:10.315  INFO 11252 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'webStatFilter' to urls: [/*]
2019-06-13 19:49:10.315  INFO 11252 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Servlet statViewServlet mapped to [/druid/*]
2019-06-13 19:49:10.316  INFO 11252 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Servlet dispatcherServlet mapped to [/]
2019-06-13 19:49:12.200  INFO 11252 --- [main] s.c.a.AnnotationConfigApplicationContext : Refreshing FeignContext-course: startup date [Thu Jun 13 19:49:12 CST 2019]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@19b93fa8
2019-06-13 19:49:12.224  INFO 11252 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-06-13 19:49:12.456  INFO 11252 --- [main] s.c.a.AnnotationConfigApplicationContext : Refreshing FeignContext-api-base: startup date [Thu Jun 13 19:49:12 CST 2019]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@19b93fa8
2019-06-13 19:49:12.474  INFO 11252 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-06-13 19:49:13.175  INFO 11252 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/authorize],methods=[POST],params=[user_oauth_approval]}" onto public org.springframework.web.servlet.View org.springframework.security.oauth2.provider.endpoint.AuthorizationEndpoint.approveOrDeny(java.util.Map<java.lang.String, java.lang.String>,java.util.Map<java.lang.String, ?>,org.springframework.web.bind.support.SessionStatus,java.security.Principal)
2019-06-13 19:49:13.177  INFO 11252 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/authorize]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.security.oauth2.provider.endpoint.AuthorizationEndpoint.authorize(java.util.Map<java.lang.String, java.lang.Object>,java.util.Map<java.lang.String, java.lang.String>,org.springframework.web.bind.support.SessionStatus,java.security.Principal)
2019-06-13 19:49:13.178  INFO 11252 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/token],methods=[GET]}" onto public org.springframework.http.ResponseEntity<org.springframework.security.oauth2.common.OAuth2AccessToken> org.springframework.security.oauth2.provider.endpoint.TokenEndpoint.getAccessToken(java.security.Principal,java.util.Map<java.lang.String, java.lang.String>) throws org.springframework.web.HttpRequestMethodNotSupportedException
2019-06-13 19:49:13.178  INFO 11252 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/token],methods=[POST]}" onto public org.springframework.http.ResponseEntity<org.springframework.security.oauth2.common.OAuth2AccessToken> org.springframework.security.oauth2.provider.endpoint.TokenEndpoint.postAccessToken(java.security.Principal,java.util.Map<java.lang.String, java.lang.String>) throws org.springframework.web.HttpRequestMethodNotSupportedException
2019-06-13 19:49:13.179  INFO 11252 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/check_token]}" onto public java.util.Map<java.lang.String, ?> org.springframework.security.oauth2.provider.endpoint.CheckTokenEndpoint.checkToken(java.lang.String)
2019-06-13 19:49:13.180  INFO 11252 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/confirm_access]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.security.oauth2.provider.endpoint.WhitelabelApprovalEndpoint.getAccessConfirmation(java.util.Map<java.lang.String, java.lang.Object>,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-06-13 19:49:13.180  INFO 11252 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/error]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.security.oauth2.provider.endpoint.WhitelabelErrorEndpoint.handleError(javax.servlet.http.HttpServletRequest)
2019-06-13 19:49:13.269  INFO 11252 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-06-13 19:49:13.270  INFO 11252 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/remove],methods=[POST]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.DeptController.remove(java.lang.Long)
2019-06-13 19:49:13.270  INFO 11252 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/batchRemove],methods=[POST]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.DeptController.remove(java.lang.Long[])
2019-06-13 19:49:13.271  INFO 11252 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/update]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.DeptController.update(com.bootdo.clouddoadmin.domain.DeptDO)
2019-06-13 19:49:13.271  INFO 11252 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/list],methods=[GET]}" onto public java.util.List<com.bootdo.clouddoadmin.domain.DeptDO> com.bootdo.clouddoadmin.controller.DeptController.list()
2019-06-13 19:49:13.272  INFO 11252 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/save],methods=[POST]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.DeptController.save(com.bootdo.clouddoadmin.domain.DeptDO)
2019-06-13 19:49:13.272  INFO 11252 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/tree],methods=[GET]}" onto public com.bootdo.clouddoadmin.domain.Tree<com.bootdo.clouddoadmin.domain.DeptDO> com.bootdo.clouddoadmin.controller.DeptController.tree()
2019-06-13 19:49:13.273  INFO 11252 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.DeptController.dept()
2019-06-13 19:49:13.273  INFO 11252 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.DeptController.treeView()
2019-06-13 19:49:13.275  INFO 11252 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/logout]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.LoginController.logout(java.lang.String)
2019-06-13 19:49:13.275  INFO 11252 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/router],methods=[GET]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.LoginController.router()
2019-06-13 19:49:13.282  INFO 11252 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu],methods=[DELETE]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.remove(java.lang.Long)
2019-06-13 19:49:13.283  INFO 11252 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/{id}],methods=[GET]}" onto com.bootdo.clouddoadmin.domain.MenuDO com.bootdo.clouddoadmin.controller.MenuController.get(java.lang.Long)
2019-06-13 19:49:13.283  INFO 11252 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu],methods=[PUT]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.update(com.bootdo.clouddoadmin.domain.MenuDO)
2019-06-13 19:49:13.283  INFO 11252 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu],methods=[GET]}" onto java.util.List<com.bootdo.clouddoadmin.domain.Tree<com.bootdo.clouddoadmin.domain.MenuDO>> com.bootdo.clouddoadmin.controller.MenuController.list()
2019-06-13 19:49:13.284  INFO 11252 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/list],methods=[GET]}" onto java.util.List<com.bootdo.clouddoadmin.domain.MenuDO> com.bootdo.clouddoadmin.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-13 19:49:13.284  INFO 11252 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu],methods=[POST]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.save(com.bootdo.clouddoadmin.domain.MenuDO)
2019-06-13 19:49:13.285  INFO 11252 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/tree],methods=[GET]}" onto com.bootdo.clouddoadmin.domain.Tree<com.bootdo.clouddoadmin.domain.MenuDO> com.bootdo.clouddoadmin.controller.MenuController.tree()
2019-06-13 19:49:13.285  INFO 11252 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/clearCache],methods=[GET]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.clearCache()
2019-06-13 19:49:13.286  INFO 11252 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/roleId],methods=[GET]}" onto java.util.List<java.lang.Long> com.bootdo.clouddoadmin.controller.MenuController.menuIdsByRoleId(java.lang.Long)
2019-06-13 19:49:13.287  INFO 11252 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/userMenus],methods=[GET]}" onto java.util.List<com.bootdo.clouddocommon.dto.MenuDTO> com.bootdo.clouddoadmin.controller.MenuController.userMenus()
2019-06-13 19:49:13.287  INFO 11252 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/currentUserMenus],methods=[GET]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.currentUserMenus()
2019-06-13 19:49:13.292  INFO 11252 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role],methods=[PUT]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.RoleController.update(com.bootdo.clouddoadmin.domain.RoleDO)
2019-06-13 19:49:13.292  INFO 11252 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role],methods=[GET]}" onto com.bootdo.clouddocommon.utils.PageUtils com.bootdo.clouddoadmin.controller.RoleController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-13 19:49:13.293  INFO 11252 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role],methods=[POST]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.RoleController.save(com.bootdo.clouddoadmin.domain.RoleDO)
2019-06-13 19:49:13.293  INFO 11252 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/userId/{userId}],methods=[GET]}" onto java.util.List<java.lang.Long> com.bootdo.clouddoadmin.controller.RoleController.roleIdByUserId(java.lang.Long)
2019-06-13 19:49:13.294  INFO 11252 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.TestController.test()
2019-06-13 19:49:13.294  INFO 11252 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test1],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.TestController.test1()
2019-06-13 19:49:13.296  INFO 11252 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user],methods=[DELETE]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.remove(java.lang.Long)
2019-06-13 19:49:13.297  INFO 11252 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.get(java.lang.Long)
2019-06-13 19:49:13.297  INFO 11252 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user],methods=[PUT]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.update(com.bootdo.clouddoadmin.dto.UserDTO)
2019-06-13 19:49:13.297  INFO 11252 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user],methods=[POST]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.save(com.bootdo.clouddoadmin.dto.UserDTO)
2019-06-13 19:49:13.297  INFO 11252 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/batchRemove],methods=[POST]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.batchRemove(java.lang.Long[])
2019-06-13 19:49:13.298  INFO 11252 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/tokenUser],methods=[GET]}" onto public java.security.Principal com.bootdo.clouddoadmin.controller.UserController.user(java.security.Principal)
2019-06-13 19:49:13.298  INFO 11252 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/exits],methods=[POST]}" onto boolean com.bootdo.clouddoadmin.controller.UserController.exits(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-13 19:49:13.298  INFO 11252 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/currentUser],methods=[GET]}" onto public com.bootdo.clouddocommon.dto.LoginUserDTO com.bootdo.clouddoadmin.controller.UserController.currentUser()
2019-06-13 19:49:13.299  INFO 11252 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/roleId/{roleId}],methods=[GET]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.getTeacherList(java.lang.Long,java.util.Map<java.lang.String, java.lang.Object>)
2019-06-13 19:49:13.302  INFO 11252 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-06-13 19:49:13.304  INFO 11252 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-06-13 19:49:13.305  INFO 11252 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-06-13 19:49:13.309  INFO 11252 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-06-13 19:49:13.310  INFO 11252 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-13 19:49:13.603  INFO 11252 --- [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 2 endpoint(s) beneath base path '/actuator'
2019-06-13 19:49:13.622  INFO 11252 --- [main] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-06-13 19:49:13.623  INFO 11252 --- [main] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-06-13 19:49:13.624  INFO 11252 --- [main] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-13 19:49:14.669  INFO 11252 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@79c4f23b, org.springframework.security.web.context.SecurityContextPersistenceFilter@11c3ce6a, org.springframework.security.web.header.HeaderWriterFilter@60a4e619, org.springframework.security.web.authentication.logout.LogoutFilter@7c31e410, org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter@30fa8a6b, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@2b9d4b0, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@22899683, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@428eb3d5, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@160c7c42, org.springframework.security.web.session.SessionManagementFilter@11f3400c, org.springframework.security.web.access.ExceptionTranslationFilter@429f0ca8, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@61eab26b]
2019-06-13 19:49:14.695  INFO 11252 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: org.springframework.security.oauth2.config.annotation.web.configuration.ResourceServerConfiguration$NotOAuthRequestMatcher@11015ca0, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6ebbc06, org.springframework.security.web.context.SecurityContextPersistenceFilter@54234569, org.springframework.security.web.header.HeaderWriterFilter@216328b2, org.springframework.security.web.authentication.logout.LogoutFilter@36a58466, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@431babe6, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@4c2bea52, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@21ea1d9d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@19f497aa, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@50672905, org.springframework.security.web.session.SessionManagementFilter@5b0e9e0c, org.springframework.security.web.access.ExceptionTranslationFilter@11cc9e1e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@64665781]
2019-06-13 19:49:14.739  INFO 11252 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@516c20de, org.springframework.security.web.context.SecurityContextPersistenceFilter@10d905c1, org.springframework.security.web.header.HeaderWriterFilter@4345fd45, org.springframework.security.web.csrf.CsrfFilter@53ba25ff, org.springframework.security.web.authentication.logout.LogoutFilter@3a709cc7, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@25e6c22a, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@36665c11, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@16fc5622, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@e4b54d3, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@62883f8a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6906be0f, org.springframework.security.web.session.SessionManagementFilter@4152bd0f, org.springframework.security.web.access.ExceptionTranslationFilter@2976ef56, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@e706aa]
2019-06-13 19:49:14.816  INFO 11252 --- [main] pertySourcedRequestMappingHandlerMapping : Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2019-06-13 19:49:15.131  INFO 11252 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService  'clientInboundChannelExecutor'
2019-06-13 19:49:15.153  INFO 11252 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-06-13 19:49:15.179  INFO 11252 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-06-13 19:49:15.245  INFO 11252 --- [main] o.s.w.s.s.s.WebSocketHandlerMapping      : Mapped URL path [/endpoint/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-06-13 19:49:15.278  INFO 11252 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService  'brokerChannelExecutor'
2019-06-13 19:49:15.536  WARN 11252 --- [main] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2019-06-13 19:49:15.537  INFO 11252 --- [main] c.n.c.sources.URLConfigurationSource     : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-06-13 19:49:15.669  INFO 11252 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-13 19:49:15.868  INFO 11252 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@19b93fa8: startup date [Thu Jun 13 19:49:01 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@22ff4249
2019-06-13 19:49:15.965  INFO 11252 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-13 19:49:15.965  INFO 11252 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-13 19:49:15.995  INFO 11252 --- [main] .m.m.a.ExceptionHandlerExceptionResolver : Detected @ExceptionHandler methods in exceptionAdviceHandler
2019-06-13 19:49:17.276  INFO 11252 --- [main] o.s.ui.freemarker.SpringTemplateLoader   : SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@19b93fa8: startup date [Thu Jun 13 19:49:01 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@22ff4249] and template loader path [classpath:/templates/]
2019-06-13 19:49:17.278  INFO 11252 --- [main] o.s.w.s.v.f.FreeMarkerConfigurer         : ClassTemplateLoader for Spring macros added to FreeMarker configuration
2019-06-13 19:49:17.823  INFO 11252 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2019-06-13 19:49:17.825  INFO 11252 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2019-06-13 19:49:17.838  INFO 11252 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'environmentManager' has been autodetected for JMX exposure
2019-06-13 19:49:17.840  INFO 11252 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'refreshScope' has been autodetected for JMX exposure
2019-06-13 19:49:17.841  INFO 11252 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2019-06-13 19:49:17.845  INFO 11252 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2019-06-13 19:49:17.857  INFO 11252 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2019-06-13 19:49:17.877  INFO 11252 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=19b93fa8,type=ConfigurationPropertiesRebinder]
2019-06-13 19:49:17.895  INFO 11252 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-06-13 19:49:17.908  INFO 11252 --- [main] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase 0
2019-06-13 19:49:17.929  INFO 11252 --- [main] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2019-06-13 19:49:17.992  INFO 11252 --- [main] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2019-06-13 19:49:18.785  INFO 11252 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using JSON encoding codec LegacyJacksonJson
2019-06-13 19:49:18.785  INFO 11252 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using JSON decoding codec LegacyJacksonJson
2019-06-13 19:49:19.027  INFO 11252 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using XML encoding codec XStreamXml
2019-06-13 19:49:19.027  INFO 11252 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using XML decoding codec XStreamXml
2019-06-13 19:49:19.224  INFO 11252 --- [main] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 19:49:19.500  INFO 11252 --- [main] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2019-06-13 19:49:19.500  INFO 11252 --- [main] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2019-06-13 19:49:19.500  INFO 11252 --- [main] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2019-06-13 19:49:19.500  INFO 11252 --- [main] com.netflix.discovery.DiscoveryClient    : Application is null : false
2019-06-13 19:49:19.500  INFO 11252 --- [main] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2019-06-13 19:49:19.501  INFO 11252 --- [main] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2019-06-13 19:49:19.501  INFO 11252 --- [main] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2019-06-13 19:49:19.680  INFO 11252 --- [main] com.netflix.discovery.DiscoveryClient    : The response status is 200
2019-06-13 19:49:19.691  INFO 11252 --- [main] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2019-06-13 19:49:19.694  INFO 11252 --- [main] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2019-06-13 19:49:19.698  INFO 11252 --- [main] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1560426559696 with initial instances count: 2
2019-06-13 19:49:19.718  INFO 11252 --- [main] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application api-admin with eureka with status UP
2019-06-13 19:49:19.719  INFO 11252 --- [main] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1560426559719, current=UP, previous=STARTING]
2019-06-13 19:49:19.721  INFO 11252 --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_API-ADMIN/Lenovo-PC:api-admin:8005: registering service...
2019-06-13 19:49:19.727  INFO 11252 --- [main] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase 2147483647
2019-06-13 19:49:19.727  INFO 11252 --- [main] d.s.w.p.DocumentationPluginsBootstrapper : Context refreshed
2019-06-13 19:49:19.764  INFO 11252 --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_API-ADMIN/Lenovo-PC:api-admin:8005 - registration status: 204
2019-06-13 19:49:19.818  INFO 11252 --- [main] d.s.w.p.DocumentationPluginsBootstrapper : Found 1 custom documentation plugin(s)
2019-06-13 19:49:19.924  INFO 11252 --- [main] s.d.s.w.s.ApiListingReferenceScanner     : Scanning for api listing references
2019-06-13 19:49:20.111  INFO 11252 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: removeUsingPOST_1
2019-06-13 19:49:20.202  INFO 11252 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: listUsingGET_1
2019-06-13 19:49:20.208  INFO 11252 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: listUsingGET_2
2019-06-13 19:49:20.215  INFO 11252 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: saveUsingPOST_1
2019-06-13 19:49:20.217  INFO 11252 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: treeUsingGET_1
2019-06-13 19:49:20.218  INFO 11252 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: updateUsingPUT_1
2019-06-13 19:49:20.225  INFO 11252 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: listUsingGET_3
2019-06-13 19:49:20.238  INFO 11252 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: saveUsingPOST_2
2019-06-13 19:49:20.239  INFO 11252 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: updateUsingPUT_2
2019-06-13 19:49:20.253  INFO 11252 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: getUsingGET_1
2019-06-13 19:49:20.256  INFO 11252 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: removeUsingDELETE_1
2019-06-13 19:49:20.265  INFO 11252 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: saveUsingPOST_3
2019-06-13 19:49:20.267  INFO 11252 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: updateUsingPUT_3
2019-06-13 19:49:20.288  INFO 11252 --- [main] o.s.m.s.b.SimpleBrokerMessageHandler     : Starting...
2019-06-13 19:49:20.289  INFO 11252 --- [main] o.s.m.s.b.SimpleBrokerMessageHandler     : BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-06-13 19:49:20.290  INFO 11252 --- [main] o.s.m.s.b.SimpleBrokerMessageHandler     : Started.
2019-06-13 19:49:20.375  INFO 11252 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8005 (http) with context path ''
2019-06-13 19:49:20.376  INFO 11252 --- [main] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 8005
2019-06-13 19:49:20.379  INFO 11252 --- [main] c.b.c.ClouddoAdminApplication            : Started ClouddoAdminApplication in 22.379 seconds (JVM running for 26.873)
2019-06-13 19:49:21.230  INFO 11252 --- [RMI TCP Connection(2)-10.255.44.113] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-06-13 19:49:21.230  INFO 11252 --- [RMI TCP Connection(2)-10.255.44.113] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2019-06-13 19:49:21.294  INFO 11252 --- [RMI TCP Connection(2)-10.255.44.113] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 64 ms
2019-06-13 19:49:21.612  INFO 11252 --- [RMI TCP Connection(1)-10.255.44.113] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2019-06-13 19:49:22.276  INFO 11252 --- [RMI TCP Connection(1)-10.255.44.113] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2019-06-13 19:49:22.281  INFO 11252 --- [RMI TCP Connection(1)-10.255.44.113] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2019-06-13 19:50:15.274  INFO 11252 --- [MessageBroker-1] o.s.w.s.c.WebSocketMessageBrokerStats    : WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-06-13 19:50:29.604  INFO 11252 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/router
2019-06-13 19:50:29.604  INFO 11252 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 19:50:29.605  INFO 11252 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/currentUser
2019-06-13 19:50:29.606  INFO 11252 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 19:50:29.609  INFO 11252 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.currentUser
2019-06-13 19:50:29.609  INFO 11252 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.LoginController.router
2019-06-13 19:50:29.610  INFO 11252 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 19:50:29.610  INFO 11252 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 19:50:29.637  INFO 11252 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 31
2019-06-13 19:50:29.637  INFO 11252 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 33
2019-06-13 19:50:29.646  INFO 11252 --- [http-nio-8005-exec-2] .s.a.AnnotationAsyncExecutionInterceptor : More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-06-13 19:50:29.663  INFO 11252 --- [SimpleAsyncTaskExecutor-1] feign.RequestInterceptor                 : ------feign设置token120
2019-06-13 19:50:29.663  INFO 11252 --- [SimpleAsyncTaskExecutor-2] feign.RequestInterceptor                 : ------feign设置token121
2019-06-13 19:50:29.669  INFO 11252 --- [SimpleAsyncTaskExecutor-2] s.c.a.AnnotationConfigApplicationContext : Refreshing SpringClientFactory-api-base: startup date [Thu Jun 13 19:50:29 CST 2019]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@19b93fa8
2019-06-13 19:50:29.784  INFO 11252 --- [SimpleAsyncTaskExecutor-2] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-06-13 19:50:30.139  INFO 11252 --- [SimpleAsyncTaskExecutor-2] c.netflix.config.ChainedDynamicProperty  : Flipping property: api-base.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-06-13 19:50:30.169  INFO 11252 --- [SimpleAsyncTaskExecutor-2] c.n.u.concurrent.ShutdownEnabledTimer    : Shutdown hook installed for: NFLoadBalancer-PingTimer-api-base
2019-06-13 19:50:30.174  INFO 11252 --- [SimpleAsyncTaskExecutor-2] c.netflix.loadbalancer.BaseLoadBalancer  : Client: api-base instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=api-base,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2019-06-13 19:50:30.197  INFO 11252 --- [SimpleAsyncTaskExecutor-2] c.n.l.DynamicServerListLoadBalancer      : Using serverListUpdater PollingServerListUpdater
2019-06-13 19:50:30.201  INFO 11252 --- [SimpleAsyncTaskExecutor-2] c.n.l.DynamicServerListLoadBalancer      : DynamicServerListLoadBalancer for client api-base initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=api-base,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@2911856f
2019-06-13 19:50:30.332 ERROR 11252 --- [SimpleAsyncTaskExecutor-2] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy197.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy197.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 19:50:30.332 ERROR 11252 --- [SimpleAsyncTaskExecutor-1] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy197.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy197.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 19:51:19.531  INFO 11252 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/router
2019-06-13 19:51:19.531  INFO 11252 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 19:51:19.532  INFO 11252 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.LoginController.router
2019-06-13 19:51:19.532  INFO 11252 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 19:51:19.536  INFO 11252 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 5
2019-06-13 19:51:19.546  INFO 11252 --- [SimpleAsyncTaskExecutor-3] feign.RequestInterceptor                 : ------feign设置token128
2019-06-13 19:51:19.551 ERROR 11252 --- [SimpleAsyncTaskExecutor-3] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy197.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy197.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 19:51:19.660  INFO 11252 --- [http-nio-8005-exec-5] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/currentUser
2019-06-13 19:51:19.660  INFO 11252 --- [http-nio-8005-exec-5] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 19:51:19.660  INFO 11252 --- [http-nio-8005-exec-5] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.currentUser
2019-06-13 19:51:19.660  INFO 11252 --- [http-nio-8005-exec-5] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 19:51:19.663  INFO 11252 --- [http-nio-8005-exec-5] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 3
2019-06-13 19:51:19.671  INFO 11252 --- [SimpleAsyncTaskExecutor-4] feign.RequestInterceptor                 : ------feign设置token129
2019-06-13 19:51:19.673 ERROR 11252 --- [SimpleAsyncTaskExecutor-4] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy197.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy197.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 19:51:37.618  INFO 11252 --- [http-nio-8005-exec-7] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/roleId/2
2019-06-13 19:51:37.619  INFO 11252 --- [http-nio-8005-exec-7] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 19:51:37.619  INFO 11252 --- [http-nio-8005-exec-7] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.getTeacherList
2019-06-13 19:51:37.619  INFO 11252 --- [http-nio-8005-exec-7] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : [2, {page=1, limit=10, name=}]
2019-06-13 19:51:38.007 ERROR 11252 --- [http-nio-8005-exec-7] druid.sql.Statement                      : {conn-10001, pstmt-20008} execute error. select
		u.id, u.username,u.name,u.email,u.phone,u.sex
		from pap_user u left join pap_user_role ur on ur.user_id=u.id
		where ur.role_id=? and contact(u.username,u.name) like '%%'

com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: FUNCTION clouddo.contact does not exist
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[na:1.8.0_181]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[na:1.8.0_181]
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425) ~[mysql-connector-java-5.1.46.jar:5.1.46]
	at com.mysql.jdbc.Util.getInstance(Util.java:408) ~[mysql-connector-java-5.1.46.jar:5.1.46]
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:944) ~[mysql-connector-java-5.1.46.jar:5.1.46]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3976) ~[mysql-connector-java-5.1.46.jar:5.1.46]
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3912) ~[mysql-connector-java-5.1.46.jar:5.1.46]
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2530) ~[mysql-connector-java-5.1.46.jar:5.1.46]
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2683) ~[mysql-connector-java-5.1.46.jar:5.1.46]
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2486) ~[mysql-connector-java-5.1.46.jar:5.1.46]
	at com.mysql.jdbc.PreparedStatement.executeInternal(PreparedStatement.java:1858) ~[mysql-connector-java-5.1.46.jar:5.1.46]
	at com.mysql.jdbc.PreparedStatement.execute(PreparedStatement.java:1197) ~[mysql-connector-java-5.1.46.jar:5.1.46]
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3409) [druid-1.1.12.jar:1.1.12]
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440) [druid-1.1.12.jar:1.1.12]
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3407) [druid-1.1.12.jar:1.1.12]
	at com.alibaba.druid.wall.WallFilter.preparedStatement_execute(WallFilter.java:620) [druid-1.1.12.jar:1.1.12]
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3407) [druid-1.1.12.jar:1.1.12]
	at com.alibaba.druid.filter.FilterEventAdapter.preparedStatement_execute(FilterEventAdapter.java:440) [druid-1.1.12.jar:1.1.12]
	at com.alibaba.druid.filter.FilterChainImpl.preparedStatement_execute(FilterChainImpl.java:3407) [druid-1.1.12.jar:1.1.12]
	at com.alibaba.druid.proxy.jdbc.PreparedStatementProxyImpl.execute(PreparedStatementProxyImpl.java:167) [druid-1.1.12.jar:1.1.12]
	at com.alibaba.druid.pool.DruidPooledPreparedStatement.execute(DruidPooledPreparedStatement.java:498) [druid-1.1.12.jar:1.1.12]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:59) [mybatis-3.4.4.jar:3.4.4]
	at com.sun.proxy.$Proxy263.execute(Unknown Source) [na:na]
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63) [mybatis-3.4.4.jar:3.4.4]
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79) [mybatis-3.4.4.jar:3.4.4]
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63) [mybatis-3.4.4.jar:3.4.4]
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324) [mybatis-3.4.4.jar:3.4.4]
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156) [mybatis-3.4.4.jar:3.4.4]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109) [mybatis-3.4.4.jar:3.4.4]
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83) [mybatis-3.4.4.jar:3.4.4]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148) [mybatis-3.4.4.jar:3.4.4]
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141) [mybatis-3.4.4.jar:3.4.4]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434) [mybatis-spring-1.3.0.jar:1.3.0]
	at com.sun.proxy.$Proxy156.selectList(Unknown Source) [na:na]
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231) [mybatis-spring-1.3.0.jar:1.3.0]
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137) [mybatis-3.4.4.jar:3.4.4]
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75) [mybatis-3.4.4.jar:3.4.4]
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59) [mybatis-3.4.4.jar:3.4.4]
	at com.sun.proxy.$Proxy157.getUserList(Unknown Source) [na:na]
	at com.bootdo.clouddoadmin.service.impl.UserServiceImpl.getUserList(UserServiceImpl.java:61) [classes/:na]
	at com.bootdo.clouddoadmin.service.impl.UserServiceImpl$$FastClassBySpringCGLIB$$205e8230.invoke(<generated>) [classes/:na]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204) [spring-core-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746) [spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) [spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:294) ~[spring-tx-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98) ~[spring-tx-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185) [spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at com.bootdo.clouddoadmin.service.impl.UserServiceImpl$$EnhancerBySpringCGLIB$$8a9ccbbb.getUserList(<generated>) ~[classes/:na]
	at com.bootdo.clouddoadmin.controller.UserController.getTeacherList(UserController.java:87) ~[classes/:na]
	at com.bootdo.clouddoadmin.controller.UserController$$FastClassBySpringCGLIB$$ea49dd7e.invoke(<generated>) ~[classes/:na]
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:204) [spring-core-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:746) [spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) [spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185) [spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at com.bootdo.clouddocommon.aspect.WebLogAspect.doAround(WebLogAspect.java:45) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185) [spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185) [spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at com.bootdo.clouddocommon.aspect.LogAspect.around(LogAspect.java:41) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:174) [spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:92) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:185) [spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:688) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at com.bootdo.clouddoadmin.controller.UserController$$EnhancerBySpringCGLIB$$2235d1e.getTeacherList(<generated>) ~[classes/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:209) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:136) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:102) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:877) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:783) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:991) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:925) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:974) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:866) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:635) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:851) ~[spring-webmvc-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:742) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52) ~[tomcat-embed-websocket-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123) ~[druid-1.1.12.jar:1.1.12]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:90) ~[spring-boot-actuator-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320) ~[spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127) ~[spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91) ~[spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119) ~[spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137) ~[spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111) ~[spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170) ~[spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63) ~[spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158) ~[spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter.doFilter(OAuth2AuthenticationProcessingFilter.java:176) ~[spring-security-oauth2-2.2.1.RELEASE.jar:na]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116) ~[spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:66) ~[spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105) ~[spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56) ~[spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334) ~[spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215) ~[spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178) ~[spring-security-web-5.0.7.RELEASE.jar:5.0.7.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:357) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:270) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:99) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.springframework.web.filter.HttpPutFormContentFilter.doFilterInternal(HttpPutFormContentFilter.java:109) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:93) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:155) ~[spring-boot-actuator-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:123) ~[spring-boot-actuator-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:108) ~[spring-boot-actuator-2.0.4.RELEASE.jar:2.0.4.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:200) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:107) ~[spring-web-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:198) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:493) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:81) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:800) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:800) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1471) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[na:1.8.0_181]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[na:1.8.0_181]
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) ~[tomcat-embed-core-8.5.32.jar:8.5.32]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]

2019-06-13 19:51:38.051  INFO 11252 --- [http-nio-8005-exec-7] o.s.b.f.xml.XmlBeanDefinitionReader      : Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml]
2019-06-13 19:54:19.503  INFO 11252 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 19:54:35.052  INFO 3232 --- [main] c.b.c.ClouddoAdminApplication            : No active profile set, falling back to default profiles: default
2019-06-13 19:54:35.070  INFO 3232 --- [main] ConfigServletWebServerApplicationContext : Refreshing org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1fde5d22: startup date [Thu Jun 13 19:54:35 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7eac9008
2019-06-13 19:54:36.690  INFO 3232 --- [main] .s.d.r.c.RepositoryConfigurationDelegate : Multiple Spring Data modules found, entering strict repository configuration mode!
2019-06-13 19:54:37.247  INFO 3232 --- [main] o.s.cloud.context.scope.GenericScope     : BeanFactory id=d229a6ea-016d-322a-b2d4-3e4463f5e4cd
2019-06-13 19:54:37.282  INFO 3232 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-06-13 19:54:37.522  INFO 3232 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d53d09c2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 19:54:37.841  INFO 3232 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'redisConfig' of type [com.bootdo.clouddoadmin.config.RedisConfig$$EnhancerBySpringCGLIB$$f7ea5313] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 19:54:37.857  INFO 3232 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'keyGenerator' of type [com.bootdo.clouddoadmin.config.RedisConfig$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 19:54:37.933  INFO 3232 --- [main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration' of type [org.springframework.cloud.autoconfigure.ConfigurationPropertiesRebinderAutoConfiguration$$EnhancerBySpringCGLIB$$f1570cbf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2019-06-13 19:54:38.483  INFO 3232 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port(s): 8005 (http)
2019-06-13 19:54:38.511  INFO 3232 --- [main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]
2019-06-13 19:54:38.511  INFO 3232 --- [main] org.apache.catalina.core.StandardEngine  : Starting Servlet Engine: Apache Tomcat/8.5.32
2019-06-13 19:54:38.516  INFO 3232 --- [localhost-startStop-1] o.a.catalina.core.AprLifecycleListener   : The APR based Apache Tomcat Native library which allows optimal performance in production environments was not found on the java.library.path: [C:\Program Files\Java\jdk1.8.0_181\bin;C:\windows\Sun\Java\bin;C:\windows\system32;C:\windows;C:;C:\Program Files\Java\jdk1.8.0_181\bin;D:\myApps\apache-maven-3.6.0\bin;C:\Program Files\Java\jdk1.8.0_181\jre\bin;C:\Program Files\Java\jdk1.8.0_181\bin ;C:\Program Files\TortoiseGit\bin;C:\windows\system32;C:\windows;C:\windows\system32\wbem;D:\StudyTools\XAMPP\mysql\bin;C:\Program Files\dotnet\;C:\Program Files\Microsoft SQL Server\130\Tools\Binn\;D:\系统工具\Git\cmd;D:\StudyTools\NodeJs\;D:\StudyTools\Elang\erl10.0.1\bin;D:\StudyTools\RabbitMQ Server\rabbitmq_server-3.7.7\sbin;;D:\StudyTools\DockerToolbox;D:\StudyTools\NodeJs\node_global;D:\StudyTools\WebStorm 2019.1.2\bin;;.]
2019-06-13 19:54:38.713  INFO 3232 --- [localhost-startStop-1] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext
2019-06-13 19:54:38.713  INFO 3232 --- [localhost-startStop-1] o.s.web.context.ContextLoader            : Root WebApplicationContext: initialization completed in 3643 ms
2019-06-13 19:54:38.737  INFO 3232 --- [localhost-startStop-1] c.b.c.config.DruidConfiguration          : init Druid Servlet Configuration 
2019-06-13 19:54:39.080  WARN 3232 --- [localhost-startStop-1] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2019-06-13 19:54:39.080  INFO 3232 --- [localhost-startStop-1] c.n.c.sources.URLConfigurationSource     : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-06-13 19:54:39.089  INFO 3232 --- [localhost-startStop-1] c.netflix.config.DynamicPropertyFactory  : DynamicPropertyFactory is initialized with configuration sources: com.netflix.config.ConcurrentCompositeConfiguration@467d6933
2019-06-13 19:54:41.699  INFO 3232 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'characterEncodingFilter' to: [/*]
2019-06-13 19:54:41.700  INFO 3232 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'webMvcMetricsFilter' to: [/*]
2019-06-13 19:54:41.700  INFO 3232 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'hiddenHttpMethodFilter' to: [/*]
2019-06-13 19:54:41.701  INFO 3232 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpPutFormContentFilter' to: [/*]
2019-06-13 19:54:41.701  INFO 3232 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'requestContextFilter' to: [/*]
2019-06-13 19:54:41.702  INFO 3232 --- [localhost-startStop-1] .s.DelegatingFilterProxyRegistrationBean : Mapping filter: 'springSecurityFilterChain' to: [/*]
2019-06-13 19:54:41.702  INFO 3232 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'httpTraceFilter' to: [/*]
2019-06-13 19:54:41.703  INFO 3232 --- [localhost-startStop-1] o.s.b.w.servlet.FilterRegistrationBean   : Mapping filter: 'webStatFilter' to urls: [/*]
2019-06-13 19:54:41.703  INFO 3232 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Servlet statViewServlet mapped to [/druid/*]
2019-06-13 19:54:41.704  INFO 3232 --- [localhost-startStop-1] o.s.b.w.servlet.ServletRegistrationBean  : Servlet dispatcherServlet mapped to [/]
2019-06-13 19:54:42.900  INFO 3232 --- [main] s.c.a.AnnotationConfigApplicationContext : Refreshing FeignContext-course: startup date [Thu Jun 13 19:54:42 CST 2019]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1fde5d22
2019-06-13 19:54:42.927  INFO 3232 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-06-13 19:54:43.150  INFO 3232 --- [main] s.c.a.AnnotationConfigApplicationContext : Refreshing FeignContext-api-base: startup date [Thu Jun 13 19:54:43 CST 2019]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1fde5d22
2019-06-13 19:54:43.169  INFO 3232 --- [main] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-06-13 19:54:43.718  INFO 3232 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/authorize],methods=[POST],params=[user_oauth_approval]}" onto public org.springframework.web.servlet.View org.springframework.security.oauth2.provider.endpoint.AuthorizationEndpoint.approveOrDeny(java.util.Map<java.lang.String, java.lang.String>,java.util.Map<java.lang.String, ?>,org.springframework.web.bind.support.SessionStatus,java.security.Principal)
2019-06-13 19:54:43.720  INFO 3232 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/authorize]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.security.oauth2.provider.endpoint.AuthorizationEndpoint.authorize(java.util.Map<java.lang.String, java.lang.Object>,java.util.Map<java.lang.String, java.lang.String>,org.springframework.web.bind.support.SessionStatus,java.security.Principal)
2019-06-13 19:54:43.721  INFO 3232 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/token],methods=[GET]}" onto public org.springframework.http.ResponseEntity<org.springframework.security.oauth2.common.OAuth2AccessToken> org.springframework.security.oauth2.provider.endpoint.TokenEndpoint.getAccessToken(java.security.Principal,java.util.Map<java.lang.String, java.lang.String>) throws org.springframework.web.HttpRequestMethodNotSupportedException
2019-06-13 19:54:43.722  INFO 3232 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/token],methods=[POST]}" onto public org.springframework.http.ResponseEntity<org.springframework.security.oauth2.common.OAuth2AccessToken> org.springframework.security.oauth2.provider.endpoint.TokenEndpoint.postAccessToken(java.security.Principal,java.util.Map<java.lang.String, java.lang.String>) throws org.springframework.web.HttpRequestMethodNotSupportedException
2019-06-13 19:54:43.722  INFO 3232 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/check_token]}" onto public java.util.Map<java.lang.String, ?> org.springframework.security.oauth2.provider.endpoint.CheckTokenEndpoint.checkToken(java.lang.String)
2019-06-13 19:54:43.723  INFO 3232 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/confirm_access]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.security.oauth2.provider.endpoint.WhitelabelApprovalEndpoint.getAccessConfirmation(java.util.Map<java.lang.String, java.lang.Object>,javax.servlet.http.HttpServletRequest) throws java.lang.Exception
2019-06-13 19:54:43.724  INFO 3232 --- [main] .s.o.p.e.FrameworkEndpointHandlerMapping : Mapped "{[/oauth/error]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.security.oauth2.provider.endpoint.WhitelabelErrorEndpoint.handleError(javax.servlet.http.HttpServletRequest)
2019-06-13 19:54:43.814  INFO 3232 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/add/{pId}],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.DeptController.add(java.lang.Long,org.springframework.ui.Model)
2019-06-13 19:54:43.815  INFO 3232 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/remove],methods=[POST]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.DeptController.remove(java.lang.Long)
2019-06-13 19:54:43.815  INFO 3232 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/batchRemove],methods=[POST]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.DeptController.remove(java.lang.Long[])
2019-06-13 19:54:43.815  INFO 3232 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/update]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.DeptController.update(com.bootdo.clouddoadmin.domain.DeptDO)
2019-06-13 19:54:43.816  INFO 3232 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/list],methods=[GET]}" onto public java.util.List<com.bootdo.clouddoadmin.domain.DeptDO> com.bootdo.clouddoadmin.controller.DeptController.list()
2019-06-13 19:54:43.816  INFO 3232 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/save],methods=[POST]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.DeptController.save(com.bootdo.clouddoadmin.domain.DeptDO)
2019-06-13 19:54:43.816  INFO 3232 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/tree],methods=[GET]}" onto public com.bootdo.clouddoadmin.domain.Tree<com.bootdo.clouddoadmin.domain.DeptDO> com.bootdo.clouddoadmin.controller.DeptController.tree()
2019-06-13 19:54:43.817  INFO 3232 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.DeptController.dept()
2019-06-13 19:54:43.817  INFO 3232 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/dept/treeView],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.DeptController.treeView()
2019-06-13 19:54:43.818  INFO 3232 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/router],methods=[GET]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.LoginController.router()
2019-06-13 19:54:43.818  INFO 3232 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/logout]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.LoginController.logout(java.lang.String)
2019-06-13 19:54:43.822  INFO 3232 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu],methods=[DELETE]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.remove(java.lang.Long)
2019-06-13 19:54:43.822  INFO 3232 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/{id}],methods=[GET]}" onto com.bootdo.clouddoadmin.domain.MenuDO com.bootdo.clouddoadmin.controller.MenuController.get(java.lang.Long)
2019-06-13 19:54:43.822  INFO 3232 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu],methods=[PUT]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.update(com.bootdo.clouddoadmin.domain.MenuDO)
2019-06-13 19:54:43.834  INFO 3232 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu],methods=[GET]}" onto java.util.List<com.bootdo.clouddoadmin.domain.Tree<com.bootdo.clouddoadmin.domain.MenuDO>> com.bootdo.clouddoadmin.controller.MenuController.list()
2019-06-13 19:54:43.834  INFO 3232 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/list],methods=[GET]}" onto java.util.List<com.bootdo.clouddoadmin.domain.MenuDO> com.bootdo.clouddoadmin.controller.MenuController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-13 19:54:43.835  INFO 3232 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu],methods=[POST]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.save(com.bootdo.clouddoadmin.domain.MenuDO)
2019-06-13 19:54:43.835  INFO 3232 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/tree],methods=[GET]}" onto com.bootdo.clouddoadmin.domain.Tree<com.bootdo.clouddoadmin.domain.MenuDO> com.bootdo.clouddoadmin.controller.MenuController.tree()
2019-06-13 19:54:43.835  INFO 3232 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/clearCache],methods=[GET]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.clearCache()
2019-06-13 19:54:43.835  INFO 3232 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/currentUserMenus],methods=[GET]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.MenuController.currentUserMenus()
2019-06-13 19:54:43.837  INFO 3232 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/userMenus],methods=[GET]}" onto java.util.List<com.bootdo.clouddocommon.dto.MenuDTO> com.bootdo.clouddoadmin.controller.MenuController.userMenus()
2019-06-13 19:54:43.837  INFO 3232 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/menu/roleId],methods=[GET]}" onto java.util.List<java.lang.Long> com.bootdo.clouddoadmin.controller.MenuController.menuIdsByRoleId(java.lang.Long)
2019-06-13 19:54:43.842  INFO 3232 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role],methods=[PUT]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.RoleController.update(com.bootdo.clouddoadmin.domain.RoleDO)
2019-06-13 19:54:43.843  INFO 3232 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role],methods=[GET]}" onto com.bootdo.clouddocommon.utils.PageUtils com.bootdo.clouddoadmin.controller.RoleController.list(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-13 19:54:43.843  INFO 3232 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role],methods=[POST]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.RoleController.save(com.bootdo.clouddoadmin.domain.RoleDO)
2019-06-13 19:54:43.844  INFO 3232 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/role/userId/{userId}],methods=[GET]}" onto java.util.List<java.lang.Long> com.bootdo.clouddoadmin.controller.RoleController.roleIdByUserId(java.lang.Long)
2019-06-13 19:54:43.845  INFO 3232 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.TestController.test()
2019-06-13 19:54:43.845  INFO 3232 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/test1],methods=[GET]}" onto java.lang.String com.bootdo.clouddoadmin.controller.TestController.test1()
2019-06-13 19:54:43.847  INFO 3232 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user],methods=[DELETE]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.remove(java.lang.Long)
2019-06-13 19:54:43.847  INFO 3232 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/{id}],methods=[GET]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.get(java.lang.Long)
2019-06-13 19:54:43.848  INFO 3232 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user],methods=[PUT]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.update(com.bootdo.clouddoadmin.dto.UserDTO)
2019-06-13 19:54:43.848  INFO 3232 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user],methods=[POST]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.save(com.bootdo.clouddoadmin.dto.UserDTO)
2019-06-13 19:54:43.848  INFO 3232 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/batchRemove],methods=[POST]}" onto com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.batchRemove(java.lang.Long[])
2019-06-13 19:54:43.848  INFO 3232 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/tokenUser],methods=[GET]}" onto public java.security.Principal com.bootdo.clouddoadmin.controller.UserController.user(java.security.Principal)
2019-06-13 19:54:43.849  INFO 3232 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/roleId/{roleId}],methods=[GET]}" onto public com.bootdo.clouddocommon.utils.ResultBean com.bootdo.clouddoadmin.controller.UserController.getTeacherList(java.lang.Long,java.util.Map<java.lang.String, java.lang.Object>)
2019-06-13 19:54:43.849  INFO 3232 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/currentUser],methods=[GET]}" onto public com.bootdo.clouddocommon.dto.LoginUserDTO com.bootdo.clouddoadmin.controller.UserController.currentUser()
2019-06-13 19:54:43.849  INFO 3232 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/user/exits],methods=[POST]}" onto boolean com.bootdo.clouddoadmin.controller.UserController.exits(java.util.Map<java.lang.String, java.lang.Object>)
2019-06-13 19:54:43.853  INFO 3232 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/swagger-resources/configuration/ui]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.UiConfiguration> springfox.documentation.swagger.web.ApiResourceController.uiConfiguration()
2019-06-13 19:54:43.854  INFO 3232 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/swagger-resources]}" onto public org.springframework.http.ResponseEntity<java.util.List<springfox.documentation.swagger.web.SwaggerResource>> springfox.documentation.swagger.web.ApiResourceController.swaggerResources()
2019-06-13 19:54:43.855  INFO 3232 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/swagger-resources/configuration/security]}" onto public org.springframework.http.ResponseEntity<springfox.documentation.swagger.web.SecurityConfiguration> springfox.documentation.swagger.web.ApiResourceController.securityConfiguration()
2019-06-13 19:54:43.861  INFO 3232 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error]}" onto public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)
2019-06-13 19:54:43.862  INFO 3232 --- [main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/error],produces=[text/html]}" onto public org.springframework.web.servlet.ModelAndView org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.errorHtml(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-13 19:54:44.040  INFO 3232 --- [main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 2 endpoint(s) beneath base path '/actuator'
2019-06-13 19:54:44.060  INFO 3232 --- [main] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/health],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-06-13 19:54:44.061  INFO 3232 --- [main] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator/info],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto public java.lang.Object org.springframework.boot.actuate.endpoint.web.servlet.AbstractWebMvcEndpointHandlerMapping$OperationHandler.handle(javax.servlet.http.HttpServletRequest,java.util.Map<java.lang.String, java.lang.String>)
2019-06-13 19:54:44.062  INFO 3232 --- [main] s.b.a.e.w.s.WebMvcEndpointHandlerMapping : Mapped "{[/actuator],methods=[GET],produces=[application/vnd.spring-boot.actuator.v2+json || application/json]}" onto protected java.util.Map<java.lang.String, java.util.Map<java.lang.String, org.springframework.boot.actuate.endpoint.web.Link>> org.springframework.boot.actuate.endpoint.web.servlet.WebMvcEndpointHandlerMapping.links(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse)
2019-06-13 19:54:44.947  INFO 3232 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5072e638, org.springframework.security.web.context.SecurityContextPersistenceFilter@495da9a7, org.springframework.security.web.header.HeaderWriterFilter@60194904, org.springframework.security.web.authentication.logout.LogoutFilter@61b8c9de, org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter@75a9cc24, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@5402612e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@732d078d, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@30fa8a6b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3129299f, org.springframework.security.web.session.SessionManagementFilter@7742a276, org.springframework.security.web.access.ExceptionTranslationFilter@2a42019a, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5ad0c70a]
2019-06-13 19:54:44.971  INFO 3232 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: org.springframework.security.oauth2.config.annotation.web.configuration.ResourceServerConfiguration$NotOAuthRequestMatcher@1827fc4e, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4c41a177, org.springframework.security.web.context.SecurityContextPersistenceFilter@6ebbc06, org.springframework.security.web.header.HeaderWriterFilter@4c2bea52, org.springframework.security.web.authentication.logout.LogoutFilter@58f290bc, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@e706aa, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@74830d73, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@50672905, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@430d3021, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2faf6e4a, org.springframework.security.web.session.SessionManagementFilter@11015ca0, org.springframework.security.web.access.ExceptionTranslationFilter@64665781, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@52d63b7e]
2019-06-13 19:54:45.016  INFO 3232 --- [main] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@cf08c97, org.springframework.security.web.context.SecurityContextPersistenceFilter@192f5f39, org.springframework.security.web.header.HeaderWriterFilter@4fc3529, org.springframework.security.web.csrf.CsrfFilter@1255de25, org.springframework.security.web.authentication.logout.LogoutFilter@32c0fecc, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@be616f0, org.springframework.security.web.authentication.ui.DefaultLoginPageGeneratingFilter@3221588e, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@1f5d7fd5, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4cd5fc46, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2965dd88, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@37c87fcc, org.springframework.security.web.session.SessionManagementFilter@38e46765, org.springframework.security.web.access.ExceptionTranslationFilter@5891b7c5, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@498e41a4]
2019-06-13 19:54:45.094  INFO 3232 --- [main] pertySourcedRequestMappingHandlerMapping : Mapped URL path [/v2/api-docs] onto method [public org.springframework.http.ResponseEntity<springfox.documentation.spring.web.json.Json> springfox.documentation.swagger2.web.Swagger2Controller.getDocumentation(java.lang.String,javax.servlet.http.HttpServletRequest)]
2019-06-13 19:54:45.370  INFO 3232 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService  'clientInboundChannelExecutor'
2019-06-13 19:54:45.393  INFO 3232 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService  'clientOutboundChannelExecutor'
2019-06-13 19:54:45.419  INFO 3232 --- [main] o.s.s.c.ThreadPoolTaskScheduler          : Initializing ExecutorService  'messageBrokerTaskScheduler'
2019-06-13 19:54:45.471  INFO 3232 --- [main] o.s.w.s.s.s.WebSocketHandlerMapping      : Mapped URL path [/endpoint/**] onto handler of type [class org.springframework.web.socket.sockjs.support.SockJsHttpRequestHandler]
2019-06-13 19:54:45.497  INFO 3232 --- [main] o.s.s.concurrent.ThreadPoolTaskExecutor  : Initializing ExecutorService  'brokerChannelExecutor'
2019-06-13 19:54:45.712  WARN 3232 --- [main] c.n.c.sources.URLConfigurationSource     : No URLs will be polled as dynamic configuration sources.
2019-06-13 19:54:45.712  INFO 3232 --- [main] c.n.c.sources.URLConfigurationSource     : To enable URLs as dynamic configuration sources, define System property archaius.configurationSource.additionalUrls or make config.properties available on classpath.
2019-06-13 19:54:45.846  INFO 3232 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**/favicon.ico] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-13 19:54:46.026  INFO 3232 --- [main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1fde5d22: startup date [Thu Jun 13 19:54:35 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7eac9008
2019-06-13 19:54:46.115  INFO 3232 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/webjars/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-13 19:54:46.115  INFO 3232 --- [main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2019-06-13 19:54:46.146  INFO 3232 --- [main] .m.m.a.ExceptionHandlerExceptionResolver : Detected @ExceptionHandler methods in exceptionAdviceHandler
2019-06-13 19:54:47.266  INFO 3232 --- [main] o.s.ui.freemarker.SpringTemplateLoader   : SpringTemplateLoader for FreeMarker: using resource loader [org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1fde5d22: startup date [Thu Jun 13 19:54:35 CST 2019]; parent: org.springframework.context.annotation.AnnotationConfigApplicationContext@7eac9008] and template loader path [classpath:/templates/]
2019-06-13 19:54:47.268  INFO 3232 --- [main] o.s.w.s.v.f.FreeMarkerConfigurer         : ClassTemplateLoader for Spring macros added to FreeMarker configuration
2019-06-13 19:54:47.933  INFO 3232 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Registering beans for JMX exposure on startup
2019-06-13 19:54:47.935  INFO 3232 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'dataSource' has been autodetected for JMX exposure
2019-06-13 19:54:47.948  INFO 3232 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'environmentManager' has been autodetected for JMX exposure
2019-06-13 19:54:47.950  INFO 3232 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'refreshScope' has been autodetected for JMX exposure
2019-06-13 19:54:47.951  INFO 3232 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Bean with name 'configurationPropertiesRebinder' has been autodetected for JMX exposure
2019-06-13 19:54:47.955  INFO 3232 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'environmentManager': registering with JMX server as MBean [org.springframework.cloud.context.environment:name=environmentManager,type=EnvironmentManager]
2019-06-13 19:54:47.968  INFO 3232 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'refreshScope': registering with JMX server as MBean [org.springframework.cloud.context.scope.refresh:name=refreshScope,type=RefreshScope]
2019-06-13 19:54:47.982  INFO 3232 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located managed bean 'configurationPropertiesRebinder': registering with JMX server as MBean [org.springframework.cloud.context.properties:name=configurationPropertiesRebinder,context=1fde5d22,type=ConfigurationPropertiesRebinder]
2019-06-13 19:54:47.991  INFO 3232 --- [main] o.s.j.e.a.AnnotationMBeanExporter        : Located MBean 'dataSource': registering with JMX server as MBean [com.alibaba.druid.pool:name=dataSource,type=DruidDataSource]
2019-06-13 19:54:48.003  INFO 3232 --- [main] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase 0
2019-06-13 19:54:48.023  INFO 3232 --- [main] o.s.c.n.eureka.InstanceInfoFactory       : Setting initial instance status as: STARTING
2019-06-13 19:54:48.059  INFO 3232 --- [main] com.netflix.discovery.DiscoveryClient    : Initializing Eureka in region us-east-1
2019-06-13 19:54:48.526  INFO 3232 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using JSON encoding codec LegacyJacksonJson
2019-06-13 19:54:48.526  INFO 3232 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using JSON decoding codec LegacyJacksonJson
2019-06-13 19:54:48.642  INFO 3232 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using XML encoding codec XStreamXml
2019-06-13 19:54:48.642  INFO 3232 --- [main] c.n.d.provider.DiscoveryJerseyProvider   : Using XML decoding codec XStreamXml
2019-06-13 19:54:48.842  INFO 3232 --- [main] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 19:54:49.117  INFO 3232 --- [main] com.netflix.discovery.DiscoveryClient    : Disable delta property : false
2019-06-13 19:54:49.117  INFO 3232 --- [main] com.netflix.discovery.DiscoveryClient    : Single vip registry refresh property : null
2019-06-13 19:54:49.117  INFO 3232 --- [main] com.netflix.discovery.DiscoveryClient    : Force full registry fetch : false
2019-06-13 19:54:49.117  INFO 3232 --- [main] com.netflix.discovery.DiscoveryClient    : Application is null : false
2019-06-13 19:54:49.117  INFO 3232 --- [main] com.netflix.discovery.DiscoveryClient    : Registered Applications size is zero : true
2019-06-13 19:54:49.117  INFO 3232 --- [main] com.netflix.discovery.DiscoveryClient    : Application version is -1: true
2019-06-13 19:54:49.118  INFO 3232 --- [main] com.netflix.discovery.DiscoveryClient    : Getting all instance registry info from the eureka server
2019-06-13 19:54:49.312  INFO 3232 --- [main] com.netflix.discovery.DiscoveryClient    : The response status is 200
2019-06-13 19:54:49.315  INFO 3232 --- [main] com.netflix.discovery.DiscoveryClient    : Starting heartbeat executor: renew interval is: 30
2019-06-13 19:54:49.317  INFO 3232 --- [main] c.n.discovery.InstanceInfoReplicator     : InstanceInfoReplicator onDemand update allowed rate per min is 4
2019-06-13 19:54:49.321  INFO 3232 --- [main] com.netflix.discovery.DiscoveryClient    : Discovery Client initialized at timestamp 1560426889320 with initial instances count: 2
2019-06-13 19:54:49.341  INFO 3232 --- [main] o.s.c.n.e.s.EurekaServiceRegistry        : Registering application api-admin with eureka with status UP
2019-06-13 19:54:49.341  INFO 3232 --- [main] com.netflix.discovery.DiscoveryClient    : Saw local status change event StatusChangeEvent [timestamp=1560426889341, current=UP, previous=STARTING]
2019-06-13 19:54:49.387  INFO 3232 --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_API-ADMIN/Lenovo-PC:api-admin:8005: registering service...
2019-06-13 19:54:49.394  INFO 3232 --- [main] o.s.c.support.DefaultLifecycleProcessor  : Starting beans in phase 2147483647
2019-06-13 19:54:49.394  INFO 3232 --- [main] d.s.w.p.DocumentationPluginsBootstrapper : Context refreshed
2019-06-13 19:54:49.436  INFO 3232 --- [main] d.s.w.p.DocumentationPluginsBootstrapper : Found 1 custom documentation plugin(s)
2019-06-13 19:54:49.445  INFO 3232 --- [DiscoveryClient-InstanceInfoReplicator-0] com.netflix.discovery.DiscoveryClient    : DiscoveryClient_API-ADMIN/Lenovo-PC:api-admin:8005 - registration status: 204
2019-06-13 19:54:49.504  INFO 3232 --- [main] s.d.s.w.s.ApiListingReferenceScanner     : Scanning for api listing references
2019-06-13 19:54:49.644  INFO 3232 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: removeUsingPOST_1
2019-06-13 19:54:49.728  INFO 3232 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: listUsingGET_1
2019-06-13 19:54:49.733  INFO 3232 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: listUsingGET_2
2019-06-13 19:54:49.741  INFO 3232 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: saveUsingPOST_1
2019-06-13 19:54:49.743  INFO 3232 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: treeUsingGET_1
2019-06-13 19:54:49.745  INFO 3232 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: updateUsingPUT_1
2019-06-13 19:54:49.751  INFO 3232 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: listUsingGET_3
2019-06-13 19:54:49.765  INFO 3232 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: saveUsingPOST_2
2019-06-13 19:54:49.767  INFO 3232 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: updateUsingPUT_2
2019-06-13 19:54:49.781  INFO 3232 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: getUsingGET_1
2019-06-13 19:54:49.784  INFO 3232 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: removeUsingDELETE_1
2019-06-13 19:54:49.791  INFO 3232 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: saveUsingPOST_3
2019-06-13 19:54:49.792  INFO 3232 --- [main] .d.s.w.r.o.CachingOperationNameGenerator : Generating unique operation named: updateUsingPUT_3
2019-06-13 19:54:49.810  INFO 3232 --- [main] o.s.m.s.b.SimpleBrokerMessageHandler     : Starting...
2019-06-13 19:54:49.812  INFO 3232 --- [main] o.s.m.s.b.SimpleBrokerMessageHandler     : BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2019-06-13 19:54:49.812  INFO 3232 --- [main] o.s.m.s.b.SimpleBrokerMessageHandler     : Started.
2019-06-13 19:54:49.877  INFO 3232 --- [main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port(s): 8005 (http) with context path ''
2019-06-13 19:54:49.879  INFO 3232 --- [main] .s.c.n.e.s.EurekaAutoServiceRegistration : Updating port to 8005
2019-06-13 19:54:49.884  INFO 3232 --- [main] c.b.c.ClouddoAdminApplication            : Started ClouddoAdminApplication in 18.028 seconds (JVM running for 19.636)
2019-06-13 19:54:50.511  INFO 3232 --- [RMI TCP Connection(3)-10.255.44.113] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring FrameworkServlet 'dispatcherServlet'
2019-06-13 19:54:50.511  INFO 3232 --- [RMI TCP Connection(3)-10.255.44.113] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization started
2019-06-13 19:54:50.608  INFO 3232 --- [RMI TCP Connection(3)-10.255.44.113] o.s.web.servlet.DispatcherServlet        : FrameworkServlet 'dispatcherServlet': initialization completed in 95 ms
2019-06-13 19:54:50.862  INFO 3232 --- [RMI TCP Connection(2)-10.255.44.113] com.alibaba.druid.pool.DruidDataSource   : {dataSource-1} inited
2019-06-13 19:54:51.198  INFO 3232 --- [RMI TCP Connection(2)-10.255.44.113] io.lettuce.core.EpollProvider            : Starting without optional epoll library
2019-06-13 19:54:51.202  INFO 3232 --- [RMI TCP Connection(2)-10.255.44.113] io.lettuce.core.KqueueProvider           : Starting without optional kqueue library
2019-06-13 19:55:39.909  INFO 3232 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/currentUser
2019-06-13 19:55:39.909  INFO 3232 --- [http-nio-8005-exec-1] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/router
2019-06-13 19:55:39.909  INFO 3232 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/roleId/2
2019-06-13 19:55:39.910  INFO 3232 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 19:55:39.910  INFO 3232 --- [http-nio-8005-exec-1] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 19:55:39.910  INFO 3232 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 19:55:39.917  INFO 3232 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.getTeacherList
2019-06-13 19:55:39.917  INFO 3232 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.currentUser
2019-06-13 19:55:39.917  INFO 3232 --- [http-nio-8005-exec-1] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.LoginController.router
2019-06-13 19:55:39.917  INFO 3232 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 19:55:39.917  INFO 3232 --- [http-nio-8005-exec-1] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 19:55:39.917  INFO 3232 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : [2, {page=1, limit=10, name=}]
2019-06-13 19:55:39.968  INFO 3232 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 60
2019-06-13 19:55:39.971  INFO 3232 --- [http-nio-8005-exec-1] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 63
2019-06-13 19:55:39.988  INFO 3232 --- [http-nio-8005-exec-3] .s.a.AnnotationAsyncExecutionInterceptor : More than one TaskExecutor bean found within the context, and none is named 'taskExecutor'. Mark one of them as primary or name it 'taskExecutor' (possibly as an alias) in order to use it for async processing: [clientInboundChannelExecutor, clientOutboundChannelExecutor, brokerChannelExecutor, messageBrokerTaskScheduler]
2019-06-13 19:55:40.041  INFO 3232 --- [SimpleAsyncTaskExecutor-2] feign.RequestInterceptor                 : ------feign设置token110
2019-06-13 19:55:40.041  INFO 3232 --- [SimpleAsyncTaskExecutor-1] feign.RequestInterceptor                 : ------feign设置token109
2019-06-13 19:55:40.053  INFO 3232 --- [SimpleAsyncTaskExecutor-2] s.c.a.AnnotationConfigApplicationContext : Refreshing SpringClientFactory-api-base: startup date [Thu Jun 13 19:55:40 CST 2019]; parent: org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext@1fde5d22
2019-06-13 19:55:40.345  INFO 3232 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 437
2019-06-13 19:55:40.351  INFO 3232 --- [SimpleAsyncTaskExecutor-3] feign.RequestInterceptor                 : ------feign设置token111
2019-06-13 19:55:40.352  INFO 3232 --- [SimpleAsyncTaskExecutor-2] f.a.AutowiredAnnotationBeanPostProcessor : JSR-330 'javax.inject.Inject' annotation found and supported for autowiring
2019-06-13 19:55:40.813  INFO 3232 --- [SimpleAsyncTaskExecutor-2] c.netflix.config.ChainedDynamicProperty  : Flipping property: api-base.ribbon.ActiveConnectionsLimit to use NEXT property: niws.loadbalancer.availabilityFilteringRule.activeConnectionsLimit = 2147483647
2019-06-13 19:55:40.850  INFO 3232 --- [SimpleAsyncTaskExecutor-2] c.n.u.concurrent.ShutdownEnabledTimer    : Shutdown hook installed for: NFLoadBalancer-PingTimer-api-base
2019-06-13 19:55:40.857  INFO 3232 --- [SimpleAsyncTaskExecutor-2] c.netflix.loadbalancer.BaseLoadBalancer  : Client: api-base instantiated a LoadBalancer: DynamicServerListLoadBalancer:{NFLoadBalancer:name=api-base,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:null
2019-06-13 19:55:40.867  INFO 3232 --- [SimpleAsyncTaskExecutor-2] c.n.l.DynamicServerListLoadBalancer      : Using serverListUpdater PollingServerListUpdater
2019-06-13 19:55:40.874  INFO 3232 --- [SimpleAsyncTaskExecutor-2] c.n.l.DynamicServerListLoadBalancer      : DynamicServerListLoadBalancer for client api-base initialized: DynamicServerListLoadBalancer:{NFLoadBalancer:name=api-base,current list of Servers=[],Load balancer stats=Zone stats: {},Server stats: []}ServerList:org.springframework.cloud.netflix.ribbon.eureka.DomainExtractingServerList@7f704fc2
2019-06-13 19:55:40.976 ERROR 3232 --- [SimpleAsyncTaskExecutor-1] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy197.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy197.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 19:55:40.976 ERROR 3232 --- [SimpleAsyncTaskExecutor-3] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy197.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy197.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 19:55:40.976 ERROR 3232 --- [SimpleAsyncTaskExecutor-2] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy197.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy197.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 19:55:45.495  INFO 3232 --- [MessageBroker-1] o.s.w.s.c.WebSocketMessageBrokerStats    : WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2019-06-13 19:55:50.175  INFO 3232 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/roleId/2
2019-06-13 19:55:50.175  INFO 3232 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 19:55:50.176  INFO 3232 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.getTeacherList
2019-06-13 19:55:50.176  INFO 3232 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : [2, {page=1, limit=10, name=王}]
2019-06-13 19:55:50.189  INFO 3232 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 14
2019-06-13 19:55:50.195  INFO 3232 --- [SimpleAsyncTaskExecutor-4] feign.RequestInterceptor                 : ------feign设置token119
2019-06-13 19:55:50.198 ERROR 3232 --- [SimpleAsyncTaskExecutor-4] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy197.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy197.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 19:55:52.855  INFO 3232 --- [http-nio-8005-exec-5] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/roleId/2
2019-06-13 19:55:52.856  INFO 3232 --- [http-nio-8005-exec-5] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 19:55:52.856  INFO 3232 --- [http-nio-8005-exec-5] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.getTeacherList
2019-06-13 19:55:52.856  INFO 3232 --- [http-nio-8005-exec-5] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : [2, {page=1, limit=10, name=王}]
2019-06-13 19:55:52.866  INFO 3232 --- [http-nio-8005-exec-5] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 11
2019-06-13 19:55:52.871  INFO 3232 --- [SimpleAsyncTaskExecutor-5] feign.RequestInterceptor                 : ------feign设置token120
2019-06-13 19:55:52.877 ERROR 3232 --- [SimpleAsyncTaskExecutor-5] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy197.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy197.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 19:55:56.358  INFO 3232 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/roleId/2
2019-06-13 19:55:56.358  INFO 3232 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 19:55:56.358  INFO 3232 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.getTeacherList
2019-06-13 19:55:56.358  INFO 3232 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : [2, {page=1, limit=10, name=}]
2019-06-13 19:55:56.368  INFO 3232 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 10
2019-06-13 19:55:56.369  INFO 3232 --- [SimpleAsyncTaskExecutor-6] feign.RequestInterceptor                 : ------feign设置token121
2019-06-13 19:55:56.374 ERROR 3232 --- [SimpleAsyncTaskExecutor-6] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy197.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy197.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 19:55:57.365  INFO 3232 --- [http-nio-8005-exec-9] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/roleId/2
2019-06-13 19:55:57.366  INFO 3232 --- [http-nio-8005-exec-9] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 19:55:57.366  INFO 3232 --- [http-nio-8005-exec-9] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.getTeacherList
2019-06-13 19:55:57.366  INFO 3232 --- [http-nio-8005-exec-9] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : [2, {page=1, limit=10, name=}]
2019-06-13 19:55:57.375  INFO 3232 --- [http-nio-8005-exec-9] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 10
2019-06-13 19:55:57.380  INFO 3232 --- [SimpleAsyncTaskExecutor-7] feign.RequestInterceptor                 : ------feign设置token122
2019-06-13 19:55:57.381 ERROR 3232 --- [SimpleAsyncTaskExecutor-7] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy197.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy197.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 19:55:57.902  INFO 3232 --- [http-nio-8005-exec-8] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/roleId/2
2019-06-13 19:55:57.902  INFO 3232 --- [http-nio-8005-exec-8] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 19:55:57.902  INFO 3232 --- [http-nio-8005-exec-8] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.getTeacherList
2019-06-13 19:55:57.902  INFO 3232 --- [http-nio-8005-exec-8] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : [2, {page=1, limit=10, name=}]
2019-06-13 19:55:57.910  INFO 3232 --- [http-nio-8005-exec-8] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 8
2019-06-13 19:55:57.911  INFO 3232 --- [SimpleAsyncTaskExecutor-8] feign.RequestInterceptor                 : ------feign设置token123
2019-06-13 19:55:57.914 ERROR 3232 --- [SimpleAsyncTaskExecutor-8] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy197.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy197.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 19:55:58.593  INFO 3232 --- [http-nio-8005-exec-7] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/roleId/2
2019-06-13 19:55:58.593  INFO 3232 --- [http-nio-8005-exec-7] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 19:55:58.593  INFO 3232 --- [http-nio-8005-exec-7] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.getTeacherList
2019-06-13 19:55:58.593  INFO 3232 --- [http-nio-8005-exec-7] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : [2, {page=1, limit=10, name=}]
2019-06-13 19:55:58.619  INFO 3232 --- [http-nio-8005-exec-7] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 27
2019-06-13 19:55:58.626  INFO 3232 --- [SimpleAsyncTaskExecutor-9] feign.RequestInterceptor                 : ------feign设置token124
2019-06-13 19:55:58.629 ERROR 3232 --- [SimpleAsyncTaskExecutor-9] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy197.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy197.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 19:56:34.832  INFO 3232 --- [http-nio-8005-exec-10] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/roleId/2
2019-06-13 19:56:34.832  INFO 3232 --- [http-nio-8005-exec-10] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 19:56:34.832  INFO 3232 --- [http-nio-8005-exec-10] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.getTeacherList
2019-06-13 19:56:34.833  INFO 3232 --- [http-nio-8005-exec-10] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : [2, {page=1, limit=10, name=}]
2019-06-13 19:56:34.845  INFO 3232 --- [http-nio-8005-exec-10] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 13
2019-06-13 19:56:34.846  INFO 3232 --- [SimpleAsyncTaskExecutor-10] feign.RequestInterceptor                 : ------feign设置token125
2019-06-13 19:56:34.848 ERROR 3232 --- [SimpleAsyncTaskExecutor-10] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy197.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy197.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 19:56:53.960  INFO 3232 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/roleId/2
2019-06-13 19:56:53.960  INFO 3232 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 19:56:53.961  INFO 3232 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.getTeacherList
2019-06-13 19:56:53.961  INFO 3232 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : [2, {page=1, limit=10, name=1}]
2019-06-13 19:56:53.976  INFO 3232 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 16
2019-06-13 19:56:53.984  INFO 3232 --- [SimpleAsyncTaskExecutor-11] feign.RequestInterceptor                 : ------feign设置token126
2019-06-13 19:56:53.986 ERROR 3232 --- [SimpleAsyncTaskExecutor-11] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy197.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy197.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 19:57:20.027  INFO 3232 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/roleId/2
2019-06-13 19:57:20.028  INFO 3232 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 19:57:20.028  INFO 3232 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.getTeacherList
2019-06-13 19:57:20.028  INFO 3232 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : [2, {page=1, limit=10, name=啊实打实的}]
2019-06-13 19:57:20.136  INFO 3232 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 109
2019-06-13 19:57:20.137  INFO 3232 --- [SimpleAsyncTaskExecutor-12] feign.RequestInterceptor                 : ------feign设置token127
2019-06-13 19:57:20.140 ERROR 3232 --- [SimpleAsyncTaskExecutor-12] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy197.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy197.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 19:57:32.568  INFO 3232 --- [http-nio-8005-exec-5] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/roleId/2
2019-06-13 19:57:32.568  INFO 3232 --- [http-nio-8005-exec-5] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 19:57:32.568  INFO 3232 --- [http-nio-8005-exec-5] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.getTeacherList
2019-06-13 19:57:32.568  INFO 3232 --- [http-nio-8005-exec-5] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : [2, {page=1, limit=10, name=李四}]
2019-06-13 19:57:32.575  INFO 3232 --- [http-nio-8005-exec-5] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 7
2019-06-13 19:57:32.577  INFO 3232 --- [SimpleAsyncTaskExecutor-13] feign.RequestInterceptor                 : ------feign设置token128
2019-06-13 19:57:32.581 ERROR 3232 --- [SimpleAsyncTaskExecutor-13] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy197.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy197.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 19:57:36.515  INFO 3232 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/roleId/2
2019-06-13 19:57:36.515  INFO 3232 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 19:57:36.515  INFO 3232 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.getTeacherList
2019-06-13 19:57:36.515  INFO 3232 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : [2, {page=1, limit=10, name=王五}]
2019-06-13 19:57:36.528  INFO 3232 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 13
2019-06-13 19:57:36.529  INFO 3232 --- [SimpleAsyncTaskExecutor-14] feign.RequestInterceptor                 : ------feign设置token129
2019-06-13 19:57:36.532 ERROR 3232 --- [SimpleAsyncTaskExecutor-14] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy197.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy197.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 19:59:49.120  INFO 3232 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 20:04:07.622  INFO 3232 --- [http-nio-8005-exec-8] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/roleId/2
2019-06-13 20:04:07.622  INFO 3232 --- [http-nio-8005-exec-8] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 20:04:07.622  INFO 3232 --- [http-nio-8005-exec-8] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.getTeacherList
2019-06-13 20:04:07.622  INFO 3232 --- [http-nio-8005-exec-8] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : [2, {page=1, limit=10, name=}]
2019-06-13 20:04:07.628  INFO 3232 --- [http-nio-8005-exec-8] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 6
2019-06-13 20:04:07.633  INFO 3232 --- [SimpleAsyncTaskExecutor-15] feign.RequestInterceptor                 : ------feign设置token131
2019-06-13 20:04:07.634 ERROR 3232 --- [SimpleAsyncTaskExecutor-15] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy197.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy197.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 20:04:16.217  INFO 3232 --- [http-nio-8005-exec-7] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/currentUser
2019-06-13 20:04:16.217  INFO 3232 --- [http-nio-8005-exec-7] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 20:04:16.217  INFO 3232 --- [http-nio-8005-exec-7] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.currentUser
2019-06-13 20:04:16.217  INFO 3232 --- [http-nio-8005-exec-7] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 20:04:16.220  INFO 3232 --- [http-nio-8005-exec-7] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 3
2019-06-13 20:04:16.224  INFO 3232 --- [SimpleAsyncTaskExecutor-16] feign.RequestInterceptor                 : ------feign设置token132
2019-06-13 20:04:16.225 ERROR 3232 --- [SimpleAsyncTaskExecutor-16] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy197.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy197.save(Unknown Source) ~[na:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_181]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_181]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 14 common frames omitted

2019-06-13 20:04:16.580  INFO 3232 --- [http-nio-8005-exec-10] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/router
2019-06-13 20:04:16.580  INFO 3232 --- [http-nio-8005-exec-10] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 20:04:16.580  INFO 3232 --- [http-nio-8005-exec-10] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.LoginController.router
2019-06-13 20:04:16.580  INFO 3232 --- [http-nio-8005-exec-10] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 20:04:16.582  INFO 3232 --- [http-nio-8005-exec-10] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 3
2019-06-13 20:04:16.583  INFO 3232 --- [SimpleAsyncTaskExecutor-17] feign.RequestInterceptor                 : ------feign设置token133
2019-06-13 20:04:16.587 ERROR 3232 --- [SimpleAsyncTaskExecutor-17] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy197.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy197.save(Unknown Source) ~[na:na]
	at sun.reflect.GeneratedMethodAccessor181.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 13 common frames omitted

2019-06-13 20:04:16.820  INFO 3232 --- [http-nio-8005-exec-1] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/roleId/2
2019-06-13 20:04:16.820  INFO 3232 --- [http-nio-8005-exec-1] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 20:04:16.820  INFO 3232 --- [http-nio-8005-exec-1] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.getTeacherList
2019-06-13 20:04:16.820  INFO 3232 --- [http-nio-8005-exec-1] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : [2, {page=1, limit=10, name=}]
2019-06-13 20:04:16.825  INFO 3232 --- [http-nio-8005-exec-1] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 5
2019-06-13 20:04:16.827  INFO 3232 --- [SimpleAsyncTaskExecutor-18] feign.RequestInterceptor                 : ------feign设置token134
2019-06-13 20:04:16.831 ERROR 3232 --- [SimpleAsyncTaskExecutor-18] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy197.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy197.save(Unknown Source) ~[na:na]
	at sun.reflect.GeneratedMethodAccessor181.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 13 common frames omitted

2019-06-13 20:04:49.123  INFO 3232 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 20:04:57.435  INFO 3232 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/currentUser
2019-06-13 20:04:57.436  INFO 3232 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 20:04:57.436  INFO 3232 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.currentUser
2019-06-13 20:04:57.436  INFO 3232 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 20:04:57.439  INFO 3232 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 4
2019-06-13 20:04:57.440  INFO 3232 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/roleId/2
2019-06-13 20:04:57.441  INFO 3232 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 20:04:57.441  INFO 3232 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.getTeacherList
2019-06-13 20:04:57.441  INFO 3232 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : [2, {page=1, limit=10, name=}]
2019-06-13 20:04:57.447  INFO 3232 --- [SimpleAsyncTaskExecutor-19] feign.RequestInterceptor                 : ------feign设置token135
2019-06-13 20:04:57.451 ERROR 3232 --- [SimpleAsyncTaskExecutor-19] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy197.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy197.save(Unknown Source) ~[na:na]
	at sun.reflect.GeneratedMethodAccessor181.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 13 common frames omitted

2019-06-13 20:04:57.460  INFO 3232 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/router
2019-06-13 20:04:57.460  INFO 3232 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 20:04:57.460  INFO 3232 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.LoginController.router
2019-06-13 20:04:57.460  INFO 3232 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 20:04:57.464  INFO 3232 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 4
2019-06-13 20:04:57.474  INFO 3232 --- [SimpleAsyncTaskExecutor-20] feign.RequestInterceptor                 : ------feign设置token136
2019-06-13 20:04:57.477 ERROR 3232 --- [SimpleAsyncTaskExecutor-20] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy197.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy197.save(Unknown Source) ~[na:na]
	at sun.reflect.GeneratedMethodAccessor181.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 13 common frames omitted

2019-06-13 20:04:57.480  INFO 3232 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 40
2019-06-13 20:04:57.490  INFO 3232 --- [SimpleAsyncTaskExecutor-21] feign.RequestInterceptor                 : ------feign设置token137
2019-06-13 20:04:57.494 ERROR 3232 --- [SimpleAsyncTaskExecutor-21] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy197.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy197.save(Unknown Source) ~[na:na]
	at sun.reflect.GeneratedMethodAccessor181.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 13 common frames omitted

2019-06-13 20:05:00.792  INFO 3232 --- [http-nio-8005-exec-5] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/roleId/3
2019-06-13 20:05:00.792  INFO 3232 --- [http-nio-8005-exec-5] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 20:05:00.792  INFO 3232 --- [http-nio-8005-exec-5] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.getTeacherList
2019-06-13 20:05:00.792  INFO 3232 --- [http-nio-8005-exec-5] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : [3, {page=1, limit=10, name=}]
2019-06-13 20:05:00.810  INFO 3232 --- [http-nio-8005-exec-5] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 18
2019-06-13 20:05:00.818  INFO 3232 --- [SimpleAsyncTaskExecutor-22] feign.RequestInterceptor                 : ------feign设置token138
2019-06-13 20:05:00.823 ERROR 3232 --- [SimpleAsyncTaskExecutor-22] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy197.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy197.save(Unknown Source) ~[na:na]
	at sun.reflect.GeneratedMethodAccessor181.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 13 common frames omitted

2019-06-13 20:05:04.495  INFO 3232 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/roleId/3
2019-06-13 20:05:04.496  INFO 3232 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 20:05:04.496  INFO 3232 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.getTeacherList
2019-06-13 20:05:04.496  INFO 3232 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : [3, {page=1, limit=10, name=12124}]
2019-06-13 20:05:04.501  INFO 3232 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 6
2019-06-13 20:05:04.502  INFO 3232 --- [SimpleAsyncTaskExecutor-23] feign.RequestInterceptor                 : ------feign设置token139
2019-06-13 20:05:04.513 ERROR 3232 --- [SimpleAsyncTaskExecutor-23] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy197.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy197.save(Unknown Source) ~[na:na]
	at sun.reflect.GeneratedMethodAccessor181.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 13 common frames omitted

2019-06-13 20:05:09.116  INFO 3232 --- [http-nio-8005-exec-9] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/roleId/3
2019-06-13 20:05:09.116  INFO 3232 --- [http-nio-8005-exec-9] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 20:05:09.116  INFO 3232 --- [http-nio-8005-exec-9] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.getTeacherList
2019-06-13 20:05:09.116  INFO 3232 --- [http-nio-8005-exec-9] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : [3, {page=1, limit=10, name=宋}]
2019-06-13 20:05:09.128  INFO 3232 --- [http-nio-8005-exec-9] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 12
2019-06-13 20:05:09.129  INFO 3232 --- [SimpleAsyncTaskExecutor-24] feign.RequestInterceptor                 : ------feign设置token140
2019-06-13 20:05:09.132 ERROR 3232 --- [SimpleAsyncTaskExecutor-24] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy197.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy197.save(Unknown Source) ~[na:na]
	at sun.reflect.GeneratedMethodAccessor181.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 13 common frames omitted

2019-06-13 20:07:30.609  INFO 3232 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/router
2019-06-13 20:07:30.609  INFO 3232 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 20:07:30.609  INFO 3232 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.LoginController.router
2019-06-13 20:07:30.609  INFO 3232 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 20:07:30.611  INFO 3232 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 2
2019-06-13 20:07:30.612  INFO 3232 --- [SimpleAsyncTaskExecutor-25] feign.RequestInterceptor                 : ------feign设置token141
2019-06-13 20:07:30.618 ERROR 3232 --- [SimpleAsyncTaskExecutor-25] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy197.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy197.save(Unknown Source) ~[na:na]
	at sun.reflect.GeneratedMethodAccessor181.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 13 common frames omitted

2019-06-13 20:07:30.638  INFO 3232 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/currentUser
2019-06-13 20:07:30.638  INFO 3232 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 20:07:30.638  INFO 3232 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.currentUser
2019-06-13 20:07:30.638  INFO 3232 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 20:07:30.640  INFO 3232 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 2
2019-06-13 20:07:30.642  INFO 3232 --- [SimpleAsyncTaskExecutor-26] feign.RequestInterceptor                 : ------feign设置token142
2019-06-13 20:07:30.648 ERROR 3232 --- [SimpleAsyncTaskExecutor-26] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy197.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy197.save(Unknown Source) ~[na:na]
	at sun.reflect.GeneratedMethodAccessor181.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 13 common frames omitted

2019-06-13 20:08:33.404  INFO 3232 --- [http-nio-8005-exec-9] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/currentUser
2019-06-13 20:08:33.404  INFO 3232 --- [http-nio-8005-exec-8] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/router
2019-06-13 20:08:33.405  INFO 3232 --- [http-nio-8005-exec-9] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 20:08:33.405  INFO 3232 --- [http-nio-8005-exec-9] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.currentUser
2019-06-13 20:08:33.405  INFO 3232 --- [http-nio-8005-exec-9] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 20:08:33.405  INFO 3232 --- [http-nio-8005-exec-8] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 20:08:33.405  INFO 3232 --- [http-nio-8005-exec-8] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.LoginController.router
2019-06-13 20:08:33.405  INFO 3232 --- [http-nio-8005-exec-8] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 20:08:33.411  INFO 3232 --- [http-nio-8005-exec-9] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 7
2019-06-13 20:08:33.416  INFO 3232 --- [SimpleAsyncTaskExecutor-27] feign.RequestInterceptor                 : ------feign设置token143
2019-06-13 20:08:33.419 ERROR 3232 --- [SimpleAsyncTaskExecutor-27] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy197.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy197.save(Unknown Source) ~[na:na]
	at sun.reflect.GeneratedMethodAccessor181.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 13 common frames omitted

2019-06-13 20:08:33.641  INFO 3232 --- [http-nio-8005-exec-8] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 237
2019-06-13 20:08:33.656  INFO 3232 --- [SimpleAsyncTaskExecutor-28] feign.RequestInterceptor                 : ------feign设置token144
2019-06-13 20:08:33.659 ERROR 3232 --- [SimpleAsyncTaskExecutor-28] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy197.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy197.save(Unknown Source) ~[na:na]
	at sun.reflect.GeneratedMethodAccessor181.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 13 common frames omitted

2019-06-13 20:08:49.600  INFO 3232 --- [http-nio-8005-exec-10] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/roleId/2
2019-06-13 20:08:49.600  INFO 3232 --- [http-nio-8005-exec-10] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 20:08:49.600  INFO 3232 --- [http-nio-8005-exec-10] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.getTeacherList
2019-06-13 20:08:49.601  INFO 3232 --- [http-nio-8005-exec-10] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : [2, {page=1, limit=10, name=}]
2019-06-13 20:08:49.626  INFO 3232 --- [http-nio-8005-exec-10] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 26
2019-06-13 20:08:49.628  INFO 3232 --- [SimpleAsyncTaskExecutor-29] feign.RequestInterceptor                 : ------feign设置token145
2019-06-13 20:08:49.632 ERROR 3232 --- [SimpleAsyncTaskExecutor-29] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy197.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy197.save(Unknown Source) ~[na:na]
	at sun.reflect.GeneratedMethodAccessor181.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 13 common frames omitted

2019-06-13 20:08:52.073  INFO 3232 --- [http-nio-8005-exec-1] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/roleId/2
2019-06-13 20:08:52.073  INFO 3232 --- [http-nio-8005-exec-1] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 20:08:52.074  INFO 3232 --- [http-nio-8005-exec-1] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.getTeacherList
2019-06-13 20:08:52.074  INFO 3232 --- [http-nio-8005-exec-1] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : [2, {page=1, limit=10, name=}]
2019-06-13 20:08:52.098  INFO 3232 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/router
2019-06-13 20:08:52.098  INFO 3232 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 20:08:52.098  INFO 3232 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.LoginController.router
2019-06-13 20:08:52.099  INFO 3232 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 20:08:52.104  INFO 3232 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 6
2019-06-13 20:08:52.111  INFO 3232 --- [http-nio-8005-exec-1] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 39
2019-06-13 20:08:52.113  INFO 3232 --- [SimpleAsyncTaskExecutor-30] feign.RequestInterceptor                 : ------feign设置token146
2019-06-13 20:08:52.119  INFO 3232 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/currentUser
2019-06-13 20:08:52.120  INFO 3232 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 20:08:52.120  INFO 3232 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.currentUser
2019-06-13 20:08:52.120  INFO 3232 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 20:08:52.126  INFO 3232 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 7
2019-06-13 20:08:52.127 ERROR 3232 --- [SimpleAsyncTaskExecutor-30] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy197.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy197.save(Unknown Source) ~[na:na]
	at sun.reflect.GeneratedMethodAccessor181.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 13 common frames omitted

2019-06-13 20:08:52.126  INFO 3232 --- [SimpleAsyncTaskExecutor-31] feign.RequestInterceptor                 : ------feign设置token147
2019-06-13 20:08:52.130  INFO 3232 --- [SimpleAsyncTaskExecutor-32] feign.RequestInterceptor                 : ------feign设置token148
2019-06-13 20:08:52.140 ERROR 3232 --- [SimpleAsyncTaskExecutor-31] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy197.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy197.save(Unknown Source) ~[na:na]
	at sun.reflect.GeneratedMethodAccessor181.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 13 common frames omitted

2019-06-13 20:08:52.141 ERROR 3232 --- [SimpleAsyncTaskExecutor-32] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy197.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy197.save(Unknown Source) ~[na:na]
	at sun.reflect.GeneratedMethodAccessor181.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 13 common frames omitted

2019-06-13 20:09:02.977  INFO 3232 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/role
2019-06-13 20:09:02.977  INFO 3232 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 20:09:02.977  INFO 3232 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.RoleController.list
2019-06-13 20:09:02.977  INFO 3232 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : [{}]
2019-06-13 20:09:02.988  INFO 3232 --- [http-nio-8005-exec-3] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 11
2019-06-13 20:09:02.994  INFO 3232 --- [SimpleAsyncTaskExecutor-33] feign.RequestInterceptor                 : ------feign设置token149
2019-06-13 20:09:03.001 ERROR 3232 --- [SimpleAsyncTaskExecutor-33] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy197.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy197.save(Unknown Source) ~[na:na]
	at sun.reflect.GeneratedMethodAccessor181.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 13 common frames omitted

2019-06-13 20:09:32.791  INFO 3232 --- [http-nio-8005-exec-5] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/roleId/2
2019-06-13 20:09:32.791  INFO 3232 --- [http-nio-8005-exec-5] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 20:09:32.791  INFO 3232 --- [http-nio-8005-exec-5] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.getTeacherList
2019-06-13 20:09:32.791  INFO 3232 --- [http-nio-8005-exec-5] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : [2, {page=1, limit=10, name=}]
2019-06-13 20:09:32.806  INFO 3232 --- [http-nio-8005-exec-5] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 15
2019-06-13 20:09:32.817  INFO 3232 --- [SimpleAsyncTaskExecutor-34] feign.RequestInterceptor                 : ------feign设置token150
2019-06-13 20:09:32.825 ERROR 3232 --- [SimpleAsyncTaskExecutor-34] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy197.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy197.save(Unknown Source) ~[na:na]
	at sun.reflect.GeneratedMethodAccessor181.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 13 common frames omitted

2019-06-13 20:09:34.155  INFO 3232 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/role
2019-06-13 20:09:34.155  INFO 3232 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 20:09:34.155  INFO 3232 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.RoleController.list
2019-06-13 20:09:34.155  INFO 3232 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : [{}]
2019-06-13 20:09:34.159  INFO 3232 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 4
2019-06-13 20:09:34.160  INFO 3232 --- [SimpleAsyncTaskExecutor-35] feign.RequestInterceptor                 : ------feign设置token151
2019-06-13 20:09:34.167 ERROR 3232 --- [SimpleAsyncTaskExecutor-35] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy197.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy197.save(Unknown Source) ~[na:na]
	at sun.reflect.GeneratedMethodAccessor181.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 13 common frames omitted

2019-06-13 20:09:49.125  INFO 3232 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 20:09:51.505  INFO 3232 --- [http-nio-8005-exec-9] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/role
2019-06-13 20:09:51.505  INFO 3232 --- [http-nio-8005-exec-9] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 20:09:51.505  INFO 3232 --- [http-nio-8005-exec-9] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.RoleController.list
2019-06-13 20:09:51.505  INFO 3232 --- [http-nio-8005-exec-9] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : [{}]
2019-06-13 20:09:51.510  INFO 3232 --- [http-nio-8005-exec-9] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 4
2019-06-13 20:09:51.511  INFO 3232 --- [SimpleAsyncTaskExecutor-36] feign.RequestInterceptor                 : ------feign设置token152
2019-06-13 20:09:51.517 ERROR 3232 --- [SimpleAsyncTaskExecutor-36] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy197.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy197.save(Unknown Source) ~[na:na]
	at sun.reflect.GeneratedMethodAccessor181.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 13 common frames omitted

2019-06-13 20:13:34.558  INFO 3232 --- [http-nio-8005-exec-10] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/router
2019-06-13 20:13:34.560  INFO 3232 --- [http-nio-8005-exec-10] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 20:13:34.560  INFO 3232 --- [http-nio-8005-exec-10] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.LoginController.router
2019-06-13 20:13:34.560  INFO 3232 --- [http-nio-8005-exec-10] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 20:13:34.562  INFO 3232 --- [http-nio-8005-exec-10] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 4
2019-06-13 20:13:34.567  INFO 3232 --- [SimpleAsyncTaskExecutor-37] feign.RequestInterceptor                 : ------feign设置token153
2019-06-13 20:13:34.572 ERROR 3232 --- [SimpleAsyncTaskExecutor-37] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy197.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy197.save(Unknown Source) ~[na:na]
	at sun.reflect.GeneratedMethodAccessor181.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 13 common frames omitted

2019-06-13 20:13:34.598  INFO 3232 --- [http-nio-8005-exec-1] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/currentUser
2019-06-13 20:13:34.598  INFO 3232 --- [http-nio-8005-exec-1] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 20:13:34.598  INFO 3232 --- [http-nio-8005-exec-1] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.currentUser
2019-06-13 20:13:34.598  INFO 3232 --- [http-nio-8005-exec-1] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : []
2019-06-13 20:13:34.598  INFO 3232 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/roleId/2
2019-06-13 20:13:34.599  INFO 3232 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 20:13:34.599  INFO 3232 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.getTeacherList
2019-06-13 20:13:34.599  INFO 3232 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : [2, {page=1, limit=10, name=}]
2019-06-13 20:13:34.602  INFO 3232 --- [http-nio-8005-exec-1] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 4
2019-06-13 20:13:34.611  INFO 3232 --- [SimpleAsyncTaskExecutor-38] feign.RequestInterceptor                 : ------feign设置token154
2019-06-13 20:13:34.611  INFO 3232 --- [http-nio-8005-exec-2] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 13
2019-06-13 20:13:34.617 ERROR 3232 --- [SimpleAsyncTaskExecutor-38] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy197.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy197.save(Unknown Source) ~[na:na]
	at sun.reflect.GeneratedMethodAccessor181.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 13 common frames omitted

2019-06-13 20:13:34.618  INFO 3232 --- [SimpleAsyncTaskExecutor-39] feign.RequestInterceptor                 : ------feign设置token155
2019-06-13 20:13:34.621 ERROR 3232 --- [SimpleAsyncTaskExecutor-39] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy197.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy197.save(Unknown Source) ~[na:na]
	at sun.reflect.GeneratedMethodAccessor181.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 13 common frames omitted

2019-06-13 20:13:45.047  INFO 3232 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/role
2019-06-13 20:13:45.047  INFO 3232 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 20:13:45.047  INFO 3232 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.RoleController.list
2019-06-13 20:13:45.047  INFO 3232 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : [{}]
2019-06-13 20:13:45.052  INFO 3232 --- [http-nio-8005-exec-4] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 5
2019-06-13 20:13:45.053  INFO 3232 --- [SimpleAsyncTaskExecutor-40] feign.RequestInterceptor                 : ------feign设置token156
2019-06-13 20:13:45.058 ERROR 3232 --- [SimpleAsyncTaskExecutor-40] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy197.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy197.save(Unknown Source) ~[na:na]
	at sun.reflect.GeneratedMethodAccessor181.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 13 common frames omitted

2019-06-13 20:14:49.126  INFO 3232 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 20:15:43.048  INFO 3232 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/roleId/2
2019-06-13 20:15:43.048  INFO 3232 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 20:15:43.049  INFO 3232 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.getTeacherList
2019-06-13 20:15:43.049  INFO 3232 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : [2, {page=1, limit=10, name=}]
2019-06-13 20:15:43.054  INFO 3232 --- [http-nio-8005-exec-6] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 6
2019-06-13 20:15:43.058  INFO 3232 --- [SimpleAsyncTaskExecutor-41] feign.RequestInterceptor                 : ------feign设置token157
2019-06-13 20:15:43.062 ERROR 3232 --- [SimpleAsyncTaskExecutor-41] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy197.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy197.save(Unknown Source) ~[na:na]
	at sun.reflect.GeneratedMethodAccessor181.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 13 common frames omitted

2019-06-13 20:15:53.971  INFO 3232 --- [http-nio-8005-exec-9] c.b.clouddocommon.aspect.WebLogAspect    : 请求地址 : http://Lenovo-PC:8005/user/roleId/3
2019-06-13 20:15:53.971  INFO 3232 --- [http-nio-8005-exec-9] c.b.clouddocommon.aspect.WebLogAspect    : HTTP METHOD : GET
2019-06-13 20:15:53.971  INFO 3232 --- [http-nio-8005-exec-9] c.b.clouddocommon.aspect.WebLogAspect    : CLASS_METHOD : com.bootdo.clouddoadmin.controller.UserController.getTeacherList
2019-06-13 20:15:53.971  INFO 3232 --- [http-nio-8005-exec-9] c.b.clouddocommon.aspect.WebLogAspect    : 参数 : [3, {page=1, limit=10, name=}]
2019-06-13 20:15:53.977  INFO 3232 --- [http-nio-8005-exec-9] c.b.clouddocommon.aspect.WebLogAspect    : 耗时 : 6
2019-06-13 20:15:53.979  INFO 3232 --- [SimpleAsyncTaskExecutor-42] feign.RequestInterceptor                 : ------feign设置token158
2019-06-13 20:15:53.989 ERROR 3232 --- [SimpleAsyncTaskExecutor-42] .a.i.SimpleAsyncUncaughtExceptionHandler : Unexpected error occurred invoking async method: public final com.bootdo.clouddocommon.utils.ResultBean com.sun.proxy.$Proxy197.save(com.bootdo.clouddocommon.dto.LogDO)

java.lang.RuntimeException: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:71) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	at feign.SynchronousMethodHandler.executeAndDecode(SynchronousMethodHandler.java:97) ~[feign-core-9.5.1.jar:na]
	at feign.SynchronousMethodHandler.invoke(SynchronousMethodHandler.java:76) ~[feign-core-9.5.1.jar:na]
	at feign.ReflectiveFeign$FeignInvocationHandler.invoke(ReflectiveFeign.java:103) ~[feign-core-9.5.1.jar:na]
	at com.sun.proxy.$Proxy197.save(Unknown Source) ~[na:na]
	at sun.reflect.GeneratedMethodAccessor181.invoke(Unknown Source) ~[na:na]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_181]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_181]
	at org.springframework.aop.support.AopUtils.invokeJoinpointUsingReflection(AopUtils.java:343) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.invokeJoinpoint(ReflectiveMethodInvocation.java:197) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at org.springframework.aop.interceptor.AsyncExecutionInterceptor.lambda$invoke$0(AsyncExecutionInterceptor.java:115) ~[spring-aop-5.0.8.RELEASE.jar:5.0.8.RELEASE]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[na:1.8.0_181]
	at java.lang.Thread.run(Thread.java:748) ~[na:1.8.0_181]
Caused by: com.netflix.client.ClientException: Load balancer does not have available server for client: api-base
	at com.netflix.loadbalancer.LoadBalancerContext.getServerFromLoadBalancer(LoadBalancerContext.java:483) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:184) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at com.netflix.loadbalancer.reactive.LoadBalancerCommand$1.call(LoadBalancerCommand.java:180) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:94) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeConcatMap.call(OnSubscribeConcatMap.java:42) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.unsafeSubscribe(Observable.java:10327) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber$1.call(OperatorRetryWithPredicate.java:127) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.enqueue(TrampolineScheduler.java:73) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.schedulers.TrampolineScheduler$InnerCurrentThreadScheduler.schedule(TrampolineScheduler.java:52) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:79) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OperatorRetryWithPredicate$SourceSubscriber.onNext(OperatorRetryWithPredicate.java:45) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$WeakSingleProducer.request(ScalarSynchronousObservable.java:276) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Subscriber.setProducer(Subscriber.java:209) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:138) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.util.ScalarSynchronousObservable$JustOnSubscribe.call(ScalarSynchronousObservable.java:129) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:48) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10423) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.Observable.subscribe(Observable.java:10390) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.blockForSingle(BlockingObservable.java:443) ~[rxjava-1.3.8.jar:1.3.8]
	at rx.observables.BlockingObservable.single(BlockingObservable.java:340) ~[rxjava-1.3.8.jar:1.3.8]
	at com.netflix.client.AbstractLoadBalancerAwareClient.executeWithLoadBalancer(AbstractLoadBalancerAwareClient.java:112) ~[ribbon-loadbalancer-2.2.5.jar:2.2.5]
	at org.springframework.cloud.openfeign.ribbon.LoadBalancerFeignClient.execute(LoadBalancerFeignClient.java:63) ~[spring-cloud-openfeign-core-2.0.1.RELEASE.jar:2.0.1.RELEASE]
	... 13 common frames omitted

2019-06-13 20:19:49.128  INFO 3232 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 20:24:49.128  INFO 3232 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 20:25:45.495  INFO 3232 --- [MessageBroker-1] o.s.w.s.c.WebSocketMessageBrokerStats    : WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 2, active threads = 1, queued tasks = 0, completed tasks = 1]
2019-06-13 20:29:49.130  INFO 3232 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 20:34:49.131  INFO 3232 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 20:39:49.132  INFO 3232 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 20:44:49.133  INFO 3232 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 20:49:49.134  INFO 3232 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 20:54:49.135  INFO 3232 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 20:55:45.602  INFO 3232 --- [MessageBroker-2] o.s.w.s.c.WebSocketMessageBrokerStats    : WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 3, active threads = 1, queued tasks = 0, completed tasks = 2]
2019-06-13 20:59:49.244  INFO 3232 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 21:04:49.245  INFO 3232 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 21:09:49.354  INFO 3232 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 21:14:49.364  INFO 3232 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 21:19:49.385  INFO 3232 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 21:24:49.494  INFO 3232 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
2019-06-13 21:25:45.598  INFO 3232 --- [MessageBroker-1] o.s.w.s.c.WebSocketMessageBrokerStats    : WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannelpool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 0, completed tasks = 3]
2019-06-13 21:29:49.604  INFO 3232 --- [AsyncResolver-bootstrap-executor-0] c.n.d.s.r.aws.ConfigClusterResolver      : Resolving eureka endpoints via configuration
