server:
  port: 8001

eureka:
  client:
    registerWithEureka: false
    fetchRegistry: false
    serviceUrl:
      defaultZone: http://localhost:${server.port}/eureka/
  instance:
    # 心跳时间，即服务续约间隔时间（缺省为30s）
    lease-renewal-interval-in-seconds: 5 #表示eureka client发送心跳给server端的频率。如果在leaseExpirationDurationInSeconds后，server端没有收到client的心跳，则将摘除该instance。除此之外，如果该instance实现了HealthCheckCallback，并决定让自己unavailable的话，则该instance也不会接收到流量。
    # 发呆时间，即服务续约到期时间（缺省为90s）
    #如果该值太大，则很可能将流量转发过去的时候，该instance已经不存活了。
    #如果该值设置太小了，则instance则很可能因为临时的网络抖动而被摘除掉。
    #该值至少应该大于leaseRenewalIntervalInSeconds
    lease-expiration-duration-in-seconds: 10 #表示eureka server至上一次收到client的心跳之后，等待下一次心跳的超时时间，在这个时间内若没收到下一次心跳，则将移除该instance。
  server:
    #开启Eureka的自我保护机制
    enable-self-preservation: true
    #清理无效节点的时间间隔
    eviction-interval-timer-in-ms: 5000
#饥饿加载，防止初次创建RibbonClient时间过长导致崩溃
ribbon:
  eager-load:
    enabled: true
    clients:
    -  api-admin, api-base, api-cms #配置相关服务
